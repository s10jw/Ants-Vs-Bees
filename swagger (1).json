{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "integrations@quorum.us",
      "name": "API Support"
    },
    "description": "\n<h1>Quorum RESTful API</h1>\n<h3>Interacting with Quorum through API Calls</h3>\n\n<p>Quorum has implemented a RESTful API interface for external users.<br><br>\n\n<em>In order to access the API:</em><br>\nYour organization must have contracted for API access with Quorum (this is an additional cost - please talk to your Customer Success Manager\n if you do not yet have API access on your contract).<br>\nThe Quorum User that will access the API must have an API key generated for them - please request new API keys through your Customer Success Manager.</p>\n\n<h3>Getting Information from Quorum</h3>\n<p>Once API access is enabled for your organization and keys are generated for your user, request endpoints follow a standard API format, for example:<br>\n\nhttps://www.quorum.us/api/newperson/?id=300087&username=<b>QUORUM_USERNAME</b>&api_key=<b>API_KEY</b><br>\n\nPosting a GET request to this endpoint with a valid username and api_key will return the JSON body representing Chuck Schumer, D-NY,\n whose Quorum ID is 300087.</p>\n\n<p>The endpoint base path for all requests will be \"https://www.quorum.us/api/...\". Ensure that you use the \"www\" in the endpoint path; GET requests\n without it will operate as normal, but PATCH and POST requests will fail.<br>\n\nUnderneath this base path, the endpoints described in the left panel are available for the various Quorum Datasets. There are other endpoints that\n are not documented currently - they are available to you to use, but we do not provide any support for their use. Also, they may be removed or made\n unabailable without notice.</p>\n\n\n<p>The response to any GET request to any endpoints is a JSON payload consisting of two base elements: \"meta\" and \"objects\":<br>\nThe meta element returns overhead data about the query, including the Limit set, the current offset, the URL for the previous and\nnext sets of results (if applicable), and the total count returned by the query.<br>\n\nThe objects element returns the actual results of the query as an array of subelements.<br>\n\nNote that many results return a one-to-many or many-to-many relationship to objects in other datasets; for example,\n in the Alerts dataset, each alert has a one-to-many relationship with the Alert_Group dataset, shown by the \"Alert_group\"\n metadata returned with any request to the Alert endpoint. You can often filter based on data within these related objects\n using a double-underscore notation to attributes of the related object:<br>\n\nrelated_object__id<br>\nRelated object has ID of the specified value.</p>\n\n<h3>Editing Information in Quorum</h3>\n<p>To edit fields that may be edited by the user within Quorum, send the API request as a PATCH request rather than a GET request,\n and populate a JSON payload with elements for the data being posted.  The response status of 200 indicates a successful update,\n and will also include the updated object.</p>\n\n<p>To create a new item that may be created by the user within Quorum, send the API request as a POST request rather than a GET request,\n and populate a JSON payload with the elements for the new item. The response status of 200 indicates a successful creation, and will\n also include the newly created object.</p>\n\n<p>One aspect to note when updating or creating objects that refer to other objects in Quorum, such as adding a Note related to a Bill or\n Official: the related item is specified as a fully qualified URI, rather than just an ID number.  For example, on GET requests, the\n Quorum User is specified as \"/api/user/XXXX\" rather than just an ID number; similarly, when POSTing or PATCHing a related field, a value\n in the format \"/api/<endpoint>/<id>\" is required.</p>\n\n<h3>Getting Support</h3>\n<p>Please do not hesitate to reach out to your Customer Success Manager if you have additional questions about implementing an API interface.</p>\n",
    "title": "Quorum API",
    "version": "Main"
  },
  "security": [
    {
      "api_key": [],
      "user_name": []
    }
  ],
  "tags": [
    {
      "description": "The endpoint for Amendments within the Bills dataset, including all legislation available to your Quorum account.",
      "name": "Bill Amendments"
    },
    {
      "description": "The endpoint for sponsorship of Bills by Legislators.",
      "name": "Bill Sponsor"
    },
    {
      "description": "The endpoint for summaries of Bills.",
      "name": "Bill Summary"
    },
    {
      "description": "The endpoint for the Bills dataset, including all legislation available to your Quorum account.",
      "name": "Bills"
    },
    {
      "description": "The endpoint for Quorum Outbox email campaigns",
      "name": "Bulk Email"
    },
    {
      "description": "The endpoint for the Contacts dataset.",
      "name": "Contacts"
    },
    {
      "description": "The endpoint for the Counties geography data.",
      "name": "Counties"
    },
    {
      "description": "The endpoint for the Custom Fields in your account.",
      "name": "Custom Field"
    },
    {
      "description": "The endpoint for groups for Custom Fields.",
      "name": "Custom Field Groups"
    },
    {
      "description": "The endpoint for the Documents dataset, including all documents available to your Quorum account.",
      "name": "Documents"
    },
    {
      "description": "The endpoint for actions taken by your Contacts through the Action Center(s).",
      "name": "Grassroots Supporter Action"
    },
    {
      "description": "The endpoint for the custom Issues defined on your account.",
      "name": "Issue Management"
    },
    {
      "description": "The endpoint for Issues, as defined by your team within your Quourum instance.",
      "name": "Issues"
    },
    {
      "description": "The endpoint for the Committees dataset, including all committees & caucuses available within your Quorum account.",
      "name": "Legislative Committee or Caucus"
    },
    {
      "description": "The endpoint for outbox Message Events, including opens and clicks.",
      "name": "Message Event"
    },
    {
      "description": "The endpoint for the Municipalities geography data.",
      "name": "Municipalities"
    },
    {
      "description": "The endpoint for the Notes dataset, including all comments, historic interactions, and donations created in your Quorum account.",
      "name": "Notes"
    },
    {
      "description": "The endpoint for the Events dataset, covering official events.",
      "name": "Official Events"
    },
    {
      "description": "The endpoint for the Officials and Staffers datasets, including all Officials and Staffers available to your Quorum account.",
      "name": "Officials and Staffers"
    },
    {
      "description": "The endpoint for the information on your Quorum instance.",
      "name": "Organization"
    },
    {
      "description": "The endpoint for the Organizations dataset, including all organizations available to your Quorum account. NOTE: This includes both Quorum-provided organizations and your Custom Organizations, if applicable.",
      "name": "Organizations (Public & Custom)"
    },
    {
      "description": "The endpoint for Official & Staffer roles (periods of time in a specific office / job).",
      "name": "Person Role"
    },
    {
      "description": "The endpoint for the Quorum Users adminstration on your account.",
      "name": "Quorum Users"
    },
    {
      "description": "The endpoint for specific emails sent through Quorum Outbox.",
      "name": "Send Email"
    },
    {
      "description": "The endpoint for specific emails sent through Quorum Outbox that are over 1 year old.",
      "name": "Send Email (Archived)"
    },
    {
      "description": "The endpoint for the Teams dataset, for defining Teams and Team Membership.",
      "name": "Teams"
    },
    {
      "description": "The endpoint for Votes (on Bills).",
      "name": "Vote"
    }
  ],
  "paths": {
    "/api/bulkemail/": {
      "get": {
        "description": "The endpoint for Quorum Outbox email campaigns<br/><br/>",
        "operationId": "getbulkemail",
        "parameters": [
          {
            "description": "Whether the record has been soft-deleted or not.",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "How many emails sent by the bulk email have been clicked<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>clicks__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>clicks__gt</code>, <code>clicks__gte</code>, <code> clicks__lt</code>, <code> clicks__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "clicks",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "When the record was originally created.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>created__year</code>, <code>created__month</code>, <code>created__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Number of emails sent in the bulk email<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>email_count__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>email_count__gt</code>, <code>email_count__gte</code>, <code> email_count__lt</code>, <code> email_count__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "email_count",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The name that is shown in the Email from field. Defaults to quorum user<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>from_name__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>from_name__contains</code>, <code>from_name__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>from_name__startswith</code>, <code>from_name__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>from_name__endswith</code>, <code>from_name__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>from_name__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>from_name__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "from_name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Marks whether the email is a draft",
            "in": "query",
            "name": "is_draft",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Marks whether or not the sending of the email was delayed",
            "in": "query",
            "name": "is_scheduled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "This bool indicates if the email is pre outbox 2.0",
            "in": "query",
            "name": "old_outbox_email",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "How many emails sent by the bulk email have been opened<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>opens__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>opens__gt</code>, <code>opens__gte</code>, <code> opens__lt</code>, <code> opens__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "opens",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Number of people selected<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>person_count__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>person_count__gt</code>, <code>person_count__gte</code>, <code> person_count__lt</code>, <code> person_count__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "person_count",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The project for which the email was sent<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>projects__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "projects",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "the number of replies to a bulkemail<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>reply_count__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>reply_count__gt</code>, <code>reply_count__gte</code>, <code> reply_count__lt</code>, <code> reply_count__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "reply_count",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Email address that responses are directed to<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>reply_to_address__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>reply_to_address__contains</code>, <code>reply_to_address__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>reply_to_address__startswith</code>, <code>reply_to_address__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>reply_to_address__endswith</code>, <code>reply_to_address__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>reply_to_address__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "reply_to_address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The time the bulk email is scheduled to be sent. If scheduled to be sent now, then set to current time<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>sent_datetime__year</code>, <code>sent_datetime__month</code>, <code>sent_datetime__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "sent_datetime",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The subject of the email<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>subject__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>subject__contains</code>, <code>subject__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>subject__startswith</code>, <code>subject__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>subject__endswith</code>, <code>subject__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>subject__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "subject",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of supporters selected<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>supporter_count__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>supporter_count__gt</code>, <code>supporter_count__gte</code>, <code> supporter_count__lt</code>, <code> supporter_count__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "supporter_count",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "How many contacts unsubscribed from Outbox emails through a link on this email<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>unsubscribes__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>unsubscribes__gt</code>, <code>unsubscribes__gte</code>, <code> unsubscribes__lt</code>, <code> unsubscribes__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "unsubscribes",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "When the record was most recently updated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>updated__year</code>, <code>updated__month</code>, <code>updated__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "User id of the person that created the email; not always the same as the from_user (the email sender)<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>user__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "AB tested BulkEmail that this BulkEmail is a variant of<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>variant_of__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>variant_of__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "variant_of_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "AB Test Variant that this email is copied from, which we may send later as the winner<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>winner_of__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>winner_of__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "winner_of_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BulkEmail retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkEmail"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Outbox Campaigns based on search critera passed as GET Arguments",
        "tags": [
          "Bulk Email"
        ]
      }
    },
    "/api/bulkemail/{id}/": {
      "get": {
        "description": "The endpoint for Quorum Outbox email campaigns",
        "operationId": "get_bulk_bulkemail",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BulkEmail retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkEmail"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Outbox Campaign",
        "tags": [
          "Bulk Email"
        ]
      },
      "patch": {
        "description": "The endpoint for Quorum Outbox email campaigns",
        "operationId": "patch_bulk_bulkemail",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_bulkemailBulkemail"
        },
        "responses": {
          "200": {
            "description": "BulkEmail retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkEmail"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Update a single Bulk Email by ID",
        "tags": [
          "Bulk Email"
        ]
      },
      "post": {
        "description": "The endpoint for Quorum Outbox email campaigns",
        "operationId": "post_bulk_bulkemail",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_bulkemailBulkemail"
        },
        "responses": {
          "200": {
            "description": "BulkEmail retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkEmail"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Create a single Bulk Email",
        "tags": [
          "Bulk Email"
        ]
      }
    },
    "/api/committee/": {
      "get": {
        "description": "The endpoint for the Committees dataset, including all committees & caucuses available within your Quorum account.<br/><br/>",
        "operationId": "getcommittee",
        "parameters": [
          {
            "description": "A really short abbreviation for the committee if present. Has no special significance.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>abbrev__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>abbrev__contains</code>, <code>abbrev__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>abbrev__startswith</code>, <code>abbrev__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>abbrev__endswith</code>, <code>abbrev__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>abbrev__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>abbrev__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "abbrev",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Committee's physical address.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>address__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>address__contains</code>, <code>address__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>address__startswith</code>, <code>address__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>address__endswith</code>, <code>address__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>address__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>address__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An alphanumeric code used for the committee on THOMAS.gov / House.gov / Senate.gov. / Whoiswho<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>code__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>code__contains</code>, <code>code__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>code__startswith</code>, <code>code__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>code__endswith</code>, <code>code__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>code__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This field indicates whether the object is a commmittee,in which case the committee field is null, or a subcommittee,in which case this field gives the parent committee.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>committee__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>committee__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "committee_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Whether this is a Committee or a Caucus<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>committee_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>committee_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name CommitteeType, for an explanation of values.</p>",
            "in": "query",
            "name": "committee_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ]
            }
          },
          {
            "description": "Committee's fax number, from Know Who<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>fax__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>fax__contains</code>, <code>fax__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>fax__startswith</code>, <code>fax__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>fax__endswith</code>, <code>fax__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>fax__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>fax__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "fax",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Know Who abbreviation<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>kw_abbrev__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>kw_abbrev__contains</code>, <code>kw_abbrev__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>kw_abbrev__startswith</code>, <code>kw_abbrev__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>kw_abbrev__endswith</code>, <code>kw_abbrev__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>kw_abbrev__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>kw_abbrev__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "kw_abbrev",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Committee ID from Know Who<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>kw_comid__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>kw_comid__contains</code>, <code>kw_comid__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>kw_comid__startswith</code>, <code>kw_comid__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>kw_comid__endswith</code>, <code>kw_comid__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>kw_comid__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>kw_comid__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "kw_comid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "When the committee info was last updated by openstates.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>last_updated__year</code>, <code>last_updated__month</code>, <code>last_updated__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "last_updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Committee meeting documents<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>meeting_documents__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>meeting_documents__contains</code>, <code>meeting_documents__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>meeting_documents__startswith</code>, <code>meeting_documents__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>meeting_documents__endswith</code>, <code>meeting_documents__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>meeting_documents__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>meeting_documents__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "meeting_documents",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the committee or subcommittee.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>name__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>name__contains</code>, <code>name__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>name__startswith</code>, <code>name__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>name__endswith</code>, <code>name__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>name__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of members of this committee that are Democrats.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>num_dem_members__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>num_dem_members__gt</code>, <code>num_dem_members__gte</code>, <code> num_dem_members__lt</code>, <code> num_dem_members__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>num_dem_members__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "num_dem_members",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The number of members of this committee that are female.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>num_female_members__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>num_female_members__gt</code>, <code>num_female_members__gte</code>, <code> num_female_members__lt</code>, <code> num_female_members__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>num_female_members__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "num_female_members",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The number of members of this committee that are Independent.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>num_ind_members__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>num_ind_members__gt</code>, <code>num_ind_members__gte</code>, <code> num_ind_members__lt</code>, <code> num_ind_members__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>num_ind_members__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "num_ind_members",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The number of members of this committee that are male.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>num_male_members__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>num_male_members__gt</code>, <code>num_male_members__gte</code>, <code> num_male_members__lt</code>, <code> num_male_members__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>num_male_members__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "num_male_members",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The number of members in this committee.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>num_members__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>num_members__gt</code>, <code>num_members__gte</code>, <code> num_members__lt</code>, <code> num_members__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>num_members__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "num_members",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The number of members of this committee that are Republicans.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>num_rep_members__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>num_rep_members__gt</code>, <code>num_rep_members__gte</code>, <code> num_rep_members__lt</code>, <code> num_rep_members__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>num_rep_members__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "num_rep_members",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "True if this committee no longer exists.",
            "in": "query",
            "name": "obsolete",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "If a State Committee, it is the openstates code (if it has one -- many do not).<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>openstates_id__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>openstates_id__contains</code>, <code>openstates_id__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>openstates_id__startswith</code>, <code>openstates_id__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>openstates_id__endswith</code>, <code>openstates_id__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>openstates_id__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>openstates_id__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "openstates_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Committee's phone number, from Know Who/Who is Who<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>phone__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>phone__contains</code>, <code>phone__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>phone__startswith</code>, <code>phone__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>phone__endswith</code>, <code>phone__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>phone__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>phone__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "phone",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Manually edited relative rank of committee for display<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>rank__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>rank__gt</code>, <code>rank__gte</code>, <code> rank__lt</code>, <code> rank__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>rank__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "rank",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Which Region this Committee belongs in.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>region__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "in": "query",
            "name": "region",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                1000
              ]
            }
          },
          {
            "description": "The committee's majority website.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>url__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>url__contains</code>, <code>url__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>url__startswith</code>, <code>url__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>url__endswith</code>, <code>url__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>url__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>url__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "url",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The committee's minority website.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>url_minority__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>url_minority__contains</code>, <code>url_minority__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>url_minority__startswith</code>, <code>url_minority__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>url_minority__endswith</code>, <code>url_minority__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>url_minority__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>url_minority__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "url_minority",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Committee witnesses<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>witnesses__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>witnesses__contains</code>, <code>witnesses__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>witnesses__startswith</code>, <code>witnesses__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>witnesses__endswith</code>, <code>witnesses__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>witnesses__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>witnesses__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "witnesses",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Perform an advanced text search on the datset with the provided text. This search will use the most comprehensive search method available on the requested endpoint, but can take slightly longer to return results.",
            "in": "query",
            "name": "advanced_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Perform an quick text search on the datset with the provided text. This search method may, depending on the endpoint, be exactly identical to advanced search, or may return results significantly more quickly but with less completeness or accuracy, for example by searching less fields, or using a faster algorithm to identify matches that has a greater propensity for false positives/false negatives.",
            "in": "query",
            "name": "quick_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Committee retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committee"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Commitees or Caucuses based on search critera passed as GET Arguments",
        "tags": [
          "Legislative Committee or Caucus"
        ]
      }
    },
    "/api/committee/{id}/": {
      "get": {
        "description": "The endpoint for the Committees dataset, including all committees & caucuses available within your Quorum account.",
        "operationId": "get_bulk_committee",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Committee retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Committee"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Committee or Caucus",
        "tags": [
          "Legislative Committee or Caucus"
        ]
      }
    },
    "/api/county/": {
      "get": {
        "description": "The endpoint for the Counties geography data.<br/><br/>",
        "operationId": "getcounty",
        "parameters": [
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>fips_code__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>fips_code__gt</code>, <code>fips_code__gte</code>, <code> fips_code__lt</code>, <code> fips_code__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "fips_code",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>full_fips_string__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>full_fips_string__contains</code>, <code>full_fips_string__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>full_fips_string__startswith</code>, <code>full_fips_string__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>full_fips_string__endswith</code>, <code>full_fips_string__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>full_fips_string__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "full_fips_string",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Quorum ID (Primary Key)",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "County retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/County"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Counties based on search critera passed as GET Arguments",
        "tags": [
          "Counties"
        ]
      }
    },
    "/api/county/{id}/": {
      "get": {
        "description": "The endpoint for the Counties geography data.",
        "operationId": "get_bulk_county",
        "parameters": [
          {
            "description": "Quorum ID (Primary Key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "County retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/County"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single County",
        "tags": [
          "Counties"
        ]
      }
    },
    "/api/customfieldgroup/": {
      "get": {
        "description": "The endpoint for groups for Custom Fields.<br/><br/>",
        "operationId": "getcustomfieldgroup",
        "parameters": [
          {
            "description": "When the record was originally created.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>created__year</code>, <code>created__month</code>, <code>created__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Custom Field groups are organized by the Data Type they represent, such as Bill, Supporter, PublicOrganization, etc.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>data_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name QuorumDataType, for an explanation of values.</p>",
            "in": "query",
            "name": "data_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                12,
                14,
                15,
                16,
                17,
                18,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                123,
                124
              ]
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Name of custom field group<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>name__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>name__contains</code>, <code>name__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>name__startswith</code>, <code>name__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>name__endswith</code>, <code>name__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>name__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Quorum client associated with this record.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>organization__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "organization_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "When the record was most recently updated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>updated__year</code>, <code>updated__month</code>, <code>updated__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "User who owns this Custom Field Group<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>user__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CustomFieldGroup retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldGroup"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Custom Field Groups based on search critera passed as GET Arguments",
        "tags": [
          "Custom Field Groups"
        ]
      }
    },
    "/api/customfieldgroup/{id}/": {
      "get": {
        "description": "The endpoint for groups for Custom Fields.",
        "operationId": "get_bulk_customfieldgroup",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CustomFieldGroup retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldGroup"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Custom Field Group",
        "tags": [
          "Custom Field Groups"
        ]
      },
      "patch": {
        "description": "The endpoint for groups for Custom Fields.",
        "operationId": "patch_bulk_customfieldgroup",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_customfieldgroupCustomfieldgroup"
        },
        "responses": {
          "200": {
            "description": "CustomFieldGroup retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldGroup"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Update a single Custom Field Groups by ID",
        "tags": [
          "Custom Field Groups"
        ]
      },
      "post": {
        "description": "The endpoint for groups for Custom Fields.",
        "operationId": "post_bulk_customfieldgroup",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_customfieldgroupCustomfieldgroup"
        },
        "responses": {
          "200": {
            "description": "CustomFieldGroup retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldGroup"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Create a single Custom Field Groups",
        "tags": [
          "Custom Field Groups"
        ]
      }
    },
    "/api/customtag/": {
      "get": {
        "description": "The endpoint for the Custom Fields in your account.<br/><br/>",
        "operationId": "getcustomtag",
        "parameters": [
          {
            "description": "Whether the record has been soft-deleted or not.",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The custom field group in which this custom field should display, if any.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>group__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>group__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "group_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The Quorum client associated with this record.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>organization__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "organization_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Represent the owner model for this CustomTag, e.g. Supporter, PublicOrganization<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>tag_owner__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name QuorumDataType, for an explanation of values.</p>",
            "in": "query",
            "name": "tag_owner",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                12,
                14,
                15,
                16,
                17,
                18,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                123,
                124
              ]
            }
          },
          {
            "description": "The type of the custom tag, e.g. Number, String, Choose One, Choose Many, etc.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>tag_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name TagType, for an explanation of values.</p>",
            "in": "query",
            "name": "tag_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                5,
                6,
                7,
                8
              ]
            }
          },
          {
            "description": "When the record was most recently updated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>updated__year</code>, <code>updated__month</code>, <code>updated__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CustomTag retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomTag"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Custom Fields based on search critera passed as GET Arguments",
        "tags": [
          "Custom Field"
        ]
      }
    },
    "/api/customtag/{id}/": {
      "get": {
        "description": "The endpoint for the Custom Fields in your account.",
        "operationId": "get_bulk_customtag",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CustomTag retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomTag"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Custom Field",
        "tags": [
          "Custom Field"
        ]
      },
      "patch": {
        "description": "The endpoint for the Custom Fields in your account.",
        "operationId": "patch_bulk_customtag",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_customtagCustomtag"
        },
        "responses": {
          "200": {
            "description": "CustomTag retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomTag"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Update a single Custom Field by ID",
        "tags": [
          "Custom Field"
        ]
      },
      "post": {
        "description": "The endpoint for the Custom Fields in your account.",
        "operationId": "post_bulk_customtag",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_customtagCustomtag"
        },
        "responses": {
          "200": {
            "description": "CustomTag retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomTag"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Create a single Custom Field",
        "tags": [
          "Custom Field"
        ]
      }
    },
    "/api/event/": {
      "get": {
        "description": "The endpoint for the Events dataset, covering official events.<br/><br/><br/><br/><b>Sample queries:</b><br/><span class='sample-query'>www.quorum.us/api/event/12345/?username=[USERNAME]&api_key=[API_KEY]</span>",
        "operationId": "getevent",
        "parameters": [
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>address__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>address__contains</code>, <code>address__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>address__startswith</code>, <code>address__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>address__endswith</code>, <code>address__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>address__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>address__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The newamendments that are associated with this event.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>amendment_mentions__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "amendment_mentions",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "Whether the record has been soft-deleted or not.",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The records of Bills related to this event.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>bill_mentions__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "bill_mentions",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "What chamber does this event relate to?<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>chamber__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>chamber__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name CongressChamber, for an explanation of values.</p>",
            "in": "query",
            "name": "chamber",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4
              ]
            }
          },
          {
            "description": "The committees that are associated with this event.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>committee_mentions__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "committee_mentions",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>description__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>description__contains</code>, <code>description__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>description__startswith</code>, <code>description__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>description__endswith</code>, <code>description__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>description__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>description__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>end__year</code>, <code>end__month</code>, <code>end__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "end",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Sub-type used to differentiate within proxies<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>event_subtype__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>event_subtype__gt</code>, <code>event_subtype__gte</code>, <code> event_subtype__lt</code>, <code> event_subtype__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>event_subtype__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "event_subtype",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>event_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>event_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name EventType, for an explanation of values.</p>",
            "in": "query",
            "name": "event_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                1000
              ]
            }
          },
          {
            "description": "Additional information about the event, as required.",
            "in": "query",
            "name": "extra_info",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Hashtags used by social media<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>hashtags__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "hashtags",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Terms mentioned in press releases etc.<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br><p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>issue_mentions__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "issue_mentions",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "Where the meeting took place<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>location__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>location__contains</code>, <code>location__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>location__startswith</code>, <code>location__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>location__endswith</code>, <code>location__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>location__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>location__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "location",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The organization that owns this event.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>organization__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>organization__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "organization_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The records of People (Officials or Staffers) related to this event.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>person_mentions__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "person_mentions",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The organization's point person for this event.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>point_person__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>point_person__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "point_person_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "What region does this event relate to?<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>region__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "in": "query",
            "name": "region",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                1000
              ]
            }
          },
          {
            "description": "The legsession with which this event is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>session__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>session__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "session_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The committee with which this event is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>source_committee__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>source_committee__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "source_committee_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The newperson with which this event is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>source_person__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>source_person__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "source_person_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The None with which this event is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>source_staffer__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>source_staffer__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "source_staffer_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>source_url__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>source_url__contains</code>, <code>source_url__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>source_url__startswith</code>, <code>source_url__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>source_url__endswith</code>, <code>source_url__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>source_url__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>source_url__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "source_url",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The organization that sponsors this event.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>sponsoring_organization__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>sponsoring_organization__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "sponsoring_organization_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>subject__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>subject__contains</code>, <code>subject__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>subject__startswith</code>, <code>subject__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>subject__endswith</code>, <code>subject__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>subject__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>subject__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "subject",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The records of Votes related to this event.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>vote_mentions__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "vote_mentions",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>when__year</code>, <code>when__month</code>, <code>when__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "when",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Witnesses that will be at the event.<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br><p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>witnesses__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "witnesses",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "Perform an advanced text search on the datset with the provided text. This search will use the most comprehensive search method available on the requested endpoint, but can take slightly longer to return results.",
            "in": "query",
            "name": "advanced_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple events based on search critera passed as GET Arguments",
        "tags": [
          "Official Events"
        ]
      }
    },
    "/api/event/{id}/": {
      "get": {
        "description": "The endpoint for the Events dataset, covering official events.",
        "operationId": "get_bulk_event",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Official Event",
        "tags": [
          "Official Events"
        ]
      },
      "patch": {
        "description": "The endpoint for the Events dataset, covering official events.",
        "operationId": "patch_bulk_event",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_eventEvent"
        },
        "responses": {
          "200": {
            "description": "Event retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Update a single Official Events by ID",
        "tags": [
          "Official Events"
        ]
      },
      "post": {
        "description": "The endpoint for the Events dataset, covering official events.",
        "operationId": "post_bulk_event",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_eventEvent"
        },
        "responses": {
          "200": {
            "description": "Event retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Create a single Official Events",
        "tags": [
          "Official Events"
        ]
      }
    },
    "/api/issuemanagement/": {
      "get": {
        "description": "The endpoint for Issues, as defined by your team within your Quourum instance.<br/><br/>",
        "operationId": "getissuemanagement",
        "parameters": [
          {
            "description": "Whether the record has been soft-deleted or not.",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether this issue should be an option for tagging interactions to",
            "in": "query",
            "name": "can_be_tagged_to_interactions",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "User id of the project creator<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>creator__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>creator__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "creator_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Whether or not this a default project",
            "in": "query",
            "name": "default",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "is_grassroots_issue",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>is_issue__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "is_issue",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Used to permission objects to only the creator of the object",
            "in": "query",
            "name": "is_limited_to_creator",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Name of the project<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>name__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>name__contains</code>, <code>name__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>name__startswith</code>, <code>name__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>name__endswith</code>, <code>name__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>name__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>name__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The organizations that are associated with this project.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>organizations__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "organizations",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "default owner of the project<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br><p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>owner__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>owner__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "owner_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The parent of this project<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>parent__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>parent__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "parent_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The quorumusers that are associated with this project.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>participants__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "participants",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>project_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>project_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name ProjectType, for an explanation of values.</p>",
            "in": "query",
            "name": "project_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3
              ]
            }
          },
          {
            "description": "The teams that are associated with this project.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>teams__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "teams",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>action_centers</code>  -  expand action_centers with additional details.<br><code>priority</code>  -  expand priority with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "action_centers",
                  "priority"
                ],
                "type": "string"
              }
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "IssueManagement retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueManagement"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Issues based on search critera passed as GET Arguments",
        "tags": [
          "Issues"
        ]
      }
    },
    "/api/issuemanagement/{id}/": {
      "get": {
        "description": "The endpoint for Issues, as defined by your team within your Quourum instance.",
        "operationId": "get_bulk_issuemanagement",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>action_centers</code>  -  expand action_centers with additional details.<br><code>priority</code>  -  expand priority with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "action_centers",
                  "priority"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "IssueManagement retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueManagement"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Issue",
        "tags": [
          "Issues"
        ]
      },
      "patch": {
        "description": "The endpoint for Issues, as defined by your team within your Quourum instance.",
        "operationId": "patch_bulk_issuemanagement",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_issuemanagementIssuemanagement"
        },
        "responses": {
          "200": {
            "description": "IssueManagement retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueManagement"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Update a single Issues by ID",
        "tags": [
          "Issues"
        ]
      },
      "post": {
        "description": "The endpoint for Issues, as defined by your team within your Quourum instance.",
        "operationId": "post_bulk_issuemanagement",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_issuemanagementIssuemanagement"
        },
        "responses": {
          "200": {
            "description": "IssueManagement retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueManagement"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Create a single Issues",
        "tags": [
          "Issues"
        ]
      }
    },
    "/api/messageevent/": {
      "get": {
        "description": "The endpoint for outbox Message Events, including opens and clicks.<br/><br/>",
        "operationId": "getmessageevent",
        "parameters": [
          {
            "description": "The bulkemail with which this messageevent is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>bulk_email__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>bulk_email__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "bulk_email_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "this is the name of a specific event (ex. click, called Event on Sparkpost)<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>event_name__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>event_name__contains</code>, <code>event_name__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>event_name__startswith</code>, <code>event_name__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>event_name__endswith</code>, <code>event_name__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>event_name__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>event_name__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "event_name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "timestamp for when the event occurred<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>event_timestamp__year</code>, <code>event_timestamp__month</code>, <code>event_timestamp__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "event_timestamp",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The sendemail with which this messageevent is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>send_email__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>send_email__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "send_email_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MessageEvent retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageEvent"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Message Events based on search critera passed as GET Arguments",
        "tags": [
          "Message Event"
        ]
      }
    },
    "/api/messageevent/{id}/": {
      "get": {
        "description": "The endpoint for outbox Message Events, including opens and clicks.",
        "operationId": "get_bulk_messageevent",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MessageEvent retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageEvent"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Message Event.",
        "tags": [
          "Message Event"
        ]
      }
    },
    "/api/municipality/": {
      "get": {
        "description": "The endpoint for the Municipalities geography data.<br/><br/>",
        "operationId": "getmunicipality",
        "parameters": [
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>fips_code__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>fips_code__gt</code>, <code>fips_code__gte</code>, <code> fips_code__lt</code>, <code> fips_code__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "fips_code",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>full_fips_string__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>full_fips_string__contains</code>, <code>full_fips_string__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>full_fips_string__startswith</code>, <code>full_fips_string__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>full_fips_string__endswith</code>, <code>full_fips_string__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>full_fips_string__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "full_fips_string",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Quorum ID (Primary Key)",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Municipality retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Municipality"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Municipalities based on search critera passed as GET Arguments",
        "tags": [
          "Municipalities"
        ]
      }
    },
    "/api/municipality/{id}/": {
      "get": {
        "description": "The endpoint for the Municipalities geography data.",
        "operationId": "get_bulk_municipality",
        "parameters": [
          {
            "description": "Quorum ID (Primary Key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Municipality retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Municipality"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Municipality",
        "tags": [
          "Municipalities"
        ]
      }
    },
    "/api/newamendment/": {
      "get": {
        "description": "The endpoint for Amendments within the Bills dataset, including all legislation available to your Quorum account.<br/><br/><br/><br/><b>Sample queries:</b><br/><span class='sample-query'>www.quorum.us/api/newamendment/12345/?username=[USERNAME]&api_key=[API_KEY]</span><br/><span class='sample-query'>www.quorum.us/api/newamendment/?title__contains=infrastructure&username=[USERNAME]&api_key=[API_KEY]</span>",
        "operationId": "getnewamendment",
        "parameters": [
          {
            "description": "String-encoded JSON Object. This field requires special handling.",
            "in": "query",
            "name": "actions",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The amendment's type, indicating the chmaber in which the amendment was offered.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>amendment_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AmendmentType, for an explanation of values.</p>",
            "in": "query",
            "name": "amendment_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2
              ]
            }
          },
          {
            "description": "The bill the amendment amends.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>bill__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>bill__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "bill_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The Congress object in which the amendment was offerred. The current Congress is 117.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>congress__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "congress_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The number of the congress (for indexing, etc.)<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>congress_number__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>congress_number__gt</code>, <code>congress_number__gte</code>, <code> congress_number__lt</code>, <code> congress_number__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>congress_number__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "congress_number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "A description of the amendment.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>description__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>description__contains</code>, <code>description__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>description__startswith</code>, <code>description__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>description__endswith</code>, <code>description__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>description__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>description__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The dms_id for each amendment, if applicable<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>dms_id__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>dms_id__contains</code>, <code>dms_id__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>dms_id__startswith</code>, <code>dms_id__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>dms_id__endswith</code>, <code>dms_id__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>dms_id__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>dms_id__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "dms_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Number of cosponsors that a amendment has.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>num_cosponsors__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>num_cosponsors__gt</code>, <code>num_cosponsors__gte</code>, <code> num_cosponsors__lt</code>, <code> num_cosponsors__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "num_cosponsors",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The amendment's number according to the Library of Congress's H.Amdt and S.Amdt numbering (just the integer part).<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>number__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>number__gt</code>, <code>number__gte</code>, <code> number__lt</code>, <code> number__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>number__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The date the amendment was offered.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>offered_date__year</code>, <code>offered_date__month</code>, <code>offered_date__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "offered_date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Party of majority of sponsors<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>primary_party__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>primary_party__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Party, for an explanation of values.</p>",
            "in": "query",
            "name": "primary_party",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21
              ]
            }
          },
          {
            "description": "The region that the amendment belongs to.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>region__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "in": "query",
            "name": "region",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                1000
              ]
            }
          },
          {
            "description": "The number given by rules.house.gov<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>rules_number__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>rules_number__gt</code>, <code>rules_number__gte</code>, <code> rules_number__lt</code>, <code> rules_number__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>rules_number__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "rules_number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The amendment's status according to rules.house.gov.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>rules_status__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>rules_status__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AmendmentRulesStatus, for an explanation of values.</p>",
            "in": "query",
            "name": "rules_status",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5
              ]
            }
          },
          {
            "description": "For House amendments, the sequence number of the amendment (unique within a bill).<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>sequence__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>sequence__gt</code>, <code>sequence__gte</code>, <code> sequence__lt</code>, <code> sequence__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>sequence__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "sequence",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The LegSession object in which the amendment was introduced.<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br><p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>session__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>session__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "session_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The source of this amendment<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>source__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AmendmentSource, for an explanation of values.</p>",
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3
              ]
            }
          },
          {
            "description": "The sponsors of this amendment.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>sponsors__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "sponsors",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The amendment's current status.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>status__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AmendmentStatus, for an explanation of values.</p>",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4
              ]
            }
          },
          {
            "description": "The date that the amendment was last acted upon.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>status_date__year</code>, <code>status_date__month</code>, <code>status_date__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "status_date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "A title for the amendment.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>title__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>title__contains</code>, <code>title__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>title__startswith</code>, <code>title__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>title__endswith</code>, <code>title__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>title__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "title",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Perform an advanced text search on the datset with the provided text. This search will use the most comprehensive search method available on the requested endpoint, but can take slightly longer to return results.",
            "in": "query",
            "name": "advanced_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Perform an quick text search on the datset with the provided text. This search method may, depending on the endpoint, be exactly identical to advanced search, or may return results significantly more quickly but with less completeness or accuracy, for example by searching less fields, or using a faster algorithm to identify matches that has a greater propensity for false positives/false negatives.",
            "in": "query",
            "name": "quick_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewAmendment retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewAmendment"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Amendments based on search critera passed as GET Arguments",
        "tags": [
          "Bill Amendments"
        ]
      }
    },
    "/api/newamendment/{id}/": {
      "get": {
        "description": "The endpoint for Amendments within the Bills dataset, including all legislation available to your Quorum account.",
        "operationId": "get_bulk_newamendment",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewAmendment retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewAmendment"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Amendment",
        "tags": [
          "Bill Amendments"
        ]
      }
    },
    "/api/newbill/": {
      "get": {
        "description": "The endpoint for the Bills dataset, including all legislation available to your Quorum account.<br/><br/><br/><br/><b>Sample queries:</b><br/><span class='sample-query'>www.quorum.us/api/newbill/12345/?username=[USERNAME]&api_key=[API_KEY]</span><br/><span class='sample-query'>www.quorum.us/api/newbill/?title__contains=infrastructure&username=[USERNAME]&api_key=[API_KEY]</span>",
        "operationId": "getnewbill",
        "parameters": [
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>amendment_count__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>amendment_count__gt</code>, <code>amendment_count__gte</code>, <code> amendment_count__lt</code>, <code> amendment_count__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>amendment_count__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "amendment_count",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The bill's type (e.g. H.R., S., H.J.Res. etc.)<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>bill_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name BillType, for an explanation of values.</p>",
            "in": "query",
            "name": "bill_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13
              ]
            }
          },
          {
            "description": "Committees to which the bill has been referred.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>committees__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "committees",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The current status of the bill.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>current_general_status__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>current_general_status__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name GeneralBillStatus, for an explanation of values.</p>",
            "in": "query",
            "name": "current_general_status",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110
              ]
            }
          },
          {
            "description": "A more specific status of the bill.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>current_status__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name BillStatus, for an explanation of values.</p>",
            "in": "query",
            "name": "current_status",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                1000,
                1001,
                1002,
                1003,
                1004,
                1005,
                1006,
                1007,
                1008,
                1009,
                1010,
                1011,
                1012,
                1013,
                1014,
                1015,
                1016,
                1017,
                1018,
                1019,
                1020,
                1021,
                1022,
                1023,
                1024,
                1025,
                1026,
                1027,
                1028,
                1029,
                1030,
                1031,
                1031,
                1032,
                1033,
                1034,
                1035,
                1036,
                1037,
                1038,
                1039,
                1040,
                1041,
                1042,
                1043,
                1044,
                1045,
                1046,
                1047,
                1048,
                1049,
                1050,
                1051,
                1052,
                1053,
                1054,
                1055,
                1056,
                1057,
                1058,
                1059,
                1060,
                1061,
                1062,
                1063,
                1064,
                1065,
                1066,
                1067,
                1068,
                1069,
                1070,
                1071,
                1072,
                1073,
                1074,
                1075,
                1076,
                1077,
                1078,
                1079,
                1080,
                1081,
                1082,
                1083,
                1084,
                1085,
                1086,
                1087,
                1088,
                1089,
                1090,
                1091,
                1092,
                1093,
                1094,
                1095,
                1096,
                1097,
                1098,
                1099,
                1100,
                1101,
                1102,
                1103,
                1104,
                1105,
                1106,
                1107,
                1108,
                1109,
                1110,
                1111,
                1112,
                1113,
                1114,
                1115,
                1116,
                1117,
                1118,
                1119,
                1120,
                1121,
                1122,
                1123,
                1124,
                1125,
                1126,
                1127,
                1128,
                1129,
                1130,
                1131,
                1132,
                1133,
                1134,
                1135,
                1136,
                1137,
                1138,
                1139,
                1140,
                1141,
                1142,
                1143,
                1144,
                1145,
                1146,
                1147,
                1148,
                1149,
                1150,
                1151,
                1152,
                1153,
                1154,
                1155,
                1156,
                1157,
                1158,
                1159,
                1160,
                1161,
                1162,
                1163,
                1164,
                1165,
                1166,
                1167,
                1168,
                1169,
                1170,
                1171,
                1172,
                1173,
                1174,
                1175,
                1176,
                1177,
                1178,
                1179,
                1180,
                1181,
                1182,
                1183,
                1184,
                1185,
                1186,
                1187,
                1188,
                1200,
                1201,
                1202,
                1203,
                1204,
                1205,
                1206,
                1207,
                1208,
                1209,
                1210
              ]
            }
          },
          {
            "description": "The date of the last major action on the bill corresponding to the current_status.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>current_status_date__year</code>, <code>current_status_date__month</code>, <code>current_status_date__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "current_status_date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "fts_index",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The date the bill was introduced.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>introduced_date__year</code>, <code>introduced_date__month</code>, <code>introduced_date__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "introduced_date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Bill's type and number without state abbreviation (e.g. HB 1, SB 24)<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>label__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>label__contains</code>, <code>label__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>label__startswith</code>, <code>label__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>label__endswith</code>, <code>label__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>label__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>label__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "label",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date of the last major action on the bill.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>most_recent_action_date__year</code>, <code>most_recent_action_date__month</code>, <code>most_recent_action_date__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "most_recent_action_date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Number of committees a bill has been assigned to.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>num_committees__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>num_committees__gt</code>, <code>num_committees__gte</code>, <code> num_committees__lt</code>, <code> num_committees__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>num_committees__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "num_committees",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Number of cosponsors that a bill has.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>num_cosponsors__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>num_cosponsors__gt</code>, <code>num_cosponsors__gte</code>, <code> num_cosponsors__lt</code>, <code> num_cosponsors__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "num_cosponsors",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Number of democratic cosponsors that a bill has.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>num_democrat_cosponsors__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>num_democrat_cosponsors__gt</code>, <code>num_democrat_cosponsors__gte</code>, <code> num_democrat_cosponsors__lt</code>, <code> num_democrat_cosponsors__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>num_democrat_cosponsors__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "num_democrat_cosponsors",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Number of female cosponsors that a bill has.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>num_female_cosponsors__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>num_female_cosponsors__gt</code>, <code>num_female_cosponsors__gte</code>, <code> num_female_cosponsors__lt</code>, <code> num_female_cosponsors__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>num_female_cosponsors__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "num_female_cosponsors",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Number of independent cosponsors that a bill has.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>num_independent_cosponsors__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>num_independent_cosponsors__gt</code>, <code>num_independent_cosponsors__gte</code>, <code> num_independent_cosponsors__lt</code>, <code> num_independent_cosponsors__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>num_independent_cosponsors__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "num_independent_cosponsors",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Number of male cosponsors that a bill has.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>num_male_cosponsors__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>num_male_cosponsors__gt</code>, <code>num_male_cosponsors__gte</code>, <code> num_male_cosponsors__lt</code>, <code> num_male_cosponsors__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>num_male_cosponsors__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "num_male_cosponsors",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Number republican of cosponsors that a bill has.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>num_republican_cosponsors__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>num_republican_cosponsors__gt</code>, <code>num_republican_cosponsors__gte</code>, <code> num_republican_cosponsors__lt</code>, <code> num_republican_cosponsors__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>num_republican_cosponsors__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "num_republican_cosponsors",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Bill number without the type or state abbreviation (e.g. 24, 214)<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>number__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>number__gt</code>, <code>number__gte</code>, <code> number__lt</code>, <code> number__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Party of majority of sponsors. For Federal, party of the sponsor.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>primary_party__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>primary_party__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Party, for an explanation of values.</p>",
            "in": "query",
            "name": "primary_party",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21
              ]
            }
          },
          {
            "description": "The region whose legislature the bill was introduced in.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>region__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "in": "query",
            "name": "region",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                1000
              ]
            }
          },
          {
            "description": "The LegSession object in which the bill was introduced.<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br><p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>session__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>session__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "session_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The primary sponsor of the bill.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>sponsor__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>sponsor__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "sponsor_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The sponsors of this bill.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>sponsors__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "sponsors",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "Subject areas associated with the bill.<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br><p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>terms__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "terms",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The bill's primary display title, including its number.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>title__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>title__contains</code>, <code>title__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>title__startswith</code>, <code>title__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>title__endswith</code>, <code>title__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>title__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "title",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>vote_count__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>vote_count__gt</code>, <code>vote_count__gte</code>, <code> vote_count__lt</code>, <code> vote_count__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>vote_count__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "vote_count",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>word_count__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>word_count__gt</code>, <code>word_count__gte</code>, <code> word_count__lt</code>, <code> word_count__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>word_count__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "word_count",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "years_of_consideration",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>sponsors</code>  -  expand sponsors with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "sponsors"
                ],
                "type": "string"
              }
            }
          },
          {
            "description": "Perform an advanced text search on the datset with the provided text. This search will use the most comprehensive search method available on the requested endpoint, but can take slightly longer to return results.",
            "in": "query",
            "name": "advanced_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Perform an quick text search on the datset with the provided text. This search method may, depending on the endpoint, be exactly identical to advanced search, or may return results significantly more quickly but with less completeness or accuracy, for example by searching less fields, or using a faster algorithm to identify matches that has a greater propensity for false positives/false negatives.",
            "in": "query",
            "name": "quick_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewBill retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBill"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple bills based on search critera passed as GET Arguments",
        "tags": [
          "Bills"
        ]
      }
    },
    "/api/newbill/{id}/": {
      "get": {
        "description": "The endpoint for the Bills dataset, including all legislation available to your Quorum account.",
        "operationId": "get_bulk_newbill",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>sponsors</code>  -  expand sponsors with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "sponsors"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewBill retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBill"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Bill",
        "tags": [
          "Bills"
        ]
      }
    },
    "/api/newbillsummary/": {
      "get": {
        "description": "The endpoint for summaries of Bills.<br/><br/>",
        "operationId": "getnewbillsummary",
        "parameters": [
          {
            "description": "The newbill with which this billsummary is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>bill__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "bill_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewBillSummary retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBillSummary"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Bill Summaries based on search critera passed as GET Arguments",
        "tags": [
          "Bill Summary"
        ]
      }
    },
    "/api/newbillsummary/{id}/": {
      "get": {
        "description": "The endpoint for summaries of Bills.",
        "operationId": "get_bulk_newbillsummary",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewBillSummary retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBillSummary"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Bill Summary",
        "tags": [
          "Bill Summary"
        ]
      }
    },
    "/api/newdocument/": {
      "get": {
        "description": "The endpoint for the Documents dataset, including all documents available to your Quorum account.<br/><br/>",
        "operationId": "getnewdocument",
        "parameters": [
          {
            "description": "When the record was originally created.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>created__year</code>, <code>created__month</code>, <code>created__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>date__year</code>, <code>date__month</code>, <code>date__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>date_time__year</code>, <code>date_time__month</code>, <code>date_time__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "date_time",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The convergence of all types of types of document: FacebookPostType, PressReleaseType, CommitteeDocumentType, etc...<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>document_subtype__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>document_subtype__gt</code>, <code>document_subtype__gte</code>, <code> document_subtype__lt</code>, <code> document_subtype__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>document_subtype__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "document_subtype",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>document_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name DocumentType, for an explanation of values.</p>",
            "in": "query",
            "name": "document_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                5,
                6,
                7,
                9,
                10,
                17,
                18,
                21,
                22,
                23,
                24,
                25,
                27,
                34,
                35,
                38,
                39,
                40,
                41,
                43,
                44,
                45,
                46,
                47,
                50,
                52,
                53,
                54,
                55,
                56,
                57,
                64,
                65,
                67,
                68,
                71,
                72,
                73,
                74,
                101,
                1001,
                1002,
                1003,
                1004,
                1005,
                1006,
                1007,
                1008,
                1009,
                1010,
                1011,
                1012,
                1013,
                1014,
                1015,
                1016,
                1017,
                1018,
                1019
              ]
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "is_retweet",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The language of this document<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>language__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>language__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Language, for an explanation of values.</p>",
            "in": "query",
            "name": "language",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                9000
              ]
            }
          },
          {
            "description": "The original language of this document (it may have been translated)<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>original_language__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>original_language__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Language, for an explanation of values.</p>",
            "in": "query",
            "name": "original_language",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                9000
              ]
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>region__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>region__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "in": "query",
            "name": "region",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                1000
              ]
            }
          },
          {
            "description": "The committee with which this document is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>source_committee__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>source_committee__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "source_committee_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The newperson with which this document is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>source_person__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>source_person__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "source_person_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The publicorganization with which this document is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>source_public_organization__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>source_public_organization__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "source_public_organization_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>source_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name DocumentSourceType, for an explanation of values.</p>",
            "in": "query",
            "name": "source_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                100
              ]
            }
          },
          {
            "description": "Perform an advanced text search on the datset with the provided text. This search will use the most comprehensive search method available on the requested endpoint, but can take slightly longer to return results.",
            "in": "query",
            "name": "advanced_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewDocument retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewDocument"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple documents based on search critera passed as GET Arguments",
        "tags": [
          "Documents"
        ]
      }
    },
    "/api/newdocument/{id}/": {
      "get": {
        "description": "The endpoint for the Documents dataset, including all documents available to your Quorum account.",
        "operationId": "get_bulk_newdocument",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewDocument retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewDocument"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Document",
        "tags": [
          "Documents"
        ]
      }
    },
    "/api/newperson/": {
      "get": {
        "description": "The endpoint for the Officials and Staffers datasets, including all Officials and Staffers available to your Quorum account.<br/><br/>",
        "operationId": "getnewperson",
        "parameters": [
          {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MajorRoleType, for an explanation of values.</p>",
            "in": "query",
            "name": "_ph_dn_current_major_role_types",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9,
                  10,
                  11,
                  12,
                  13,
                  14,
                  15,
                  16,
                  17,
                  18,
                  19,
                  20,
                  21,
                  22,
                  23,
                  24,
                  25,
                  26,
                  27,
                  28,
                  29,
                  30,
                  31,
                  32,
                  33,
                  34,
                  35,
                  36,
                  37,
                  38,
                  39,
                  40,
                  41,
                  42,
                  43,
                  44,
                  45,
                  46,
                  47,
                  48,
                  49,
                  50,
                  51
                ],
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MinorRoleType, for an explanation of values.</p>",
            "in": "query",
            "name": "_ph_dn_current_minor_role_types",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9,
                  11,
                  12,
                  13,
                  14,
                  15,
                  16,
                  17,
                  18,
                  19,
                  20,
                  21,
                  22,
                  23,
                  24,
                  30,
                  31,
                  32,
                  33,
                  34,
                  35,
                  36,
                  37,
                  38,
                  39,
                  40,
                  41,
                  42,
                  43,
                  44,
                  45,
                  46,
                  47,
                  48,
                  49,
                  50,
                  51,
                  52,
                  53,
                  54,
                  55,
                  56,
                  57,
                  58,
                  59,
                  60,
                  61,
                  62,
                  63,
                  64,
                  65,
                  66,
                  67,
                  68,
                  69,
                  70,
                  71,
                  72,
                  73,
                  74,
                  75,
                  76,
                  77,
                  78,
                  79,
                  80,
                  81,
                  82,
                  83,
                  84,
                  85,
                  86,
                  87,
                  88,
                  89,
                  90,
                  91,
                  92,
                  93,
                  94,
                  95,
                  96,
                  97,
                  98,
                  99,
                  100,
                  101,
                  102,
                  103,
                  104,
                  105,
                  106,
                  107,
                  108,
                  109,
                  110,
                  111,
                  112,
                  113,
                  114,
                  115,
                  116,
                  117,
                  118,
                  119,
                  120,
                  121,
                  122,
                  123,
                  124,
                  125,
                  126,
                  127,
                  128,
                  129,
                  130,
                  131,
                  132,
                  133,
                  134,
                  135,
                  136,
                  137,
                  138,
                  139,
                  140,
                  141,
                  142,
                  143,
                  144,
                  145,
                  146,
                  147,
                  148,
                  149,
                  150,
                  151,
                  152,
                  153,
                  154,
                  155,
                  156,
                  157,
                  158,
                  159,
                  160,
                  161,
                  162,
                  163,
                  164,
                  165,
                  166,
                  167,
                  168,
                  169,
                  170,
                  171,
                  172,
                  173,
                  174,
                  175,
                  176,
                  177,
                  178,
                  179,
                  180,
                  181,
                  182,
                  183,
                  184,
                  185,
                  186,
                  187,
                  188,
                  189,
                  190,
                  191,
                  192,
                  193,
                  194,
                  195,
                  196,
                  197,
                  198,
                  199,
                  200,
                  201,
                  202,
                  203,
                  204,
                  205,
                  206,
                  207,
                  208,
                  209,
                  210,
                  211,
                  212,
                  213,
                  214,
                  215,
                  216,
                  217,
                  218,
                  219,
                  220,
                  221,
                  222,
                  223,
                  224,
                  225,
                  226,
                  227,
                  228,
                  229,
                  230,
                  231,
                  232,
                  233,
                  234,
                  235,
                  236,
                  237,
                  238,
                  239,
                  240,
                  241,
                  242,
                  243,
                  244,
                  245,
                  246,
                  247,
                  248,
                  249,
                  250,
                  251,
                  252,
                  253,
                  254,
                  255,
                  256,
                  257,
                  258,
                  259,
                  260,
                  261,
                  262,
                  263,
                  264,
                  265,
                  266,
                  267,
                  268,
                  269,
                  270,
                  271,
                  272,
                  273,
                  274,
                  275,
                  276,
                  277,
                  278,
                  279,
                  280,
                  281,
                  282,
                  283,
                  284,
                  285,
                  286,
                  287,
                  288,
                  289,
                  290,
                  291,
                  292,
                  293,
                  294,
                  295,
                  296,
                  297,
                  298,
                  299,
                  300,
                  301,
                  302,
                  303,
                  304,
                  305,
                  306,
                  307,
                  308,
                  309,
                  310,
                  311,
                  312,
                  313,
                  314,
                  315,
                  316,
                  317,
                  318,
                  319,
                  320,
                  321,
                  322,
                  323,
                  324,
                  325,
                  326,
                  327,
                  328,
                  329,
                  330,
                  331,
                  332,
                  333,
                  334,
                  335,
                  336,
                  337,
                  338,
                  339,
                  340,
                  341,
                  342,
                  343,
                  344,
                  345,
                  346,
                  347,
                  348,
                  349,
                  350,
                  351,
                  352,
                  353,
                  354,
                  355,
                  356,
                  357,
                  358,
                  360,
                  361,
                  362,
                  363,
                  364,
                  365,
                  366,
                  367,
                  368,
                  369,
                  370
                ],
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The person's birthday.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>birthday__year</code>, <code>birthday__month</code>, <code>birthday__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p><p><strong>Example Value:</strong> 22688</p>",
            "in": "query",
            "name": "birthday",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Whether this individual currently holds a role, or if this is archival information.",
            "in": "query",
            "name": "current",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The person's gender, if known. For historical data, the gender is sometimes not known.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>gender__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>gender__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Gender, for an explanation of values.</p><p><strong>Example Value:</strong> 2</p>",
            "in": "query",
            "name": "gender",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5
              ]
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.<p><strong>Example Value:</strong> 400013</p>",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MajorPersonType, for an explanation of values.</p>",
            "in": "query",
            "name": "major_person_types",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9,
                  10,
                  11,
                  12,
                  13,
                  14,
                  15,
                  16,
                  17,
                  18,
                  19,
                  20,
                  21,
                  22,
                  23,
                  24,
                  25
                ],
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The most recent political party of the person.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>most_recent_party__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>most_recent_party__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Party, for an explanation of values.</p><p><strong>Example Value:</strong> 1</p>",
            "in": "query",
            "name": "most_recent_party",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21
              ]
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>most_recent_person_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>most_recent_person_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PersonType, for an explanation of values.</p><p><strong>Example Value:</strong> 1</p>",
            "in": "query",
            "name": "most_recent_person_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                6,
                7,
                8,
                9
              ]
            }
          },
          {
            "description": "The most recent legislature the person has been a part of<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>most_recent_region__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>most_recent_region__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p><p><strong>Example Value:</strong> 1</p>",
            "in": "query",
            "name": "most_recent_region",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                1000
              ]
            }
          },
          {
            "description": "A shortcut to the most recent role of the person.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>most_recent_role__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>most_recent_role__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "most_recent_role_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>most_recent_role_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>most_recent_role_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name RoleType, for an explanation of values.</p><p><strong>Example Value:</strong> 1</p>",
            "in": "query",
            "name": "most_recent_role_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                38,
                999
              ]
            }
          },
          {
            "description": "Whether or not a member is brand new in their region.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>new_legislator__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "new_legislator",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The newperson with which this person is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>person__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>person__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "person_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The publicorganization with which this person is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>primary_organization__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>primary_organization__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "primary_organization_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The (international) region that this person represents as text, until we have shapefiles that we can map to<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>region_represented__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>region_represented__contains</code>, <code>region_represented__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>region_represented__startswith</code>, <code>region_represented__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>region_represented__endswith</code>, <code>region_represented__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>region_represented__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>region_represented__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "region_represented",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "show_in_quicksearch",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The status of this person (active, incoming, leaving or former).<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>status__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>status__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PersonStatus, for an explanation of values.</p>",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4
              ]
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>committee</code>  -  expand committee with additional details.<br><code>location</code>  -  expand location with additional details.<br><code>most_recent_country</code>  -  expand most_recent_country with additional details.<br><code>most_recent_role</code>  -  expand most_recent_role with additional details.<br><code>person</code>  -  expand person with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "committee",
                  "location",
                  "most_recent_country",
                  "most_recent_role",
                  "person"
                ],
                "type": "string"
              }
            }
          },
          {
            "description": "Perform an advanced text search on the datset with the provided text. This search will use the most comprehensive search method available on the requested endpoint, but can take slightly longer to return results.",
            "in": "query",
            "name": "advanced_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Perform an quick text search on the datset with the provided text. This search method may, depending on the endpoint, be exactly identical to advanced search, or may return results significantly more quickly but with less completeness or accuracy, for example by searching less fields, or using a faster algorithm to identify matches that has a greater propensity for false positives/false negatives.",
            "in": "query",
            "name": "quick_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewPerson retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewPerson"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple People (Officials or Staffers) based on search critera passed as GET Arguments",
        "tags": [
          "Officials and Staffers"
        ]
      }
    },
    "/api/newperson/{id}/": {
      "get": {
        "description": "The endpoint for the Officials and Staffers datasets, including all Officials and Staffers available to your Quorum account.",
        "operationId": "get_bulk_newperson",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.<p><strong>Example Value:</strong> 400013</p>",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>committee</code>  -  expand committee with additional details.<br><code>location</code>  -  expand location with additional details.<br><code>most_recent_country</code>  -  expand most_recent_country with additional details.<br><code>most_recent_role</code>  -  expand most_recent_role with additional details.<br><code>person</code>  -  expand person with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "committee",
                  "location",
                  "most_recent_country",
                  "most_recent_role",
                  "person"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewPerson retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewPerson"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Person (Official or Staffer)",
        "tags": [
          "Officials and Staffers"
        ]
      }
    },
    "/api/newpersonrole/": {
      "get": {
        "description": "The endpoint for Official & Staffer roles (periods of time in a specific office / job).<br/><br/>",
        "operationId": "getnewpersonrole",
        "parameters": [
          {
            "description": "Whether this PersonRole is currently applicable/currently held. Should be completely redundant given startdate and enddate.",
            "in": "query",
            "name": "current",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "For representatives, the number of their congressional district. 0 for at-large districts.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>district__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>district__gt</code>, <code>district__gte</code>, <code> district__lt</code>, <code> district__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>district__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "district",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The district with which this personrole is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>district_obj__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>district_obj__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "district_obj_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "How the person was elected to congress<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>electcode__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>electcode__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name ElectCode, for an explanation of values.</p>",
            "in": "query",
            "name": "electcode",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5
              ]
            }
          },
          {
            "description": "The date the role ended (when the person resigned, died, etc.)<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>enddate__year</code>, <code>enddate__month</code>, <code>enddate__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "enddate",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Seat status from Know Who<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>kw_seat_status__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>kw_seat_status__contains</code>, <code>kw_seat_status__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>kw_seat_status__startswith</code>, <code>kw_seat_status__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>kw_seat_status__endswith</code>, <code>kw_seat_status__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>kw_seat_status__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>kw_seat_status__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "kw_seat_status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Seat status code from Know Who",
            "in": "query",
            "name": "kw_seat_status_code",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Percentage of vote in last election<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>lastelection__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>lastelection__gt</code>, <code>lastelection__gte</code>, <code> lastelection__lt</code>, <code> lastelection__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>lastelection__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "lastelection",
            "required": false,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          },
          {
            "description": "The last known leadership role held during this role, if any.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>leadership_title__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>leadership_title__contains</code>, <code>leadership_title__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>leadership_title__startswith</code>, <code>leadership_title__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>leadership_title__endswith</code>, <code>leadership_title__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>leadership_title__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>leadership_title__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "leadership_title",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The lowerld with which this personrole is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>lower_district_obj__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>lower_district_obj__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "lower_district_obj_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Most recent office address (shorter form)<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>office__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>office__contains</code>, <code>office__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>office__startswith</code>, <code>office__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>office__endswith</code>, <code>office__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>office__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>office__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "office",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The political party of the person.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>party__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>party__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Party, for an explanation of values.</p>",
            "in": "query",
            "name": "party",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21
              ]
            }
          },
          {
            "description": "The name of the political party<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>party_name__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>party_name__contains</code>, <code>party_name__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>party_name__startswith</code>, <code>party_name__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>party_name__endswith</code>, <code>party_name__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>party_name__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "party_name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The newperson with which this personrole is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>person__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>person__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "person_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The last known phone number of the official during this role, if known.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>phone__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>phone__contains</code>, <code>phone__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>phone__startswith</code>, <code>phone__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>phone__endswith</code>, <code>phone__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>phone__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>phone__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "phone",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "When is the person up for reelection<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>reelectionyear__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>reelectionyear__gt</code>, <code>reelectionyear__gte</code>, <code> reelectionyear__lt</code>, <code> reelectionyear__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>reelectionyear__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "reelectionyear",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The Region which the person role is for.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>region__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "in": "query",
            "name": "region",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                1000
              ]
            }
          },
          {
            "description": "The type of role this person has, like representative or municipal_executive<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>role_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>role_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name RoleType, for an explanation of values.</p>",
            "in": "query",
            "name": "role_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                38,
                999
              ]
            }
          },
          {
            "description": "For senators, their election class, which determines which years they are up for election.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>senator_class__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>senator_class__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SenatorClass, for an explanation of values.</p>",
            "in": "query",
            "name": "senator_class",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3
              ]
            }
          },
          {
            "description": "For senators, their state rank, i.e. junior/senior. For historical data, this is their last known rank.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>senator_rank__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>senator_rank__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SenatorRank, for an explanation of values.</p>",
            "in": "query",
            "name": "senator_rank",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2
              ]
            }
          },
          {
            "description": "The date the role began (when the person took office).<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>startdate__year</code>, <code>startdate__month</code>, <code>startdate__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "startdate",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "For senators and representatives, the two-letter USPS abbrevation for the state or territory they are serving. Values are the abbreviations for the 50 states (each of which have at least one representative and two senators, assuming no vacancies) plus DC, PR, and the island territories AS, GU, MP, and VI (all of which have a non-voting delegate), and for really old historical data you will also find PI (Philippines, 1907-1946), DK (Dakota Territory, 1861-1889), and OR (Orleans Territory, 1806-1811) for non-voting delegates.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>state__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "('AK', 'Alaska')",
                "('AL', 'Alabama')",
                "('AR', 'Arkansas')",
                "('AS', 'American Samoa')",
                "('AZ', 'Arizona')",
                "('CA', 'California')",
                "('CO', 'Colorado')",
                "('CT', 'Connecticut')",
                "('DC', 'District of Columbia')",
                "('DE', 'Delaware')",
                "('DK', 'Dakota Territory')",
                "('FL', 'Florida')",
                "('GA', 'Georgia')",
                "('GU', 'Guam')",
                "('HI', 'Hawaii')",
                "('IA', 'Iowa')",
                "('ID', 'Idaho')",
                "('IL', 'Illinois')",
                "('IN', 'Indiana')",
                "('KS', 'Kansas')",
                "('KY', 'Kentucky')",
                "('LA', 'Louisiana')",
                "('MA', 'Massachusetts')",
                "('MD', 'Maryland')",
                "('ME', 'Maine')",
                "('MI', 'Michigan')",
                "('MN', 'Minnesota')",
                "('MO', 'Missouri')",
                "('MP', 'Northern Mariana Islands')",
                "('MS', 'Mississippi')",
                "('MT', 'Montana')",
                "('NC', 'North Carolina')",
                "('ND', 'North Dakota')",
                "('NE', 'Nebraska')",
                "('NH', 'New Hampshire')",
                "('NJ', 'New Jersey')",
                "('NM', 'New Mexico')",
                "('NV', 'Nevada')",
                "('NY', 'New York')",
                "('OH', 'Ohio')",
                "('OK', 'Oklahoma')",
                "('OL', 'Territory of Orleans')",
                "('OR', 'Oregon')",
                "('PA', 'Pennsylvania')",
                "('PI', 'Philippines Territory/Commonwealth')",
                "('PR', 'Puerto Rico')",
                "('RI', 'Rhode Island')",
                "('SC', 'South Carolina')",
                "('SD', 'South Dakota')",
                "('TN', 'Tennessee')",
                "('TX', 'Texas')",
                "('UT', 'Utah')",
                "('VA', 'Virginia')",
                "('VI', 'Virgin Islands')",
                "('VT', 'Vermont')",
                "('WA', 'Washington')",
                "('WI', 'Wisconsin')",
                "('WV', 'West Virginia')",
                "('WY', 'Wyoming')"
              ]
            }
          },
          {
            "description": "The state with which this personrole is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>state_obj__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>state_obj__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "state_obj_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Latitude from Zip-State combo for travel visualization<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>travelviz_latitude__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>travelviz_latitude__gt</code>, <code>travelviz_latitude__gte</code>, <code> travelviz_latitude__lt</code>, <code> travelviz_latitude__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>travelviz_latitude__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "travelviz_latitude",
            "required": false,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          },
          {
            "description": "Longitude from Zip-State combo for travel visualization<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>travelviz_longitude__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>travelviz_longitude__gt</code>, <code>travelviz_longitude__gte</code>, <code> travelviz_longitude__lt</code>, <code> travelviz_longitude__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>travelviz_longitude__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "travelviz_longitude",
            "required": false,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          },
          {
            "description": "The upperld with which this personrole is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>upper_district_obj__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>upper_district_obj__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "upper_district_obj_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The URL to the official website of the person during this role, if known.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>website__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>website__contains</code>, <code>website__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>website__startswith</code>, <code>website__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>website__endswith</code>, <code>website__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>website__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>website__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "website",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewPersonRole retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewPersonRole"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Roles based on search critera passed as GET Arguments",
        "tags": [
          "Person Role"
        ]
      }
    },
    "/api/newpersonrole/{id}/": {
      "get": {
        "description": "The endpoint for Official & Staffer roles (periods of time in a specific office / job).",
        "operationId": "get_bulk_newpersonrole",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewPersonRole retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewPersonRole"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Role",
        "tags": [
          "Person Role"
        ]
      }
    },
    "/api/newsponsor/": {
      "get": {
        "description": "The endpoint for sponsorship of Bills by Legislators.<br/><br/>",
        "operationId": "getnewsponsor",
        "parameters": [
          {
            "description": "The amendment being sponsored.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>amendment__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>amendment__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "amendment_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The bill being sponsored.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>bill__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>bill__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "bill_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The sponsoring person.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>person__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>person__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "person_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The type of sponsorship.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>sponsor_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SponsorType, for an explanation of values.</p>",
            "in": "query",
            "name": "sponsor_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                101,
                102,
                103,
                104,
                105,
                106
              ]
            }
          },
          {
            "description": "The original name given to this sponsor by a state website or EurLex (if EU).<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>state_name__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>state_name__contains</code>, <code>state_name__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>state_name__startswith</code>, <code>state_name__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>state_name__endswith</code>, <code>state_name__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>state_name__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>state_name__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "state_name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewSponsor retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewSponsor"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Sponsor relationships based on search critera passed as GET Arguments",
        "tags": [
          "Bill Sponsor"
        ]
      }
    },
    "/api/newsponsor/{id}/": {
      "get": {
        "description": "The endpoint for sponsorship of Bills by Legislators.",
        "operationId": "get_bulk_newsponsor",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewSponsor retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewSponsor"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single sponsor relationship",
        "tags": [
          "Bill Sponsor"
        ]
      }
    },
    "/api/newsupporter/": {
      "get": {
        "description": "The endpoint for the Contacts dataset.<br/><br/><br/><br/><b>Sample queries:</b><br/><span class='sample-query'>www.quorum.us/api/newsupporter/12345/?username=[USERNAME]&api_key=[API_KEY]</span><br/><span class='sample-query'>www.quorum.us/api/newsupporter/?firstname__iexact=john&username=[USERNAME]&api_key=[API_KEY]</span><br/><span class='sample-query'>www.quorum.us/api/newsupporter/?email__icontains=gmail.com&?username=[USERNAME]&api_key=[API_KEY]</span>",
        "operationId": "getnewsupporter",
        "parameters": [
          {
            "description": "Whether the string address has been geocoded into lat/lon pair.",
            "in": "query",
            "name": "address_geocoded",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the record has been soft-deleted or not.",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The district object for the U.S. House of Representatives district within which thisContact's geocoded primary address is located.<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br><p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>congressional_district__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>congressional_district__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "congressional_district_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "When the record was originally created.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>created__year</code>, <code>created__month</code>, <code>created__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Primary Email Address for this Contact; this is the address available in Outbox to email this Contact.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>email__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>email__contains</code>, <code>email__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>email__startswith</code>, <code>email__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>email__endswith</code>, <code>email__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>email__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>email__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Whether this contact is someone who would advocate on your behalf (for User information, does not impact Quorum application)<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>is_grassroots_supporter__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "is_grassroots_supporter",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether this contact is an influencer for your organization's public policy objectives. (for User information, does not impact Quorum application)<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>is_stakeholder_supporter__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "is_stakeholder_supporter",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The newpersons that are associated with this supporter.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>members__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "members",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "Full Name<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>name__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>name__contains</code>, <code>name__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>name__startswith</code>, <code>name__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>name__endswith</code>, <code>name__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>name__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>name__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Postal code of primary address.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>postal_code__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>postal_code__contains</code>, <code>postal_code__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>postal_code__startswith</code>, <code>postal_code__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>postal_code__endswith</code>, <code>postal_code__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>postal_code__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>postal_code__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "postal_code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The organization associated with the Supporter.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>public_organization__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>public_organization__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "public_organization_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>region__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>region__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "in": "query",
            "name": "region",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                1000
              ]
            }
          },
          {
            "description": "Our best guess as to the source of a particular thing, whether internal to Quorum, a particular website, etc.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>source_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name UTMSourceType, for an explanation of values.</p>",
            "in": "query",
            "name": "source_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22
              ]
            }
          },
          {
            "description": "The State object in the Geography model for this Contact's Geocoded primary address.<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br><p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>state__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>state__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "state_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Title.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>title__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>title__contains</code>, <code>title__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>title__startswith</code>, <code>title__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>title__endswith</code>, <code>title__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>title__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>title__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "title",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the contact is unsubscribed from your bulk emails.",
            "in": "query",
            "name": "unsubscribed_from_bulk_emails",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "When the record was most recently updated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>updated__year</code>, <code>updated__month</code>, <code>updated__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "When a contact is initially created in Quorum, the default value of \"valid_email\" is True. Accordingly, a better way to think about this field might be to invert it -- think of it as \"invalid_email\" where it would be initialized as false.\n\nUpon initial save of a contact object, we run a basic pattern match on the email to see if it matches the RFC standard for emails: '([a-zA-Z0-9_.+\\-']+@(?:[a-zA-Z0-9_\\-]+\\.)+[a-zA-Z0-9_\\-.]+)$'. In plain English, this means that any set of letters, numbers, dots, plus signs, and dashes followed by an @ sign and then a valid domain is permissible. If an email fails this test, the contact is immediately set to valid_email=False. Blank or null strings do not currently fail this test as our sending logic requires both the presence of a not-null not-empty email and valid_email being set to True.\n\nOnce we send an email to this contact, we start receiving responses from that recipient's email server and use those responses to determine if an email should be set to invalid -- this is the primary reason why that might occur. Generally, sending multiple emails to a bad, old, or fake email is one of the easiest ways to get added to email block lists and hurt your overall domain reputation, so we follow email sending best practices and set this field to false anytime we receive a hard block or spam block from this email. To classify actions, we use the fields provided by our email partner, Sparkpost, available here: https://www.sparkpost.com/docs/deliverability/bounce-classification-codes/. If an email receives a bounce event in the classification \"Hard\", \"Block\", or \"Admin\", we will set valid_email to false and not email it again.\n\nShould you wish to \"reset\" this field, you can either use Bulk Actions through the UI or a bulk upload to reset this field and try to email it again via Outbox. If we receive a further hard bounce from this email, we'll re-mark it as invalid; however, if your email is successfully delivered, you'll be able to continue emailing this person until you get another hard block of some kind.",
            "in": "query",
            "name": "valid_email",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Perform an advanced text search on the datset with the provided text. This search will use the most comprehensive search method available on the requested endpoint, but can take slightly longer to return results.",
            "in": "query",
            "name": "advanced_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Perform an quick text search on the datset with the provided text. This search method may, depending on the endpoint, be exactly identical to advanced search, or may return results significantly more quickly but with less completeness or accuracy, for example by searching less fields, or using a faster algorithm to identify matches that has a greater propensity for false positives/false negatives.",
            "in": "query",
            "name": "quick_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewSupporter retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewSupporter"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple contacts based on search critera passed as GET Arguments",
        "tags": [
          "Contacts"
        ]
      }
    },
    "/api/newsupporter/{id}/": {
      "get": {
        "description": "The endpoint for the Contacts dataset.",
        "operationId": "get_bulk_newsupporter",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NewSupporter retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewSupporter"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Contact",
        "tags": [
          "Contacts"
        ]
      },
      "patch": {
        "description": "The endpoint for the Contacts dataset.",
        "operationId": "patch_bulk_newsupporter",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_newsupporterNewsupporter"
        },
        "responses": {
          "200": {
            "description": "NewSupporter retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewSupporter"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Update a single Contacts by ID",
        "tags": [
          "Contacts"
        ]
      },
      "post": {
        "description": "The endpoint for the Contacts dataset.",
        "operationId": "post_bulk_newsupporter",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_newsupporterNewsupporter"
        },
        "responses": {
          "200": {
            "description": "NewSupporter retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewSupporter"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Create a single Contacts",
        "tags": [
          "Contacts"
        ]
      }
    },
    "/api/note/": {
      "get": {
        "description": "The endpoint for the Notes dataset, including all comments, historic interactions, and donations created in your Quorum account.<br/><br/>",
        "operationId": "getnote",
        "parameters": [
          {
            "description": "The newamendment with which this note is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>amendment__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>amendment__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "amendment_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The newamendments that are associated with this note.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>amendments__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "amendments",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The monetary amount (usually USD) in donation/transaction<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>amount__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>amount__gt</code>, <code>amount__gte</code>, <code> amount__lt</code>, <code> amount__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>amount__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "amount",
            "required": false,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          },
          {
            "description": "Whether the record has been soft-deleted or not.",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The newbill with which this note is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>bill__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>bill__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "bill_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The newbills that are associated with this note.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>bills__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "bills",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The bulkemail with which this note is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>bulk_email__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>bulk_email__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "bulk_email_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The campaign with which this note is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>campaign__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>campaign__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "campaign_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Check # used to make donation<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>check_number__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>check_number__contains</code>, <code>check_number__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>check_number__startswith</code>, <code>check_number__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>check_number__endswith</code>, <code>check_number__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>check_number__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>check_number__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "check_number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>comment_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>comment_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name QuorumDataType, for an explanation of values.</p>",
            "in": "query",
            "name": "comment_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                12,
                14,
                15,
                16,
                17,
                18,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                123,
                124
              ]
            }
          },
          {
            "description": "When the record was originally created.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>created__year</code>, <code>created__month</code>, <code>created__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The custominteractiontype with which this note is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>custom_interaction_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>custom_interaction_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "custom_interaction_type_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The date entered for the Note / Interaction<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>date__year</code>, <code>date__month</code>, <code>date__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The newdocument with which this note is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>document__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>document__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "document_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The newdocuments that are associated with this note.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>documents__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "documents",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "from_grassroots",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The specific type of interaction logged (e.g meeting, phone call, etc)<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>interaction_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>interaction_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name InteractionType, for an explanation of values.</p>",
            "in": "query",
            "name": "interaction_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                108,
                109
              ]
            }
          },
          {
            "description": "The newpersons that are associated with this note.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>members__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "members",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The type of note logged (e.g. Comment, Relationship, etc.)<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>note_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name NoteType, for an explanation of values.</p>",
            "in": "query",
            "name": "note_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3
              ]
            }
          },
          {
            "description": "The Quorum client associated with this record.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>organization__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>organization__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "organization_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The newperson with which this note is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>person__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>person__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "person_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The project with which this note is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>project__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>project__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "project_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The projects that are associated with this note.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>projects__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "projects",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The publicorganizations that are associated with this note.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>public_organizations__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "public_organizations",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The regulations that are associated with this note.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>regulations__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "regulations",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>relationship_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>relationship_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name RelationshipType, for an explanation of values.</p>",
            "in": "query",
            "name": "relationship_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]
            }
          },
          {
            "description": "Our best guess as to the source of a particular thing, whether internal to Quorum, a particular website, etc.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>source_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name UTMSourceType, for an explanation of values.</p>",
            "in": "query",
            "name": "source_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22
              ]
            }
          },
          {
            "description": "The newsupporter with which this note is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>supporter__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>supporter__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "supporter_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The newsupporters that are associated with this note.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>supporters__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "supporters",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The teams that are associated with this note.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>teams__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "teams",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "When the record was most recently updated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>updated__year</code>, <code>updated__month</code>, <code>updated__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The vote with which this note is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>vote__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>vote__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "vote_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The votes that are associated with this note.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>votes__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "votes",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>bills</code>  -  expand bills with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "bills"
                ],
                "type": "string"
              }
            }
          },
          {
            "description": "Perform an advanced text search on the datset with the provided text. This search will use the most comprehensive search method available on the requested endpoint, but can take slightly longer to return results.",
            "in": "query",
            "name": "advanced_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Note retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Notes (Historic Interactions / Comments / Donations) based on search critera passed as GET Arguments",
        "tags": [
          "Notes"
        ]
      }
    },
    "/api/note/{id}/": {
      "get": {
        "description": "The endpoint for the Notes dataset, including all comments, historic interactions, and donations created in your Quorum account.",
        "operationId": "get_bulk_note",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>bills</code>  -  expand bills with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "bills"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Note retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Note (Historic Interaction / Comment / Donation)",
        "tags": [
          "Notes"
        ]
      },
      "patch": {
        "description": "The endpoint for the Notes dataset, including all comments, historic interactions, and donations created in your Quorum account.",
        "operationId": "patch_bulk_note",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_noteNote"
        },
        "responses": {
          "200": {
            "description": "Note retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Update a single Notes by ID",
        "tags": [
          "Notes"
        ]
      },
      "post": {
        "description": "The endpoint for the Notes dataset, including all comments, historic interactions, and donations created in your Quorum account.",
        "operationId": "post_bulk_note",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_noteNote"
        },
        "responses": {
          "200": {
            "description": "Note retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Create a single Notes",
        "tags": [
          "Notes"
        ]
      }
    },
    "/api/organization/": {
      "get": {
        "description": "The endpoint for the information on your Quorum instance.<br/><br/>",
        "operationId": "getorganization",
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The quorumusers that are associated with this organization.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>cs_managers__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "cs_managers",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>email_limit__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>email_limit__gt</code>, <code>email_limit__gte</code>, <code> email_limit__lt</code>, <code> email_limit__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>email_limit__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "email_limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Quorum ID (Primary Key)",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>max_members__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>max_members__gt</code>, <code>max_members__gte</code>, <code> max_members__lt</code>, <code> max_members__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>max_members__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "max_members",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>name__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>name__contains</code>, <code>name__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>name__startswith</code>, <code>name__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>name__endswith</code>, <code>name__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>name__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The organizations that are associated with this organization.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>partners__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "partners",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>updated__year</code>, <code>updated__month</code>, <code>updated__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on Organizations visible to your account.",
        "tags": [
          "Organization"
        ]
      }
    },
    "/api/organization/{id}/": {
      "get": {
        "description": "The endpoint for the information on your Quorum instance.",
        "operationId": "get_bulk_organization",
        "parameters": [
          {
            "description": "Quorum ID (Primary Key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Organization",
        "tags": [
          "Organization"
        ]
      },
      "patch": {
        "description": "The endpoint for the information on your Quorum instance.",
        "operationId": "patch_bulk_organization",
        "parameters": [
          {
            "description": "Quorum ID (Primary Key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_issuemanagementIssuemanagement"
        },
        "responses": {
          "200": {
            "description": "Organization retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Update a single Organization by ID",
        "tags": [
          "Organization"
        ]
      }
    },
    "/api/project/": {
      "get": {
        "description": "The endpoint for the custom Issues defined on your account.<br/><br/>",
        "operationId": "getproject",
        "parameters": [
          {
            "description": "Whether the record has been soft-deleted or not.",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether this issue should be an option for tagging interactions to",
            "in": "query",
            "name": "can_be_tagged_to_interactions",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "User id of the project creator<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>creator__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>creator__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "creator_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Whether or not this a default project",
            "in": "query",
            "name": "default",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "is_grassroots_issue",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>is_issue__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "is_issue",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Used to permission objects to only the creator of the object",
            "in": "query",
            "name": "is_limited_to_creator",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Name of the project<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>name__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>name__contains</code>, <code>name__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>name__startswith</code>, <code>name__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>name__endswith</code>, <code>name__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>name__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>name__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The organizations that are associated with this project.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>organizations__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "organizations",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "default owner of the project<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br><p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>owner__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>owner__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "owner_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The parent of this project<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>parent__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>parent__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "parent_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The quorumusers that are associated with this project.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>participants__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "participants",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>project_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>project_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name ProjectType, for an explanation of values.</p>",
            "in": "query",
            "name": "project_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3
              ]
            }
          },
          {
            "description": "The teams that are associated with this project.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>teams__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "teams",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple custom Issues based on search critera passed as GET Arguments",
        "tags": [
          "Issue Management"
        ]
      }
    },
    "/api/project/{id}/": {
      "get": {
        "description": "The endpoint for the custom Issues defined on your account.",
        "operationId": "get_bulk_project",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single custom Issue defined on your account",
        "tags": [
          "Issue Management"
        ]
      },
      "patch": {
        "description": "The endpoint for the custom Issues defined on your account.",
        "operationId": "patch_bulk_project",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_issuemanagementIssuemanagement"
        },
        "responses": {
          "200": {
            "description": "Project retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Update a single Issue Management by ID",
        "tags": [
          "Issue Management"
        ]
      },
      "post": {
        "description": "The endpoint for the custom Issues defined on your account.",
        "operationId": "post_bulk_project",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_issuemanagementIssuemanagement"
        },
        "responses": {
          "200": {
            "description": "Project retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Create a single Issue Management",
        "tags": [
          "Issue Management"
        ]
      }
    },
    "/api/publicorganization/": {
      "get": {
        "description": "The endpoint for the Organizations dataset, including all organizations available to your Quorum account. NOTE: This includes both Quorum-provided organizations and your Custom Organizations, if applicable.<br/><br/>",
        "operationId": "getpublicorganization",
        "parameters": [
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>_ph_sector_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>_ph_sector_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SectorType, for an explanation of values.</p>",
            "in": "query",
            "name": "_ph_sector_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2
              ]
            }
          },
          {
            "description": "An abbreviation for the public organization.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>abbrev__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>abbrev__contains</code>, <code>abbrev__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>abbrev__startswith</code>, <code>abbrev__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>abbrev__endswith</code>, <code>abbrev__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>abbrev__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>abbrev__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "abbrev",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "active",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the record has been soft-deleted or not.",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The county where this Public Organization resides<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>county__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>county__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "county_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "When the record was originally created.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>created__year</code>, <code>created__month</code>, <code>created__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Internal field.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p><p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>intrado_frequency__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>intrado_frequency__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name IntradoFrequency, for an explanation of values.</p>",
            "in": "query",
            "name": "intrado_frequency",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12
              ]
            }
          },
          {
            "description": "Internal field.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p><p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>intrado_language__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>intrado_language__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Language, for an explanation of values.</p>",
            "in": "query",
            "name": "intrado_language",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                9000
              ]
            }
          },
          {
            "description": "The type of news this source writes about as defined by LexisNexis.  Only relevant for news outlets.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>ln_category__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>ln_category__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MediaSourceCategory, for an explanation of values.</p>",
            "in": "query",
            "name": "ln_category",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12
              ]
            }
          },
          {
            "description": "The source's rank (importance) as defined by LexisNexis.  Only relevant for news outlets.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>ln_rank__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>ln_rank__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MediaSourceRank, for an explanation of values.</p>",
            "in": "query",
            "name": "ln_rank",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5
              ]
            }
          },
          {
            "description": "The municipality/place where this Public Organization resides<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>municipality__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>municipality__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "municipality_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The name of this organization.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>name__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>name__contains</code>, <code>name__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>name__startswith</code>, <code>name__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>name__endswith</code>, <code>name__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>name__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>name__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of this public organization, such as legislative body or executive office.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>organization_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>organization_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PublicOrganizationType, for an explanation of values.</p>",
            "in": "query",
            "name": "organization_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                35,
                999,
                1001,
                1002,
                1003,
                1004,
                1020,
                1045,
                1046,
                1047,
                1048,
                1049,
                1050,
                1051,
                1052
              ]
            }
          },
          {
            "description": "The political action committee (PAC) type of this organization, if applicable.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>pac_org_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>pac_org_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name EntityType, for an explanation of values.</p>",
            "in": "query",
            "name": "pac_org_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                100,
                101,
                1001,
                1002,
                1003,
                1004,
                1005,
                1006,
                1007,
                1008,
                1009,
                1010,
                1011,
                1012,
                1013,
                1014,
                1015,
                1016,
                1017,
                1018,
                1019,
                3000,
                100000
              ]
            }
          },
          {
            "description": "The publicorganization with which this publicorganization is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>parent_organization__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>parent_organization__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "parent_organization_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The region where this organization operates.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>region__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>region__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "in": "query",
            "name": "region",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                1000
              ]
            }
          },
          {
            "description": "Perform an advanced text search on the datset with the provided text. This search will use the most comprehensive search method available on the requested endpoint, but can take slightly longer to return results.",
            "in": "query",
            "name": "advanced_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PublicOrganization retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicOrganization"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Organizations based on search critera passed as GET Arguments",
        "tags": [
          "Organizations (Public & Custom)"
        ]
      }
    },
    "/api/publicorganization/{id}/": {
      "get": {
        "description": "The endpoint for the Organizations dataset, including all organizations available to your Quorum account. NOTE: This includes both Quorum-provided organizations and your Custom Organizations, if applicable.",
        "operationId": "get_bulk_publicorganization",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PublicOrganization retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicOrganization"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Organization",
        "tags": [
          "Organizations (Public & Custom)"
        ]
      },
      "patch": {
        "description": "The endpoint for the Organizations dataset, including all organizations available to your Quorum account. NOTE: This includes both Quorum-provided organizations and your Custom Organizations, if applicable.",
        "operationId": "patch_bulk_publicorganization",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_publicorganizationPublicorganization"
        },
        "responses": {
          "200": {
            "description": "PublicOrganization retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicOrganization"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Update a single Organizations (Public & Custom) by ID",
        "tags": [
          "Organizations (Public & Custom)"
        ]
      },
      "post": {
        "description": "The endpoint for the Organizations dataset, including all organizations available to your Quorum account. NOTE: This includes both Quorum-provided organizations and your Custom Organizations, if applicable.",
        "operationId": "post_bulk_publicorganization",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_publicorganizationPublicorganization"
        },
        "responses": {
          "200": {
            "description": "PublicOrganization retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicOrganization"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Create a single Organizations (Public & Custom)",
        "tags": [
          "Organizations (Public & Custom)"
        ]
      }
    },
    "/api/sendemail/": {
      "get": {
        "description": "The endpoint for specific emails sent through Quorum Outbox.<br/><br/>",
        "operationId": "getsendemail",
        "parameters": [
          {
            "description": "Whether the record has been soft-deleted or not.",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The bulkemail with which this sendemail is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>bulk_email__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>bulk_email__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "bulk_email_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Number of times links in email have been clicked<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>clicks__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>clicks__gt</code>, <code>clicks__gte</code>, <code> clicks__lt</code>, <code> clicks__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>clicks__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "clicks",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "When the record was originally created.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>created__year</code>, <code>created__month</code>, <code>created__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "did_reply",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Send to email address.  Nullable because push notifications don't use this.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>email_address__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>email_address__contains</code>, <code>email_address__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>email_address__startswith</code>, <code>email_address__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>email_address__endswith</code>, <code>email_address__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>email_address__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>email_address__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "email_address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "timestamp for when the event occurred<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>first_open__year</code>, <code>first_open__month</code>, <code>first_open__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "first_open",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "the link -> count key",
            "in": "query",
            "name": "link_dict",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of times email has been opened<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>opens__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>opens__gt</code>, <code>opens__gte</code>, <code> opens__lt</code>, <code> opens__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>opens__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "opens",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The newperson with which this sendemail is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>person__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>person__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "person_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "First and last name of email recipient<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>recipient_name__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>recipient_name__contains</code>, <code>recipient_name__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>recipient_name__startswith</code>, <code>recipient_name__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>recipient_name__endswith</code>, <code>recipient_name__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>recipient_name__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>recipient_name__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "recipient_name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the SendEmail has been sent",
            "in": "query",
            "name": "sent",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The datetime that this deliverable was sent<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>sent_datetime__year</code>, <code>sent_datetime__month</code>, <code>sent_datetime__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "sent_datetime",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Status given by Sparkpost after email is sent<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>sparkpost_status__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>sparkpost_status__contains</code>, <code>sparkpost_status__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>sparkpost_status__startswith</code>, <code>sparkpost_status__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>sparkpost_status__endswith</code>, <code>sparkpost_status__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>sparkpost_status__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>sparkpost_status__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "sparkpost_status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "When the record was most recently updated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>updated__year</code>, <code>updated__month</code>, <code>updated__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>bulk_email</code>  -  expand bulk_email with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "bulk_email"
                ],
                "type": "string"
              }
            }
          },
          {
            "description": "Perform an advanced text search on the datset with the provided text. This search will use the most comprehensive search method available on the requested endpoint, but can take slightly longer to return results.",
            "in": "query",
            "name": "advanced_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SendEmail retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendEmail"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Sent Emails based on search critera passed as GET Arguments",
        "tags": [
          "Send Email"
        ]
      }
    },
    "/api/sendemail/{id}/": {
      "get": {
        "description": "The endpoint for specific emails sent through Quorum Outbox.",
        "operationId": "get_bulk_sendemail",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>bulk_email</code>  -  expand bulk_email with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "bulk_email"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SendEmail retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendEmail"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Sent Email",
        "tags": [
          "Send Email"
        ]
      }
    },
    "/api/sendemailarchived/": {
      "get": {
        "description": "The endpoint for specific emails sent through Quorum Outbox that are over 1 year old.<br/><br/>",
        "operationId": "getsendemailarchived",
        "parameters": [
          {
            "description": "Whether the record has been soft-deleted or not.",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The bulkemail with which this sendemailarchived is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>bulk_email__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>bulk_email__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "bulk_email_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Number of times links in email have been clicked<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>clicks__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>clicks__gt</code>, <code>clicks__gte</code>, <code> clicks__lt</code>, <code> clicks__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>clicks__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "clicks",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "When the record was originally created.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>created__year</code>, <code>created__month</code>, <code>created__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "did_reply",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Send to email address.  Nullable because push notifications don't use this.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>email_address__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>email_address__contains</code>, <code>email_address__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>email_address__startswith</code>, <code>email_address__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>email_address__endswith</code>, <code>email_address__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>email_address__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>email_address__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "email_address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "timestamp for when the event occurred<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>first_open__year</code>, <code>first_open__month</code>, <code>first_open__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "first_open",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "the link -> count key",
            "in": "query",
            "name": "link_dict",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of times email has been opened<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>opens__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>opens__gt</code>, <code>opens__gte</code>, <code> opens__lt</code>, <code> opens__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>opens__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "opens",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The newperson with which this sendemailarchived is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>person__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>person__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "person_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "First and last name of email recipient<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>recipient_name__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>recipient_name__contains</code>, <code>recipient_name__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>recipient_name__startswith</code>, <code>recipient_name__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>recipient_name__endswith</code>, <code>recipient_name__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>recipient_name__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>recipient_name__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "recipient_name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the SendEmail has been sent",
            "in": "query",
            "name": "sent",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The datetime that this deliverable was sent<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>sent_datetime__year</code>, <code>sent_datetime__month</code>, <code>sent_datetime__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "sent_datetime",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Status given by Sparkpost after email is sent<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>sparkpost_status__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>sparkpost_status__contains</code>, <code>sparkpost_status__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>sparkpost_status__startswith</code>, <code>sparkpost_status__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>sparkpost_status__endswith</code>, <code>sparkpost_status__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>sparkpost_status__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>sparkpost_status__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "sparkpost_status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "When the record was most recently updated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>updated__year</code>, <code>updated__month</code>, <code>updated__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>bulk_email</code>  -  expand bulk_email with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "bulk_email"
                ],
                "type": "string"
              }
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SendEmailArchived retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendEmailArchived"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple archived Sent Emails based on search critera passed as GET Arguments",
        "tags": [
          "Send Email (Archived)"
        ]
      }
    },
    "/api/sendemailarchived/{id}/": {
      "get": {
        "description": "The endpoint for specific emails sent through Quorum Outbox that are over 1 year old.",
        "operationId": "get_bulk_sendemailarchived",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>bulk_email</code>  -  expand bulk_email with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "bulk_email"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SendEmailArchived retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendEmailArchived"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single archived Sent Email",
        "tags": [
          "Send Email (Archived)"
        ]
      }
    },
    "/api/supporteraction/": {
      "get": {
        "description": "The endpoint for actions taken by your Contacts through the Action Center(s).<br/><br/>",
        "operationId": "getsupporteraction",
        "parameters": [
          {
            "description": "The actioncentersettings with which this grassrootssupporteraction is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>action_center__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>action_center__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "action_center_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "A nonnegative transaction account, in the smallest denomination, assummed to be USD cents<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>amount__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>amount__gt</code>, <code>amount__gte</code>, <code> amount__lt</code>, <code> amount__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.<br><code>amount__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "amount",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Whether the record has been soft-deleted or not.",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The bulkemail with which this grassrootssupporteraction is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>bulk_email__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>bulk_email__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "bulk_email_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The campaign this supporter action is associated with<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br><p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>campaign__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>campaign__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "campaign_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Whether or not the action has been confirmed in a campaign requiring approval",
            "in": "query",
            "name": "confirmed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "When the record was originally created.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>created__year</code>, <code>created__month</code>, <code>created__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The date that the supporter action took place<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>date__year</code>, <code>date__month</code>, <code>date__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Indicator if the action is inlvolved in grassroots. Holdover from Note model",
            "in": "query",
            "name": "from_grassroots",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Interaction type for the action. Required for all actions to help build inlines<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>interaction_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>interaction_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name GrassrootsInteractionType, for an explanation of values.</p>",
            "in": "query",
            "name": "interaction_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                3,
                4,
                6,
                7,
                11,
                21,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                34,
                35,
                36,
                37,
                43,
                44,
                45,
                46,
                48,
                49,
                50,
                51,
                52,
                85,
                104,
                105,
                106,
                107,
                108,
                109
              ]
            }
          },
          {
            "description": "Note type for the action. Should all be interactions<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>note_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>note_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name NoteType, for an explanation of values.</p>",
            "in": "query",
            "name": "note_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3
              ]
            }
          },
          {
            "description": "The organization that the supporter action is taking an action for<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>organization__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>organization__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "organization_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Payroll frequency for payroll contributions<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>payroll_frequency_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>payroll_frequency_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PayrollFrequencyType, for an explanation of values.</p>",
            "in": "query",
            "name": "payroll_frequency_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                3,
                4,
                5
              ]
            }
          },
          {
            "description": "The person who the message is targeted for<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>person__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>person__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "person_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The projects this supporter action is associated with. It can be associated with multiple projects<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>projects__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "projects",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The type of social media being shared on Shared campaigns<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>social_media_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>social_media_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SocialMediaType, for an explanation of values.</p>",
            "in": "query",
            "name": "social_media_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5
              ]
            }
          },
          {
            "description": "Our best guess as to the source of a particular thing, whether internal to Quorum, a particular website, etc.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>source_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name UTMSourceType, for an explanation of values.</p>",
            "in": "query",
            "name": "source_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22
              ]
            }
          },
          {
            "description": "If this is a comment regulation campaign, this the name of the organization<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>submitting_org_name__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>submitting_org_name__contains</code>, <code>submitting_org_name__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>submitting_org_name__startswith</code>, <code>submitting_org_name__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>submitting_org_name__endswith</code>, <code>submitting_org_name__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>submitting_org_name__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>submitting_org_name__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "submitting_org_name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The supporter who owns this supporter action<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>supporter__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "supporter_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The Type of method - credit card, ach transfer, etc<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>transaction_method_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>transaction_method_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name TransactionMethodType, for an explanation of values.</p>",
            "in": "query",
            "name": "transaction_method_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12
              ]
            }
          },
          {
            "description": "When the record was most recently updated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>updated__year</code>, <code>updated__month</code>, <code>updated__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>campaign</code>  -  expand campaign with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "campaign"
                ],
                "type": "string"
              }
            }
          },
          {
            "description": "Perform an advanced text search on the datset with the provided text. This search will use the most comprehensive search method available on the requested endpoint, but can take slightly longer to return results.",
            "in": "query",
            "name": "advanced_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GrassrootsSupporterAction retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrassrootsSupporterAction"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Grassroots Supporter Actions based on search critera passed as GET Arguments",
        "tags": [
          "Grassroots Supporter Action"
        ]
      }
    },
    "/api/supporteraction/{id}/": {
      "get": {
        "description": "The endpoint for actions taken by your Contacts through the Action Center(s).",
        "operationId": "get_bulk_supporteraction",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>campaign</code>  -  expand campaign with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "campaign"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GrassrootsSupporterAction retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrassrootsSupporterAction"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Grassroots Supporter Action",
        "tags": [
          "Grassroots Supporter Action"
        ]
      },
      "patch": {
        "description": "The endpoint for actions taken by your Contacts through the Action Center(s).",
        "operationId": "patch_bulk_supporteraction",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_supporteractionGrassrootssupporteraction"
        },
        "responses": {
          "200": {
            "description": "GrassrootsSupporterAction retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrassrootsSupporterAction"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Update a single Grassroots Supporter Action by ID",
        "tags": [
          "Grassroots Supporter Action"
        ]
      },
      "post": {
        "description": "The endpoint for actions taken by your Contacts through the Action Center(s).",
        "operationId": "post_bulk_supporteraction",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_supporteractionGrassrootssupporteraction"
        },
        "responses": {
          "200": {
            "description": "GrassrootsSupporterAction retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GrassrootsSupporterAction"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Create a single Grassroots Supporter Action",
        "tags": [
          "Grassroots Supporter Action"
        ]
      }
    },
    "/api/team/": {
      "get": {
        "description": "The endpoint for the Teams dataset, for defining Teams and Team Membership.<br/><br/>",
        "operationId": "getteam",
        "parameters": [
          {
            "description": "Whether the record has been soft-deleted or not.",
            "in": "query",
            "name": "archived",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether or not this is a default team",
            "in": "query",
            "name": "default",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The quorumusers that are associated with this team.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>members__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "members",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "The Quorum client associated with this record.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>organization__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "organization_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>organization</code>  -  expand organization with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "organization"
                ],
                "type": "string"
              }
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Teams based on search critera passed as GET Arguments",
        "tags": [
          "Teams"
        ]
      }
    },
    "/api/team/{id}/": {
      "get": {
        "description": "The endpoint for the Teams dataset, for defining Teams and Team Membership.",
        "operationId": "get_bulk_team",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Option to provide additional detail for certain fields, either by expanding those fields with additional details from the related model or by substituting more informative values for the actual database values.<code>organization</code>  -  expand organization with additional details.<br><strong>NOTE: This parameter can accept one or more comma-separated values; it is not limited to a single value.",
            "in": "query",
            "name": "dehydrate_extra",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "organization"
                ],
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Team",
        "tags": [
          "Teams"
        ]
      },
      "patch": {
        "description": "The endpoint for the Teams dataset, for defining Teams and Team Membership.",
        "operationId": "patch_bulk_team",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_teamTeam"
        },
        "responses": {
          "200": {
            "description": "Team retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Update a single Teams by ID",
        "tags": [
          "Teams"
        ]
      },
      "post": {
        "description": "The endpoint for the Teams dataset, for defining Teams and Team Membership.",
        "operationId": "post_bulk_team",
        "parameters": [
          {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/patch_bulk_teamTeam"
        },
        "responses": {
          "200": {
            "description": "Team retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Create a single Teams",
        "tags": [
          "Teams"
        ]
      }
    },
    "/api/user/": {
      "get": {
        "description": "The endpoint for the Quorum Users adminstration on your account.<br/><br/>",
        "operationId": "getuser",
        "parameters": [
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>date_joined__year</code>, <code>date_joined__month</code>, <code>date_joined__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "date_joined",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>email__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>email__contains</code>, <code>email__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>email__startswith</code>, <code>email__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>email__endswith</code>, <code>email__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>email__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Quorum ID (Primary Key)",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "is_active",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>username__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>username__contains</code>, <code>username__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>username__startswith</code>, <code>username__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>username__endswith</code>, <code>username__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>username__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "username",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "QuorumUser retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuorumUser"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Quorum User accounts based on search critera passed as GET Arguments",
        "tags": [
          "Quorum Users"
        ]
      }
    },
    "/api/user/{id}/": {
      "get": {
        "description": "The endpoint for the Quorum Users adminstration on your account.",
        "operationId": "get_bulk_user",
        "parameters": [
          {
            "description": "Quorum ID (Primary Key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "QuorumUser retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuorumUser"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Quorum User account",
        "tags": [
          "Quorum Users"
        ]
      },
      "patch": {
        "description": "The endpoint for the Quorum Users adminstration on your account.",
        "operationId": "patch_bulk_user",
        "parameters": [
          {
            "description": "Quorum ID (Primary Key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "is_active": {
                    "description": "",
                    "type": "boolean"
                  }
                },
                "required": [],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "QuorumUser retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuorumUser"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Update a single Quorum Users by ID",
        "tags": [
          "Quorum Users"
        ]
      }
    },
    "/api/vote/": {
      "get": {
        "description": "The endpoint for Votes (on Bills).<br/><br/>",
        "operationId": "getvote",
        "parameters": [
          {
            "description": "The newpersons that are associated with this vote.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>all_votes__overlaps</code>  -  The value for the record has one or more values in common with the provided array parameter (comma-separated values).</p>",
            "in": "query",
            "name": "all_votes",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "format": "int64",
                "type": "integer"
              }
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>category__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>category__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name VoteCategory, for an explanation of values.</p>",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16
              ]
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>chamber__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name CongressChamber, for an explanation of values.</p>",
            "in": "query",
            "name": "chamber",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4
              ]
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>created__year</code>, <code>created__month</code>, <code>created__day</code>  -  The value for the record matches the provided year/month/day (note that week_day, hour, minute, and second are also available following similar patterns).</p>",
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>democrat_result__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>democrat_result__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name VoteResultType, for an explanation of values.</p>",
            "in": "query",
            "name": "democrat_result",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5
              ]
            }
          },
          {
            "description": "Quorum ID (Primary Key)",
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>majority_result__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>majority_result__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name VoteResultType, for an explanation of values.</p>",
            "in": "query",
            "name": "majority_result",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5
              ]
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>number__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>number__gt</code>, <code>number__gte</code>, <code> number__lt</code>, <code> number__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>question__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>question__contains</code>, <code>question__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>question__startswith</code>, <code>question__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>question__endswith</code>, <code>question__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>question__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "question",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>question_details__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>question_details__contains</code>, <code>question_details__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>question_details__startswith</code>, <code>question_details__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>question_details__endswith</code>, <code>question_details__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>question_details__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.<br><code>question_details__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "question_details",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>region__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "in": "query",
            "name": "region",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                1000
              ]
            }
          },
          {
            "description": "The legsession with which this vote is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>region_session__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>region_session__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "region_session_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The newamendment with which this vote is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>related_amendment__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>related_amendment__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "related_amendment_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The newbill with which this vote is associated.<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>related_bill__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>related_bill__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p>",
            "in": "query",
            "name": "related_bill_id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>republican_result__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>republican_result__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name VoteResultType, for an explanation of values.</p>",
            "in": "query",
            "name": "republican_result",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5
              ]
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>required__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>required__contains</code>, <code>required__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>required__startswith</code>, <code>required__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>required__endswith</code>, <code>required__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>required__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "required",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>result__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>result__contains</code>, <code>result__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>result__startswith</code>, <code>result__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>result__endswith</code>, <code>result__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>result__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "result",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>result_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>result_type__isnull</code>  -  The value for the record is null (if <code>true</code>) or is not null.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name VoteResultType, for an explanation of values.</p>",
            "in": "query",
            "name": "result_type",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "enum": [
                1,
                2,
                3,
                4,
                5
              ]
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>session__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>session__contains</code>, <code>session__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>session__startswith</code>, <code>session__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>session__endswith</code>, <code>session__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>session__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "session",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>total_all__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>total_all__gt</code>, <code>total_all__gte</code>, <code> total_all__lt</code>, <code> total_all__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "total_all",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>total_dem_all__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>total_dem_all__gt</code>, <code>total_dem_all__gte</code>, <code> total_dem_all__lt</code>, <code> total_dem_all__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "total_dem_all",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>total_dem_minus__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>total_dem_minus__gt</code>, <code>total_dem_minus__gte</code>, <code> total_dem_minus__lt</code>, <code> total_dem_minus__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "total_dem_minus",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>total_dem_other__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>total_dem_other__gt</code>, <code>total_dem_other__gte</code>, <code> total_dem_other__lt</code>, <code> total_dem_other__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "total_dem_other",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>total_dem_plus__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>total_dem_plus__gt</code>, <code>total_dem_plus__gte</code>, <code> total_dem_plus__lt</code>, <code> total_dem_plus__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "total_dem_plus",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>total_minus__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>total_minus__gt</code>, <code>total_minus__gte</code>, <code> total_minus__lt</code>, <code> total_minus__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "total_minus",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>total_other__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>total_other__gt</code>, <code>total_other__gte</code>, <code> total_other__lt</code>, <code> total_other__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "total_other",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>total_plus__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>total_plus__gt</code>, <code>total_plus__gte</code>, <code> total_plus__lt</code>, <code> total_plus__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "total_plus",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>total_rep_all__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>total_rep_all__gt</code>, <code>total_rep_all__gte</code>, <code> total_rep_all__lt</code>, <code> total_rep_all__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "total_rep_all",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>total_rep_minus__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>total_rep_minus__gt</code>, <code>total_rep_minus__gte</code>, <code> total_rep_minus__lt</code>, <code> total_rep_minus__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "total_rep_minus",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>total_rep_other__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>total_rep_other__gt</code>, <code>total_rep_other__gte</code>, <code> total_rep_other__lt</code>, <code> total_rep_other__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "total_rep_other",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>total_rep_plus__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>total_rep_plus__gt</code>, <code>total_rep_plus__gte</code>, <code> total_rep_plus__lt</code>, <code> total_rep_plus__lte</code>  -  The value for the record is greater than/less than (or equal to) the provided parameter.</p>",
            "in": "query",
            "name": "total_rep_plus",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "<p><strong>NOTE:</strong>  Parameter accepts additional qualifiers appended to the end:<br><code>vote_type__in</code>  -  The value for the record is in the provided array parameter (comma-separated values).<br><code>vote_type__contains</code>, <code>vote_type__icontains</code>  -  The value for the record contains the string provided as a parameter within it (partial match). (Use 'icontains' for matching to be done case-insensitive)<br><code>vote_type__startswith</code>, <code>vote_type__istartswith</code>  -  The value for the record starts with the string provided as a parameter. (Use 'istartswith' for matching to be done case-insensitive)<br><code>vote_type__endswith</code>, <code>vote_type__iendswith</code>  -  The value for the record ends with the string provided as a parameter within it (partial match). (Use 'iendswith' for matching to be done case-insensitive)<br><code>vote_type__iexact</code>  -  The value for the record is a case-insensitive exact match to the provided parameter.</p>",
            "in": "query",
            "name": "vote_type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Perform an advanced text search on the datset with the provided text. This search will use the most comprehensive search method available on the requested endpoint, but can take slightly longer to return results.",
            "in": "query",
            "name": "advanced_search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of records to return (for pagination).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 20
            }
          },
          {
            "description": "The number of records to offset the start of the data being returned (for pagination).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vote retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vote"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve multiple Vote results based on search critera passed as GET Arguments",
        "tags": [
          "Vote"
        ]
      }
    },
    "/api/vote/{id}/": {
      "get": {
        "description": "The endpoint for Votes (on Bills).",
        "operationId": "get_bulk_vote",
        "parameters": [
          {
            "description": "Quorum ID (Primary Key)",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vote retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vote"
                }
              }
            }
          },
          "400": {
            "description": "improperly configured request"
          },
          "401": {
            "description": "authorization failure"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "summary": "Retrieve information on a single Vote",
        "tags": [
          "Vote"
        ]
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "Contact Relationship Management",
      "tags": [
        "Contacts"
      ]
    },
    {
      "name": "Geography",
      "tags": [
        "Counties",
        "Municipalities"
      ]
    },
    {
      "name": "Grassroots",
      "tags": [
        "Grassroots Supporter Action"
      ]
    },
    {
      "name": "Legislative Data",
      "tags": [
        "Bill Amendments",
        "Bill Sponsor",
        "Bill Summary",
        "Bills",
        "Documents",
        "Legislative Committee or Caucus",
        "Official Events",
        "Officials and Staffers",
        "Person Role",
        "Vote"
      ]
    },
    {
      "name": "Organizations",
      "tags": [
        "Organizations (Public & Custom)"
      ]
    },
    {
      "name": "Quorum Outbox",
      "tags": [
        "Bulk Email",
        "Message Event",
        "Send Email",
        "Send Email (Archived)"
      ]
    },
    {
      "name": "Shared Functionality",
      "tags": [
        "Custom Field",
        "Custom Field Groups",
        "Issue Management",
        "Notes"
      ]
    },
    {
      "name": "User & Account Admin",
      "tags": [
        "Issues",
        "Organization",
        "Quorum Users",
        "Teams"
      ]
    }
  ],
  "servers": [
    {
      "url": "https://www.quorum.us"
    }
  ],
  "components": {
    "requestBodies": {
      "patch_bulk_noteNote": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "amendment_id": {
                  "description": "The newamendment with which this note is associated.",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "amendments": {
                  "description": "The newamendments that are associated with this note.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "amount": {
                  "description": "The monetary amount (usually USD) in donation/transaction",
                  "format": "decimal",
                  "type": "number"
                },
                "archived": {
                  "description": "Whether the record has been soft-deleted or not.",
                  "type": "boolean"
                },
                "bill_id": {
                  "description": "The newbill with which this note is associated.",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "bills": {
                  "description": "The newbills that are associated with this note.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "check_number": {
                  "description": "Check # used to make donation",
                  "type": "string"
                },
                "comment_type": {
                  "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name QuorumDataType, for an explanation of values.</p>",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    12,
                    14,
                    15,
                    16,
                    17,
                    18,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96,
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116,
                    117,
                    118,
                    119,
                    120,
                    121,
                    122,
                    123,
                    124
                  ],
                  "format": "int64",
                  "type": "integer"
                },
                "confirmed": {
                  "description": "",
                  "type": "boolean"
                },
                "custom_interaction_type_id": {
                  "description": "The custominteractiontype with which this note is associated.",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "date": {
                  "description": "The date entered for the Note / Interaction",
                  "format": "date-time",
                  "type": "string"
                },
                "document_id": {
                  "description": "The newdocument with which this note is associated.",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "documents": {
                  "description": "The newdocuments that are associated with this note.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "duration": {
                  "description": "The duration entered for the Note / Interaction<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PossibleDurations, for an explanation of values.</p>",
                  "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    8,
                    15,
                    30,
                    45,
                    75,
                    90,
                    105,
                    135,
                    150,
                    165,
                    195,
                    210,
                    225
                  ],
                  "format": "int64",
                  "type": "integer"
                },
                "interaction_type": {
                  "description": "The specific type of interaction logged (e.g meeting, phone call, etc)<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name InteractionType, for an explanation of values.</p>",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96,
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    108,
                    109
                  ],
                  "format": "int64",
                  "type": "integer"
                },
                "is_visible_to_partners": {
                  "description": "Only relevant for organizations that have partners. This flag allows users to shareNotes with people outside of their organization. Notes will only be visible to users thatare on the partner organizations (organization.partners M2M)",
                  "type": "boolean"
                },
                "limited_to_teams": {
                  "description": "Used to permission objects. If the User's Teams intersect with the teams associatedwith these teams, the User can see this object<br> Each item provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: [{\"id\": 410003}, {\"id\": 410014}]",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "members": {
                  "description": "The newpersons that are associated with this note.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "person_id": {
                  "description": "The newperson with which this note is associated.",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "privacy": {
                  "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PrivacyType, for an explanation of values.</p>",
                  "enum": [
                    1,
                    2,
                    3,
                    4
                  ],
                  "format": "int64",
                  "type": "integer"
                },
                "project_id": {
                  "description": "The project with which this note is associated.",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "projects": {
                  "description": "The projects that are associated with this note.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "public_organizations": {
                  "description": "The publicorganizations that are associated with this note.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "regulations": {
                  "description": "The regulations that are associated with this note.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "supporter_id": {
                  "description": "The newsupporter with which this note is associated.",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "supporters": {
                  "description": "The newsupporters that are associated with this note.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "tag_dict": {
                  "description": "Stores the custom field information for the object",
                  "type": "string"
                },
                "team_members": {
                  "description": "The quorumusers that are associated with this note.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "teams": {
                  "description": "The teams that are associated with this note.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "text": {
                  "description": "The text of this note.",
                  "type": "string"
                },
                "user_id": {
                  "description": "The quorumuser with which this note is associated.",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "vote_id": {
                  "description": "The vote with which this note is associated.",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "votes": {
                  "description": "The votes that are associated with this note.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [],
              "type": "object"
            }
          }
        }
      },
      "patch_bulk_newsupporterNewsupporter": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "address": {
                  "description": "",
                  "type": "string"
                },
                "alternate_address": {
                  "description": "Alternate address, user entered.",
                  "type": "string"
                },
                "archived": {
                  "description": "Whether the record has been soft-deleted or not.",
                  "type": "boolean"
                },
                "email": {
                  "description": "Primary Email Address for this Contact; this is the address available in Outbox to email this Contact.",
                  "type": "string"
                },
                "employer": {
                  "description": "The employer of the contact, if applicable.",
                  "type": "string"
                },
                "extension": {
                  "description": "Primary phone extension.",
                  "type": "string"
                },
                "facebook_array": {
                  "description": "The id of this supporter's facebook account",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "firstname": {
                  "description": "First Name",
                  "type": "string"
                },
                "image_url": {
                  "description": "Cached path of image url",
                  "type": "string"
                },
                "input_address": {
                  "description": "The address as originally input / imported, prior to Geocoding",
                  "type": "string"
                },
                "instagram_array": {
                  "description": "",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "is_grassroots_supporter": {
                  "description": "Whether this contact is someone who would advocate on your behalf (for User information, does not impact Quorum application)",
                  "type": "boolean"
                },
                "is_stakeholder_supporter": {
                  "description": "Whether this contact is an influencer for your organization's public policy objectives. (for User information, does not impact Quorum application)",
                  "type": "boolean"
                },
                "last_user_id": {
                  "description": "Quourm User ID of the last Quorum user that created/edited this Supporter in any way.<br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "lastname": {
                  "description": "Last Name",
                  "type": "string"
                },
                "limited_to_teams": {
                  "description": "The teams that are associated with this supporter.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "medium_array": {
                  "description": "The name of this supporter's medium account",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "middlename": {
                  "description": "Middle Name",
                  "type": "string"
                },
                "name": {
                  "description": "Full Name",
                  "type": "string"
                },
                "organization_id": {
                  "description": "The Quorum Client Organization that owns this supporter record.<br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "pac_eligibilities": {
                  "description": "The ledgersettingss that are associated with this supporter.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "phone_number": {
                  "description": "Primary phone number.",
                  "type": "string"
                },
                "preferred_name": {
                  "description": "Preferred name.",
                  "type": "string"
                },
                "prefix": {
                  "description": "Prefix of a person's name, like Mr., Mrs., The Honorable, etc.",
                  "type": "string"
                },
                "public_organization_id": {
                  "description": "The organization associated with the Supporter.<br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "public_organizations": {
                  "description": "The publicorganizations that are associated with this supporter.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "secondary_email": {
                  "description": "Secondary Email (personal etc.) assuming the first one is work/primary email",
                  "type": "string"
                },
                "secondary_extension": {
                  "description": "Secondary phone extension.",
                  "type": "string"
                },
                "secondary_phone": {
                  "description": "Secondary phone number.",
                  "type": "string"
                },
                "should_display_in_external_logger": {
                  "description": "Display this contact in the organization's action center's external interaction/relationship logger",
                  "type": "boolean"
                },
                "suffix": {
                  "description": "Suffix of a person's name, like III, Jr., etc.",
                  "type": "string"
                },
                "tag_dict": {
                  "description": "Dictionary of custom field information, stored as Key/Value pairs.",
                  "type": "string"
                },
                "title": {
                  "description": "Title.",
                  "type": "string"
                },
                "twitter_array": {
                  "description": "",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "unique_identifier": {
                  "description": "The organization-specific assigned unique identifier - Note that uniqueness is not enforced.",
                  "type": "string"
                },
                "unsubscribed_from_bulk_emails": {
                  "description": "Whether the contact is unsubscribed from your bulk emails.",
                  "type": "boolean"
                },
                "youtube_array": {
                  "description": "The name of the supporter's YouTube channel, if known.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [],
              "type": "object"
            }
          }
        }
      },
      "patch_bulk_bulkemailBulkemail": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "archived": {
                  "description": "Whether the record has been soft-deleted or not.",
                  "type": "boolean"
                },
                "bcc_rcpts": {
                  "description": "email addresses for bcc recipients",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "cc_rcpts": {
                  "description": "email addresses for cc recipients",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "compose_tool": {
                  "description": "the type of compose tool used",
                  "type": "string"
                },
                "content_version": {
                  "description": "Version number of the bulk email's content.This value is incremented on every succesful save, to prevent concurrent saves erasing someones work.If a client attempts to save a BulkEmail without the passing in the current content_version, there is a potential save conflict.",
                  "format": "int64",
                  "type": "integer"
                },
                "current_status": {
                  "description": "The current status of an email<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name EmailStatus, for an explanation of values.</p>",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15
                  ],
                  "format": "int64",
                  "type": "integer"
                },
                "custom_event_id": {
                  "description": "the CustomEvent associated with this BulkEmail<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br><br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "excludes_json": {
                  "description": "the excludes json",
                  "type": "string"
                },
                "external_id": {
                  "description": "A custom field that allows users to match this bulk email to a bulk email in an external system.",
                  "type": "string"
                },
                "from_address": {
                  "description": "address email was sent from",
                  "type": "string"
                },
                "from_name": {
                  "description": "The name that is shown in the Email from field. Defaults to quorum user",
                  "type": "string"
                },
                "from_user_id": {
                  "description": "User id of the email sender; not always the same as the user_id (the email creator)<br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "html_content": {
                  "description": "html content of the email",
                  "type": "string"
                },
                "is_draft": {
                  "description": "Marks whether the email is a draft",
                  "type": "boolean"
                },
                "is_scheduled": {
                  "description": "Marks whether or not the sending of the email was delayed",
                  "type": "boolean"
                },
                "json_content": {
                  "description": "json from the email template if they choose to use one",
                  "type": "string"
                },
                "limited_to_teams": {
                  "description": "The teams that are associated with this bulkemail.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "projects": {
                  "description": "The project for which the email was sent<br> Each item provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: [{\"id\": 410003}, {\"id\": 410014}]",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "reply_to_address": {
                  "description": "Email address that responses are directed to",
                  "type": "string"
                },
                "reply_to_assignments": {
                  "description": "Determine whether the email should reply to recipients' assignments",
                  "type": "boolean"
                },
                "reply_to_name": {
                  "description": "name of person getting reply",
                  "type": "string"
                },
                "reply_to_user_id": {
                  "description": "id of the person receiving reply emails<br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "scheduled_send_time": {
                  "description": "The YYYY-mm-ddThh:mm:ss-hh:mm string of whento send the email.",
                  "type": "string"
                },
                "selection_json": {
                  "description": "the selected json",
                  "type": "string"
                },
                "send_from_assignments": {
                  "description": "Determine whether the email should be sent from recipients' assignments",
                  "type": "boolean"
                },
                "should_cc_all": {
                  "description": "Indicates whether all cc'd recipients should receive and email",
                  "type": "boolean"
                },
                "subject": {
                  "description": "The subject of the email",
                  "type": "string"
                },
                "unsubscribe_enabled": {
                  "description": "Marks whether or not the message will have an unsubscribe",
                  "type": "boolean"
                },
                "use_personal_email": {
                  "description": "Indicates whether the personal email of a Person should be used",
                  "type": "boolean"
                }
              },
              "required": [],
              "type": "object"
            }
          }
        }
      },
      "patch_bulk_customfieldgroupCustomfieldgroup": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "name": {
                  "description": "Name of custom field group",
                  "type": "string"
                },
                "precedence": {
                  "description": "",
                  "format": "int64",
                  "type": "integer"
                }
              },
              "required": [],
              "type": "object"
            }
          }
        }
      },
      "patch_bulk_teamTeam": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "archived": {
                  "description": "Whether the record has been soft-deleted or not.",
                  "type": "boolean"
                },
                "members": {
                  "description": "The quorumusers that are associated with this team.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "name": {
                  "description": "",
                  "type": "string"
                },
                "organization_id": {
                  "description": "The Quorum client associated with this record.<br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                }
              },
              "required": [],
              "type": "object"
            }
          }
        }
      },
      "patch_bulk_issuemanagementIssuemanagement": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {},
              "required": [],
              "type": "object"
            }
          }
        }
      },
      "patch_bulk_customtagCustomtag": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "archived": {
                  "description": "Whether the record has been soft-deleted or not.",
                  "type": "boolean"
                },
                "conditional_boolean_value": {
                  "description": "If conditional_parent_custom_field is a boolean type, this field specifies what value the parent must have to render this custom field",
                  "type": "boolean"
                },
                "conditional_list_value": {
                  "description": "If this custom field is a conditional field, the values on the parent field that would trigger this field to appear.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "conditional_parent_custom_field_id": {
                  "description": "If the custom field is a conditional field, the parent field that determines when this custom field becomes visible.<br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "conditional_string_value": {
                  "description": "If conditional_parent_custom_field is a string, select one, or number type, this field specifies what value the parent must have to render this custom field",
                  "type": "string"
                },
                "creator_id": {
                  "description": "The user that created this custom field.<br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "default_boolean_value": {
                  "description": "If the tag type is a boolean, this field holds the default value. Otherwise, this field is Null",
                  "type": "boolean"
                },
                "default_multi_value": {
                  "description": "",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "default_string_value": {
                  "description": "If the tag type is a string, date, number, or single options, this field holds the default value. Otherwise, this field is Null",
                  "type": "string"
                },
                "description": {
                  "description": "Text describing the Custom Field",
                  "type": "string"
                },
                "display_null_value": {
                  "description": "If this field should be displayed on the object's profile page even if the value is null",
                  "type": "boolean"
                },
                "display_on_create_page": {
                  "description": "If this field should be displayed on the create page",
                  "type": "boolean"
                },
                "display_on_filters": {
                  "description": "If this field should be displayed on the search page",
                  "type": "boolean"
                },
                "display_on_profile": {
                  "description": "If this field should be displayed on the object's profile page",
                  "type": "boolean"
                },
                "external_description": {
                  "description": "The description displayed externally to a Supporter or Person as a tooltip",
                  "type": "string"
                },
                "external_name": {
                  "description": "The name displayed externally to a Supporter or Person",
                  "type": "string"
                },
                "group_id": {
                  "description": "The custom field group in which this custom field should display, if any.<br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "is_required": {
                  "description": "If this field should be required when editing the tag owner",
                  "type": "boolean"
                },
                "limited_to_teams": {
                  "description": "Used to permission objects. If the User's Teams intersect with the teams associatedwith these teams, the User can see this object<br> Each item provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: [{\"id\": 410003}, {\"id\": 410014}]",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "name": {
                  "description": "The name of this custom field.",
                  "type": "string"
                },
                "options": {
                  "description": "",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "options_new": {
                  "description": "The new implementation of options for Custom Fields. Instead of an ArrayField of values, options are a JSONField mapping slugs to value, order, and archived status",
                  "type": "string"
                },
                "precedence": {
                  "description": "The order in which the tag should display in the front-end user interface.",
                  "format": "int64",
                  "type": "integer"
                },
                "used_to_generate_outbox_email_lists": {
                  "description": "If this field should be visible and editable by the Supporter/Person on the unsubscribe page",
                  "type": "boolean"
                }
              },
              "required": [],
              "type": "object"
            }
          }
        }
      },
      "patch_bulk_eventEvent": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "address": {
                  "description": "",
                  "type": "string"
                },
                "archived": {
                  "description": "Whether the record has been soft-deleted or not.",
                  "type": "boolean"
                },
                "description": {
                  "description": "",
                  "type": "string"
                },
                "end": {
                  "description": "",
                  "format": "date-time",
                  "type": "string"
                },
                "is_custom_all_day_event": {
                  "description": "The event lasts all day.",
                  "type": "boolean"
                },
                "location": {
                  "description": "Where the meeting took place",
                  "type": "string"
                },
                "organization_id": {
                  "description": "The organization that owns this event.<br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "point_person_id": {
                  "description": "The organization's point person for this event.<br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "sponsoring_organization_id": {
                  "description": "The organization that sponsors this event.<br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "subject": {
                  "description": "",
                  "type": "string"
                },
                "when": {
                  "description": "",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [],
              "type": "object"
            }
          }
        }
      },
      "patch_bulk_publicorganizationPublicorganization": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "abbrev": {
                  "description": "An abbreviation for the public organization.",
                  "type": "string"
                },
                "archived": {
                  "description": "Whether the record has been soft-deleted or not.",
                  "type": "boolean"
                },
                "email": {
                  "description": "The pub org's email.",
                  "type": "string"
                },
                "limited_to_teams": {
                  "description": "The teams that are associated with this publicorganization.",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "name": {
                  "description": "The name of this organization.",
                  "type": "string"
                },
                "organization_type": {
                  "description": "The type of this public organization, such as legislative body or executive office.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PublicOrganizationType, for an explanation of values.</p>",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    35,
                    999,
                    1001,
                    1002,
                    1003,
                    1004,
                    1020,
                    1045,
                    1046,
                    1047,
                    1048,
                    1049,
                    1050,
                    1051,
                    1052
                  ],
                  "format": "int64",
                  "type": "integer"
                },
                "pac_org_type": {
                  "description": "The political action committee (PAC) type of this organization, if applicable.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name EntityType, for an explanation of values.</p>",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    100,
                    101,
                    1001,
                    1002,
                    1003,
                    1004,
                    1005,
                    1006,
                    1007,
                    1008,
                    1009,
                    1010,
                    1011,
                    1012,
                    1013,
                    1014,
                    1015,
                    1016,
                    1017,
                    1018,
                    1019,
                    3000,
                    100000
                  ],
                  "format": "int64",
                  "type": "integer"
                },
                "parent_organization_id": {
                  "description": "The publicorganization with which this publicorganization is associated.",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "phone_number": {
                  "description": "The telephone number for this organization.",
                  "type": "string"
                },
                "shipping_address": {
                  "description": "A shipping (default) address for the organization.",
                  "type": "string"
                },
                "tag_dict": {
                  "description": "Stores the custom field information for the object",
                  "type": "string"
                },
                "website": {
                  "description": "Public Org Website",
                  "type": "string"
                }
              },
              "required": [],
              "type": "object"
            }
          }
        }
      },
      "patch_bulk_supporteractionGrassrootssupporteraction": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "archived": {
                  "description": "Whether the record has been soft-deleted or not.",
                  "type": "boolean"
                },
                "confirmed": {
                  "description": "Whether or not the action has been confirmed in a campaign requiring approval",
                  "type": "boolean"
                },
                "date": {
                  "description": "The date that the supporter action took place",
                  "format": "date-time",
                  "type": "string"
                },
                "person_id": {
                  "description": "The person who the message is targeted for<br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "points_earned": {
                  "description": "Amount of points a supporter earned from this action",
                  "format": "int64",
                  "type": "integer"
                },
                "projects": {
                  "description": "The projects this supporter action is associated with. It can be associated with multiple projects<br> Each item provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: [{\"id\": 410003}, {\"id\": 410014}]",
                  "items": {
                    "format": "{\"id\": QUORUM_ID}",
                    "type": "string"
                  },
                  "type": "array"
                },
                "supporter_id": {
                  "description": "The supporter who owns this supporter action<br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                },
                "text": {
                  "description": "The text body of the message",
                  "type": "string"
                },
                "user_id": {
                  "description": "The user associated with the action<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br><br> The argument provided must be a string-encoded JSON object with a single key, <code>id</code>, and the value being the Quorum ID of the object referenced. Example: {\"id\": 410003}",
                  "format": "{\"id\": QUORUM_ID}",
                  "type": "string"
                }
              },
              "required": [],
              "type": "object"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "in": "query",
        "name": "api_key",
        "type": "apiKey"
      },
      "user_name": {
        "in": "query",
        "name": "user_name",
        "type": "apiKey"
      }
    },
    "schemas": {
      "AccountType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AccountType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "format": "int64",
        "type": "integer"
      },
      "AmendmentRulesStatus": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AmendmentRulesStatus, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "format": "int64",
        "type": "integer"
      },
      "AmendmentSource": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AmendmentSource, for an explanation of values.",
        "enum": [
          1,
          2,
          3
        ],
        "format": "int64",
        "type": "integer"
      },
      "AmendmentStatus": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AmendmentStatus, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "format": "int64",
        "type": "integer"
      },
      "AmendmentType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AmendmentType, for an explanation of values.",
        "enum": [
          1,
          2
        ],
        "format": "int64",
        "type": "integer"
      },
      "AppointedByType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AppointedByType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14
        ],
        "format": "int64",
        "type": "integer"
      },
      "BillStatus": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name BillStatus, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          93,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          209,
          210,
          211,
          1000,
          1001,
          1002,
          1003,
          1004,
          1005,
          1006,
          1007,
          1008,
          1009,
          1010,
          1011,
          1012,
          1013,
          1014,
          1015,
          1016,
          1017,
          1018,
          1019,
          1020,
          1021,
          1022,
          1023,
          1024,
          1025,
          1026,
          1027,
          1028,
          1029,
          1030,
          1031,
          1031,
          1032,
          1033,
          1034,
          1035,
          1036,
          1037,
          1038,
          1039,
          1040,
          1041,
          1042,
          1043,
          1044,
          1045,
          1046,
          1047,
          1048,
          1049,
          1050,
          1051,
          1052,
          1053,
          1054,
          1055,
          1056,
          1057,
          1058,
          1059,
          1060,
          1061,
          1062,
          1063,
          1064,
          1065,
          1066,
          1067,
          1068,
          1069,
          1070,
          1071,
          1072,
          1073,
          1074,
          1075,
          1076,
          1077,
          1078,
          1079,
          1080,
          1081,
          1082,
          1083,
          1084,
          1085,
          1086,
          1087,
          1088,
          1089,
          1090,
          1091,
          1092,
          1093,
          1094,
          1095,
          1096,
          1097,
          1098,
          1099,
          1100,
          1101,
          1102,
          1103,
          1104,
          1105,
          1106,
          1107,
          1108,
          1109,
          1110,
          1111,
          1112,
          1113,
          1114,
          1115,
          1116,
          1117,
          1118,
          1119,
          1120,
          1121,
          1122,
          1123,
          1124,
          1125,
          1126,
          1127,
          1128,
          1129,
          1130,
          1131,
          1132,
          1133,
          1134,
          1135,
          1136,
          1137,
          1138,
          1139,
          1140,
          1141,
          1142,
          1143,
          1144,
          1145,
          1146,
          1147,
          1148,
          1149,
          1150,
          1151,
          1152,
          1153,
          1154,
          1155,
          1156,
          1157,
          1158,
          1159,
          1160,
          1161,
          1162,
          1163,
          1164,
          1165,
          1166,
          1167,
          1168,
          1169,
          1170,
          1171,
          1172,
          1173,
          1174,
          1175,
          1176,
          1177,
          1178,
          1179,
          1180,
          1181,
          1182,
          1183,
          1184,
          1185,
          1186,
          1187,
          1188,
          1200,
          1201,
          1202,
          1203,
          1204,
          1205,
          1206,
          1207,
          1208,
          1209,
          1210
        ],
        "format": "int64",
        "type": "integer"
      },
      "BillType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name BillType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13
        ],
        "format": "int64",
        "type": "integer"
      },
      "BulkEmail": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "abtest": {
            "description": "The abtest with which this bulkemail is associated.",
            "example": "/api/abtest/1/",
            "type": "string"
          },
          "actions": {
            "description": "How many grassroots actions took place as a direct result of the links in this email",
            "format": "int64",
            "type": "integer"
          },
          "aggregate_clicks": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "aggregate_opens": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "aggregate_unsubscribes": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "archived": {
            "description": "Whether the record has been soft-deleted or not.",
            "type": "boolean"
          },
          "attachments": {
            "description": "The attachment with which this bulkemail is associated.",
            "example": "/api/attachment/1/",
            "type": "string"
          },
          "attempted_resend_count": {
            "description": "Indicates whether this email experienced a SparkpostException and how many times we have tried to resend it using ResendFailedRecipientBulkEmailsCronJob. If you want to repurpose this field, PLEASE make sure it still serves its purpose in the cron",
            "format": "int64",
            "type": "integer"
          },
          "bcc_rcpts": {
            "description": "email addresses for bcc recipients",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "bounces": {
            "description": "How many emails sent by the bulk email have bounced",
            "format": "int64",
            "type": "integer"
          },
          "campaigns": {
            "description": "The None with which this bulkemail is associated.",
            "example": "1/",
            "type": "string"
          },
          "cc_rcpts": {
            "description": "email addresses for cc recipients",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "click_rate": {
            "description": "Number of clicked emails divided by the number sent.",
            "format": "decimal",
            "type": "number"
          },
          "clicks": {
            "description": "How many emails sent by the bulk email have been clicked",
            "format": "int64",
            "type": "integer"
          },
          "compose_tool": {
            "description": "the type of compose tool used",
            "type": "string"
          },
          "content_version": {
            "description": "Version number of the bulk email's content.This value is incremented on every succesful save, to prevent concurrent saves erasing someones work.If a client attempts to save a BulkEmail without the passing in the current content_version, there is a potential save conflict.",
            "format": "int64",
            "type": "integer"
          },
          "created": {
            "description": "When the record was originally created.",
            "format": "date-time",
            "type": "string"
          },
          "current_status": {
            "description": "The current status of an email<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name EmailStatus, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "format": "int64",
            "type": "integer"
          },
          "custom_event": {
            "description": "the CustomEvent associated with this BulkEmail<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br>",
            "example": "/api/customevent/1/",
            "type": "string"
          },
          "email_count": {
            "description": "Number of emails sent in the bulk email",
            "format": "int64",
            "type": "integer"
          },
          "excluded_email_count": {
            "description": "Number of emails excluded in the bulk email",
            "format": "int64",
            "type": "integer"
          },
          "excluded_person_count": {
            "description": "Number of people excluded",
            "format": "int64",
            "type": "integer"
          },
          "excluded_press_count": {
            "description": "Number of press contacts excluded",
            "format": "int64",
            "type": "integer"
          },
          "excluded_supporter_count": {
            "description": "Number of supporters excluded",
            "format": "int64",
            "type": "integer"
          },
          "excludes_json": {
            "description": "the excludes json",
            "type": "object"
          },
          "excludes_json_old": {
            "description": "the excludes json",
            "type": "object"
          },
          "external_id": {
            "description": "A custom field that allows users to match this bulk email to a bulk email in an external system.",
            "type": "string"
          },
          "failed_recipients": {
            "description": "the failed rcpt chunks for any large emails (>7500)",
            "type": "object"
          },
          "from_address": {
            "description": "address email was sent from",
            "type": "string"
          },
          "from_name": {
            "description": "The name that is shown in the Email from field. Defaults to quorum user",
            "type": "string"
          },
          "from_user": {
            "description": "User id of the email sender; not always the same as the user_id (the email creator)",
            "example": "/api/user/1/",
            "type": "string"
          },
          "html_content": {
            "description": "html content of the email",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "initial_opens": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "is_abtest": {
            "description": "",
            "type": "boolean"
          },
          "is_draft": {
            "description": "Marks whether the email is a draft",
            "type": "boolean"
          },
          "is_moved": {
            "description": "Have this email's send_emails been archived",
            "type": "boolean"
          },
          "is_scheduled": {
            "description": "Marks whether or not the sending of the email was delayed",
            "type": "boolean"
          },
          "is_updating": {
            "description": "Marks whether the email is currently updating",
            "type": "boolean"
          },
          "json_content": {
            "description": "json from the email template if they choose to use one",
            "type": "object"
          },
          "last_updated": {
            "description": "the time the email was last updated",
            "format": "date-time",
            "type": "string"
          },
          "limited_to_teams": {
            "description": "The teams that are associated with this bulkemail.",
            "items": {
              "example": "/api/team/1/",
              "type": "string"
            },
            "type": "array"
          },
          "link_dict": {
            "description": "the link -> count key",
            "type": "object"
          },
          "merge_variables": {
            "description": "email addresses for bcc recipients",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "must_send_as_creator": {
            "description": "",
            "type": "boolean"
          },
          "open_rate": {
            "description": "Number of opened emails divided by the number sent.",
            "format": "decimal",
            "type": "number"
          },
          "opens": {
            "description": "How many emails sent by the bulk email have been opened",
            "format": "int64",
            "type": "integer"
          },
          "percent_opened": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "person_count": {
            "description": "Number of people selected",
            "format": "int64",
            "type": "integer"
          },
          "press_count": {
            "description": "Number of press contacts selected",
            "format": "int64",
            "type": "integer"
          },
          "projects": {
            "description": "The project for which the email was sent",
            "items": {
              "example": "/api/project/1/",
              "type": "string"
            },
            "type": "array"
          },
          "reply_count": {
            "description": "the number of replies to a bulkemail",
            "format": "int64",
            "type": "integer"
          },
          "reply_to_address": {
            "description": "Email address that responses are directed to",
            "type": "string"
          },
          "reply_to_assignments": {
            "description": "Determine whether the email should reply to recipients' assignments",
            "type": "boolean"
          },
          "reply_to_name": {
            "description": "name of person getting reply",
            "type": "string"
          },
          "reply_to_user": {
            "description": "id of the person receiving reply emails",
            "example": "/api/user/1/",
            "type": "string"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "root_bulk_email": {
            "description": "",
            "type": "string"
          },
          "saved_by_user": {
            "description": "Marks whether the email has had a user save, if this isfalse, the message was created, but had no user input",
            "type": "boolean"
          },
          "scheduled_send_time": {
            "description": "The YYYY-mm-ddThh:mm:ss-hh:mm string of whento send the email.",
            "type": "string"
          },
          "selection_json": {
            "description": "the selected json",
            "type": "object"
          },
          "selection_json_old": {
            "description": "the new selected json",
            "type": "object"
          },
          "send_from_assignments": {
            "description": "Determine whether the email should be sent from recipients' assignments",
            "type": "boolean"
          },
          "sent_datetime": {
            "description": "The time the bulk email is scheduled to be sent. If scheduled to be sent now, then set to current time",
            "format": "date-time",
            "type": "string"
          },
          "should_cc_all": {
            "description": "Indicates whether all cc'd recipients should receive and email",
            "type": "boolean"
          },
          "should_stagger_send": {
            "description": "Determine whether the email should have a staggered send cadence",
            "type": "boolean"
          },
          "subject": {
            "description": "The subject of the email",
            "type": "string"
          },
          "supporter_bounces": {
            "description": "How many emails sent by the bulk email to supporters have bounced",
            "format": "int64",
            "type": "integer"
          },
          "supporter_count": {
            "description": "Number of supporters selected",
            "format": "int64",
            "type": "integer"
          },
          "text": {
            "description": "html content of the email",
            "type": "string"
          },
          "unsubscribe_enabled": {
            "description": "Marks whether or not the message will have an unsubscribe",
            "type": "boolean"
          },
          "unsubscribes": {
            "description": "How many contacts unsubscribed from Outbox emails through a link on this email",
            "format": "int64",
            "type": "integer"
          },
          "updated": {
            "description": "When the record was most recently updated.",
            "format": "date-time",
            "type": "string"
          },
          "use_personal_email": {
            "description": "Indicates whether the personal email of a Person should be used",
            "type": "boolean"
          },
          "user": {
            "description": "User id of the person that created the email; not always the same as the from_user (the email sender)",
            "example": "/api/user/1/",
            "type": "string"
          },
          "variant_of": {
            "description": "AB tested BulkEmail that this BulkEmail is a variant of",
            "example": "/api/bulkemail/1/",
            "type": "string"
          },
          "variants": {
            "description": "The bulkemail with which this bulkemail is associated.",
            "example": "/api/bulkemail/1/",
            "type": "string"
          },
          "was_imported": {
            "description": "Whether the record was created via an import to the system.",
            "type": "boolean"
          },
          "winner": {
            "description": "The bulkemail with which this bulkemail is associated.",
            "example": "/api/bulkemail/1/",
            "type": "string"
          },
          "winner_of": {
            "description": "AB Test Variant that this email is copied from, which we may send later as the winner",
            "example": "/api/bulkemail/1/",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignPageLayout": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name CampaignPageLayout, for an explanation of values.",
        "enum": [
          1,
          2
        ],
        "format": "int64",
        "type": "integer"
      },
      "ComStafferType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name ComStafferType, for an explanation of values.",
        "enum": [
          1,
          2,
          3
        ],
        "format": "int64",
        "type": "integer"
      },
      "Committee": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "_ph_ie_id": {
            "description": "<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p>",
            "type": "string"
          },
          "_ph_lc_org_id": {
            "description": "<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p>",
            "format": "int64",
            "type": "integer"
          },
          "_ph_ls_core_organization_id": {
            "description": "<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p>",
            "format": "int64",
            "type": "integer"
          },
          "abbrev": {
            "description": "A really short abbreviation for the committee if present. Has no special significance.",
            "type": "string"
          },
          "address": {
            "description": "Committee's physical address.",
            "type": "string"
          },
          "chairs_string": {
            "description": "Cached information regarding the Chairs of the Committee",
            "type": "string"
          },
          "code": {
            "description": "An alphanumeric code used for the committee on THOMAS.gov / House.gov / Senate.gov. / Whoiswho",
            "type": "string"
          },
          "committee": {
            "description": "This field indicates whether the object is a commmittee,in which case the committee field is null, or a subcommittee,in which case this field gives the parent committee.",
            "example": "/api/committee/1/",
            "type": "string"
          },
          "committee_type": {
            "description": "Whether this is a Committee or a Caucus<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name CommitteeType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10
            ],
            "format": "int64",
            "type": "integer"
          },
          "created": {
            "description": "When the record was originally created.",
            "format": "date-time",
            "type": "string"
          },
          "facebook_url_array": {
            "description": "The url of the facebook page",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "fax": {
            "description": "Committee's fax number, from Know Who",
            "type": "string"
          },
          "icon": {
            "description": "",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "keywords": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name CommitteeKeyword, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                14,
                15,
                16,
                17,
                18
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "kw_abbrev": {
            "description": "Know Who abbreviation",
            "type": "string"
          },
          "meeting_documents": {
            "description": "Committee meeting documents",
            "type": "string"
          },
          "name": {
            "description": "The name of the committee or subcommittee.",
            "type": "string"
          },
          "num_dem_members": {
            "description": "The number of members of this committee that are Democrats.",
            "format": "int64",
            "type": "integer"
          },
          "num_female_members": {
            "description": "The number of members of this committee that are female.",
            "format": "int64",
            "type": "integer"
          },
          "num_ind_members": {
            "description": "The number of members of this committee that are Independent.",
            "format": "int64",
            "type": "integer"
          },
          "num_male_members": {
            "description": "The number of members of this committee that are male.",
            "format": "int64",
            "type": "integer"
          },
          "num_members": {
            "description": "The number of members in this committee.",
            "format": "int64",
            "type": "integer"
          },
          "num_rep_members": {
            "description": "The number of members of this committee that are Republicans.",
            "format": "int64",
            "type": "integer"
          },
          "parent_committee_abbrev": {
            "description": "",
            "type": "string"
          },
          "parent_committee_name": {
            "description": "",
            "type": "string"
          },
          "phone": {
            "description": "Committee's phone number, from Know Who/Who is Who",
            "type": "string"
          },
          "rank": {
            "description": "Manually edited relative rank of committee for display",
            "format": "int64",
            "type": "integer"
          },
          "ranking_members_string": {
            "description": "Cached info about ranking members",
            "type": "string"
          },
          "region": {
            "description": "Which Region this Committee belongs in.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              1000
            ],
            "format": "int64",
            "type": "integer"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "search_name": {
            "description": "The name of the committee or subcommittee with the full state in it for searching.",
            "type": "string"
          },
          "state_name": {
            "description": "",
            "type": "string"
          },
          "updated": {
            "description": "When the record was most recently updated.",
            "format": "date-time",
            "type": "string"
          },
          "url": {
            "description": "The committee's majority website.",
            "type": "string"
          },
          "url_minority": {
            "description": "The committee's minority website.",
            "type": "string"
          },
          "witnesses": {
            "description": "Committee witnesses",
            "type": "string"
          },
          "wiw_name": {
            "description": "<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p>",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CommitteeKeyword": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name CommitteeKeyword, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          14,
          15,
          16,
          17,
          18
        ],
        "format": "int64",
        "type": "integer"
      },
      "CommitteeType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name CommitteeType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "format": "int64",
        "type": "integer"
      },
      "CongressChamber": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name CongressChamber, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "format": "int64",
        "type": "integer"
      },
      "County": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "executives": {
            "description": "The newperson with which this county is associated.",
            "example": "/api/newperson/1/",
            "type": "string"
          },
          "fips_code": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "full_fips_string": {
            "description": "",
            "type": "string"
          },
          "geojson": {
            "description": "",
            "type": "string"
          },
          "id": {
            "description": "Quorum ID (Primary Key)",
            "format": "int64",
            "type": "integer"
          },
          "legislators": {
            "description": ""
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "number": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "number_string": {
            "description": "",
            "type": "string"
          },
          "population": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "state_abbrev": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomFieldGroup": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "created": {
            "description": "When the record was originally created.",
            "format": "date-time",
            "type": "string"
          },
          "creator": {
            "description": "",
            "type": "string"
          },
          "data_type": {
            "description": "Custom Field groups are organized by the Data Type they represent, such as Bill, Supporter, PublicOrganization, etc.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name QuorumDataType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              12,
              14,
              15,
              16,
              17,
              18,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124
            ],
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "Name of custom field group",
            "type": "string"
          },
          "organization": {
            "description": "The Quorum client associated with this record.",
            "example": "/api/organization/1/",
            "type": "string"
          },
          "precedence": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "updated": {
            "description": "When the record was most recently updated.",
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "description": "User who owns this Custom Field Group",
            "example": "/api/user/1/",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomTag": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "archived": {
            "description": "Whether the record has been soft-deleted or not.",
            "type": "boolean"
          },
          "conditional_boolean_value": {
            "description": "If conditional_parent_custom_field is a boolean type, this field specifies what value the parent must have to render this custom field",
            "type": "boolean"
          },
          "conditional_list_value": {
            "description": "If this custom field is a conditional field, the values on the parent field that would trigger this field to appear.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "conditional_parent_custom_field": {
            "description": "If the custom field is a conditional field, the parent field that determines when this custom field becomes visible.",
            "example": "/api/customtag/1/",
            "type": "string"
          },
          "conditional_string_value": {
            "description": "If conditional_parent_custom_field is a string, select one, or number type, this field specifies what value the parent must have to render this custom field",
            "type": "string"
          },
          "created": {
            "description": "When the record was originally created.",
            "format": "date-time",
            "type": "string"
          },
          "creator": {
            "description": "",
            "type": "string"
          },
          "default_boolean_value": {
            "description": "If the tag type is a boolean, this field holds the default value. Otherwise, this field is Null",
            "type": "boolean"
          },
          "default_multi_value": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "default_string_value": {
            "description": "If the tag type is a string, date, number, or single options, this field holds the default value. Otherwise, this field is Null",
            "type": "string"
          },
          "default_value": {
            "description": "Regardless of tag type, the default value is stored as a string in this singular field. This is for the ResourceTable component to reference and create a Default Value row.",
            "type": "string"
          },
          "description": {
            "description": "Text describing the Custom Field",
            "type": "string"
          },
          "display_null_value": {
            "description": "If this field should be displayed on the object's profile page even if the value is null",
            "type": "boolean"
          },
          "display_on_create_page": {
            "description": "If this field should be displayed on the create page",
            "type": "boolean"
          },
          "display_on_filters": {
            "description": "If this field should be displayed on the search page",
            "type": "boolean"
          },
          "display_on_profile": {
            "description": "If this field should be displayed on the object's profile page",
            "type": "boolean"
          },
          "external_description": {
            "description": "The description displayed externally to a Supporter or Person as a tooltip",
            "type": "string"
          },
          "external_name": {
            "description": "The name displayed externally to a Supporter or Person",
            "type": "string"
          },
          "group": {
            "description": "The custom field group in which this custom field should display, if any.",
            "example": "/api/customfieldgroup/1/",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "is_editable": {
            "description": "Whether this field is editable from the application (via the UI). Useful to set to False if managed via a backend process.",
            "type": "boolean"
          },
          "is_required": {
            "description": "If this field should be required when editing the tag owner",
            "type": "boolean"
          },
          "limited_to_teams": {
            "description": "Used to permission objects. If the User's Teams intersect with the teams associatedwith these teams, the User can see this object",
            "items": {
              "example": "/api/team/1/",
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of this custom field.",
            "type": "string"
          },
          "options": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "options_new": {
            "description": "The new implementation of options for Custom Fields. Instead of an ArrayField of values, options are a JSONField mapping slugs to value, order, and archived status",
            "type": "object"
          },
          "organization": {
            "description": "The Quorum client associated with this record.",
            "example": "/api/organization/1/",
            "type": "string"
          },
          "precedence": {
            "description": "The order in which the tag should display in the front-end user interface.",
            "format": "int64",
            "type": "integer"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "slug": {
            "description": "The Quorum-generated identifying string for this custom field, used to actually store the values on the underlying records.  This field is persistent for this record and unique across all records of this type for your Organization.",
            "type": "string"
          },
          "tag_owner": {
            "description": "Represent the owner model for this CustomTag, e.g. Supporter, PublicOrganization<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name QuorumDataType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              12,
              14,
              15,
              16,
              17,
              18,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124
            ],
            "format": "int64",
            "type": "integer"
          },
          "tag_type": {
            "description": "The type of the custom tag, e.g. Number, String, Choose One, Choose Many, etc.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name TagType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              5,
              6,
              7,
              8
            ],
            "format": "int64",
            "type": "integer"
          },
          "updated": {
            "description": "When the record was most recently updated.",
            "format": "date-time",
            "type": "string"
          },
          "used_to_generate_outbox_email_lists": {
            "description": "If this field should be visible and editable by the Supporter/Person on the unsubscribe page",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DeliveryMedium": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name DeliveryMedium, for an explanation of values.",
        "enum": [
          1,
          2,
          3
        ],
        "format": "int64",
        "type": "integer"
      },
      "DocumentSourceType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name DocumentSourceType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          100
        ],
        "format": "int64",
        "type": "integer"
      },
      "DocumentType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name DocumentType, for an explanation of values.",
        "enum": [
          5,
          6,
          7,
          9,
          10,
          17,
          18,
          21,
          22,
          23,
          24,
          25,
          27,
          34,
          35,
          38,
          39,
          40,
          41,
          43,
          44,
          45,
          46,
          47,
          50,
          52,
          53,
          54,
          55,
          56,
          57,
          64,
          65,
          67,
          68,
          71,
          72,
          73,
          74,
          101,
          1001,
          1002,
          1003,
          1004,
          1005,
          1006,
          1007,
          1008,
          1009,
          1010,
          1011,
          1012,
          1013,
          1014,
          1015,
          1016,
          1017,
          1018,
          1019
        ],
        "format": "int64",
        "type": "integer"
      },
      "ElectCode": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name ElectCode, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "format": "int64",
        "type": "integer"
      },
      "EmailStatus": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name EmailStatus, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15
        ],
        "format": "int64",
        "type": "integer"
      },
      "EntityType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name EntityType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          100,
          101,
          1001,
          1002,
          1003,
          1004,
          1005,
          1006,
          1007,
          1008,
          1009,
          1010,
          1011,
          1012,
          1013,
          1014,
          1015,
          1016,
          1017,
          1018,
          1019,
          3000,
          100000
        ],
        "format": "int64",
        "type": "integer"
      },
      "Event": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "address": {
            "description": "",
            "type": "string"
          },
          "alert_cache": {
            "description": "Internal field used in alerts processing.  While it does represent a snapshot of information from the object, it should not be relied upon for external use as it may be stale without indication.",
            "type": "object"
          },
          "amendment_mentions": {
            "description": "The newamendments that are associated with this event.",
            "items": {
              "example": "/api/newamendment/1/",
              "type": "string"
            },
            "type": "array"
          },
          "archived": {
            "description": "Whether the record has been soft-deleted or not.",
            "type": "boolean"
          },
          "bill_mentions": {
            "description": "The records of Bills related to this event.",
            "items": {
              "example": "/api/newbill/1/",
              "type": "string"
            },
            "type": "array"
          },
          "chamber": {
            "description": "What chamber does this event relate to?<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name CongressChamber, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "format": "int64",
            "type": "integer"
          },
          "committee_mentions": {
            "description": "The committees that are associated with this event.",
            "items": {
              "example": "/api/committee/1/",
              "type": "string"
            },
            "type": "array"
          },
          "created": {
            "description": "When the record was originally created.",
            "format": "date-time",
            "type": "string"
          },
          "cspan_channel": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "cspan_id": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "description": {
            "description": "",
            "type": "string"
          },
          "duration": {
            "description": "Total duration of the meeting, in seconds converted from integer minutes. Will be greater than or equal to last transcript timestamp",
            "format": "int64",
            "type": "integer"
          },
          "end": {
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          "event_subtype": {
            "description": "Sub-type used to differentiate within proxies",
            "format": "int64",
            "type": "integer"
          },
          "event_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name EventType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              1000
            ],
            "format": "int64",
            "type": "integer"
          },
          "expected_number_of_transcripts": {
            "description": "Number of transcripts made in the meeting. Assigned after smushing together meetings",
            "format": "int64",
            "type": "integer"
          },
          "extra_info": {
            "description": "Additional information about the event, as required.",
            "type": "object"
          },
          "fact_squared_meeting_status": {
            "description": "Deprecated.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name FactSquaredCommitteeMeetingParsingStatus, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "format": "int64",
            "type": "integer"
          },
          "fact_squared_slug": {
            "description": "Deprecated.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p>",
            "type": "string"
          },
          "full_transcript_url": {
            "description": "Link to the full committee meeting transcript in S3. Uploaded during transcript procesing",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "is_cancelled": {
            "description": "The event was cancelled.",
            "type": "boolean"
          },
          "is_custom_all_day_event": {
            "description": "The event lasts all day.",
            "type": "boolean"
          },
          "issue_mentions": {
            "description": "Terms mentioned in press releases etc.<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br>",
            "items": {
              "example": "/api/billterm/1/",
              "type": "string"
            },
            "type": "array"
          },
          "local_video_path": {
            "description": "Internal field.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p>",
            "type": "string"
          },
          "location": {
            "description": "Where the meeting took place",
            "type": "string"
          },
          "meeting_video_pipeline_status": {
            "description": "Internal field.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MeetingVideoPipelineStatus, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11
            ],
            "format": "int64",
            "type": "integer"
          },
          "organization": {
            "description": "The organization that owns this event.",
            "example": "/api/organization/1/",
            "type": "string"
          },
          "original_content": {
            "description": "The original version of the event we grab. This could be HTML or json.",
            "type": "string"
          },
          "original_number_of_transcripts": {
            "description": "Deprecated.",
            "format": "int64",
            "type": "integer"
          },
          "person_mentions": {
            "description": "The records of People (Officials or Staffers) related to this event.",
            "items": {
              "example": "/api/newperson/1/",
              "type": "string"
            },
            "type": "array"
          },
          "plain_subject": {
            "description": "",
            "type": "string"
          },
          "point_person": {
            "description": "The organization's point person for this event.",
            "example": "/api/user/1/",
            "type": "string"
          },
          "point_person_name": {
            "description": "",
            "type": "string"
          },
          "region": {
            "description": "What region does this event relate to?<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              1000
            ],
            "format": "int64",
            "type": "integer"
          },
          "related_documents": {
            "description": "The documents that are associated with this event.",
            "items": {
              "example": "/api/document/1/",
              "type": "string"
            },
            "type": "array"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "revai_job_id": {
            "description": "Internal field.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p>",
            "type": "string"
          },
          "search_date": {
            "description": "",
            "type": "string"
          },
          "sequence_time_cache": {
            "description": "A mapping of transcript sequences to the time a transcript begins. Mapping for all transcripts in meeting. Key: sequence, value: second_start from the CommitteeTranscript (Document) objects",
            "type": "object"
          },
          "source_committee": {
            "description": "The committee with which this event is associated.",
            "example": "/api/committee/1/",
            "type": "string"
          },
          "source_committee_name": {
            "description": "",
            "type": "string"
          },
          "source_url": {
            "description": "",
            "type": "string"
          },
          "source_video_url": {
            "description": "The source url of CommitteeMeeting video. Should be the external URL accessible via web browser.",
            "example": "https://www.youtube.com/watch?v=cFSWIaVHzRk",
            "type": "string"
          },
          "sponsoring_organization": {
            "description": "The organization that sponsors this event.",
            "example": "/api/publicorganization/1/",
            "type": "string"
          },
          "sponsoring_organization_name": {
            "description": "",
            "type": "string"
          },
          "subject": {
            "description": "",
            "type": "string"
          },
          "transcript_s3_file_name": {
            "description": "Internal field.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p>",
            "type": "string"
          },
          "transcription_pipeline_history": {
            "description": "The transcription pipeline status for each step",
            "type": "object"
          },
          "updated": {
            "description": "When the record was most recently updated.",
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "description": "The creator of the event.",
            "example": "/api/user/1/",
            "type": "string"
          },
          "video_url": {
            "description": "Internal field.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p>",
            "type": "string"
          },
          "vote_mentions": {
            "description": "The records of Votes related to this event.",
            "items": {
              "example": "/api/vote/1/",
              "type": "string"
            },
            "type": "array"
          },
          "when": {
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          "witnesses": {
            "description": "Witnesses that will be at the event.<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br>",
            "items": {
              "example": "/api/committeewitness/1/",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EventType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name EventType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          1000
        ],
        "format": "int64",
        "type": "integer"
      },
      "FTSStripLevel": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name FTSStripLevel, for an explanation of values.",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          666
        ],
        "format": "int64",
        "type": "integer"
      },
      "FactSquaredCommitteeMeetingParsingStatus": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name FactSquaredCommitteeMeetingParsingStatus, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "format": "int64",
        "type": "integer"
      },
      "Gender": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Gender, for an explanation of values.",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "format": "int64",
        "type": "integer"
      },
      "GeneralBillStatus": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name GeneralBillStatus, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110
        ],
        "format": "int64",
        "type": "integer"
      },
      "GrassrootsInteractionType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name GrassrootsInteractionType, for an explanation of values.",
        "enum": [
          1,
          3,
          4,
          6,
          7,
          11,
          21,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          34,
          35,
          36,
          37,
          43,
          44,
          45,
          46,
          48,
          49,
          50,
          51,
          52,
          85,
          104,
          105,
          106,
          107,
          108,
          109
        ],
        "format": "int64",
        "type": "integer"
      },
      "GrassrootsSupporterAction": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "action_center": {
            "description": "The actioncentersettings with which this grassrootssupporteraction is associated.",
            "example": "/api/actioncentersettings/1/",
            "type": "string"
          },
          "amount": {
            "description": "A nonnegative transaction account, in the smallest denomination, assummed to be USD cents",
            "format": "int64",
            "type": "integer"
          },
          "archived": {
            "description": "Whether the record has been soft-deleted or not.",
            "type": "boolean"
          },
          "audit_trail": {
            "description": "The results from the delivery of the supporter action",
            "type": "object"
          },
          "bulk_email": {
            "description": "The bulkemail with which this grassrootssupporteraction is associated.",
            "example": "/api/bulkemail/1/",
            "type": "string"
          },
          "cache_json": {
            "description": "Tricky cache needed for inline formatting",
            "type": "object"
          },
          "call_duration": {
            "description": "Length of grassroots phone call in seconds",
            "format": "int64",
            "type": "integer"
          },
          "campaign": {
            "description": "The campaign this supporter action is associated with<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br>",
            "example": "/api/campaign/1/",
            "type": "string"
          },
          "clicks": {
            "description": "Number of times links in email have been clicked",
            "format": "int64",
            "type": "integer"
          },
          "confirmed": {
            "description": "Whether or not the action has been confirmed in a campaign requiring approval",
            "type": "boolean"
          },
          "created": {
            "description": "When the record was originally created.",
            "format": "date-time",
            "type": "string"
          },
          "date": {
            "description": "The date that the supporter action took place",
            "format": "date-time",
            "type": "string"
          },
          "delivered": {
            "description": "Whether the message was delivered successfully or not",
            "type": "boolean"
          },
          "delivered_timestamp": {
            "description": "Time when the delivery was made",
            "format": "date-time",
            "type": "string"
          },
          "delivery_id": {
            "description": "The delivery id from submitting it via CWC API",
            "type": "string"
          },
          "failed_delivery": {
            "description": "Marks if the supporter action was attempted to be delivered and failed",
            "type": "boolean"
          },
          "first_open": {
            "description": "timestamp for when the first open occurred",
            "format": "date-time",
            "type": "string"
          },
          "from_grassroots": {
            "description": "Indicator if the action is inlvolved in grassroots. Holdover from Note model",
            "type": "boolean"
          },
          "http_referer": {
            "description": "What exact page this particular action / supporter came from when they registered or took action",
            "type": "string"
          },
          "humanized_text": {
            "description": "",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "interaction_type": {
            "description": "Interaction type for the action. Required for all actions to help build inlines<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name GrassrootsInteractionType, for an explanation of values.</p>",
            "enum": [
              1,
              3,
              4,
              6,
              7,
              11,
              21,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              34,
              35,
              36,
              37,
              43,
              44,
              45,
              46,
              48,
              49,
              50,
              51,
              52,
              85,
              104,
              105,
              106,
              107,
              108,
              109
            ],
            "format": "int64",
            "type": "integer"
          },
          "link_dict": {
            "description": "the link -> count key",
            "type": "object"
          },
          "message_status": {
            "description": "The current status of this supporter action<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SupporterActionStatus, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "format": "int64",
            "type": "integer"
          },
          "note_type": {
            "description": "Note type for the action. Should all be interactions<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name NoteType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int64",
            "type": "integer"
          },
          "num_attempts": {
            "description": "The number of delivery attempts on a suporter action",
            "format": "int64",
            "type": "integer"
          },
          "opens": {
            "description": "Number of times email has been opened",
            "format": "int64",
            "type": "integer"
          },
          "organization": {
            "description": "The organization that the supporter action is taking an action for",
            "example": "/api/organization/1/",
            "type": "string"
          },
          "payroll_frequency_type": {
            "description": "Payroll frequency for payroll contributions<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PayrollFrequencyType, for an explanation of values.</p>",
            "enum": [
              1,
              3,
              4,
              5
            ],
            "format": "int64",
            "type": "integer"
          },
          "person": {
            "description": "The person who the message is targeted for",
            "example": "/api/newperson/1/",
            "type": "string"
          },
          "points_earned": {
            "description": "Amount of points a supporter earned from this action",
            "format": "int64",
            "type": "integer"
          },
          "projects": {
            "description": "The projects this supporter action is associated with. It can be associated with multiple projects",
            "items": {
              "example": "/api/project/1/",
              "type": "string"
            },
            "type": "array"
          },
          "raw_content": {
            "description": "The raw content of the message (should be full text searchable)",
            "type": "string"
          },
          "regions": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                1000
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "searchable_date": {
            "description": "Date searchable and in a human-readable format",
            "type": "string"
          },
          "social_media_type": {
            "description": "The type of social media being shared on Shared campaigns<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SocialMediaType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "format": "int64",
            "type": "integer"
          },
          "source_type": {
            "description": "Our best guess as to the source of a particular thing, whether internal to Quorum, a particular website, etc.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name UTMSourceType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22
            ],
            "format": "int64",
            "type": "integer"
          },
          "subject": {
            "description": "The subject of the message to legislator",
            "type": "string"
          },
          "submitting_org_name": {
            "description": "If this is a comment regulation campaign, this the name of the organization",
            "type": "string"
          },
          "supporter": {
            "description": "The supporter who owns this supporter action",
            "example": "/api/newsupporter/1/",
            "type": "string"
          },
          "supporter_action_type": {
            "description": "The type of the supporter action<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SupporterActionType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              7,
              8,
              10,
              11,
              12,
              15,
              17,
              18,
              19,
              23,
              26,
              100,
              101,
              102,
              103
            ],
            "format": "int64",
            "type": "integer"
          },
          "text": {
            "description": "The text body of the message",
            "type": "string"
          },
          "timestamp": {
            "description": "Various timestamps collected every time an action has been attempted to be delivered",
            "type": "object"
          },
          "transaction_method_type": {
            "description": "The Type of method - credit card, ach transfer, etc<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name TransactionMethodType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12
            ],
            "format": "int64",
            "type": "integer"
          },
          "unique_identifier": {
            "description": "The external (e.g. Salesforce ID) unique identifier",
            "type": "string"
          },
          "updated": {
            "description": "When the record was most recently updated.",
            "format": "date-time",
            "type": "string"
          },
          "utm_campaign": {
            "description": "Identifies a specific product promotion or strategic campaign.",
            "type": "string"
          },
          "utm_content": {
            "description": "Identifies what specifically was clicked to bring the user to the site, such as a banner ad or a text link.",
            "type": "string"
          },
          "utm_medium": {
            "description": "Identifies what type of link was used, such as cost per click or email.",
            "type": "string"
          },
          "utm_source": {
            "description": "Identifies which site sent the traffic, and is a required UTM parameter.",
            "type": "string"
          },
          "utm_term": {
            "description": "Identifies search terms.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InteractionType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name InteractionType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          93,
          94,
          95,
          96,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          108,
          109
        ],
        "format": "int64",
        "type": "integer"
      },
      "IntradoAudienceFocus": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name IntradoAudienceFocus, for an explanation of values.",
        "enum": [
          1,
          2
        ],
        "format": "int64",
        "type": "integer"
      },
      "IntradoCoverage": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name IntradoCoverage, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "format": "int64",
        "type": "integer"
      },
      "IntradoFrequency": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name IntradoFrequency, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12
        ],
        "format": "int64",
        "type": "integer"
      },
      "IntradoMediaType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name IntradoMediaType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31
        ],
        "format": "int64",
        "type": "integer"
      },
      "IntradoOutletTier": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name IntradoOutletTier, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21
        ],
        "format": "int64",
        "type": "integer"
      },
      "IntradoPreferredDistributionMode": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name IntradoPreferredDistributionMode, for an explanation of values.",
        "enum": [
          1,
          2
        ],
        "format": "int64",
        "type": "integer"
      },
      "IssueManagement": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "action_centers": {
            "description": "The actioncentersettingss that are associated with this project.",
            "items": {
              "example": "/api/actioncentersettings/1/",
              "type": "string"
            },
            "type": "array"
          },
          "amendments": {
            "description": "The newamendments that are associated with this project.",
            "items": {
              "example": "/api/newamendment/1/",
              "type": "string"
            },
            "type": "array"
          },
          "archived": {
            "description": "Whether the record has been soft-deleted or not.",
            "type": "boolean"
          },
          "bills": {
            "description": "The newbills that are associated with this project.",
            "items": {
              "example": "/api/newbill/1/",
              "type": "string"
            },
            "type": "array"
          },
          "bulksms_messages": {
            "description": "The bulksmss that are associated with this project.",
            "items": {
              "example": "/api/bulksms/1/",
              "type": "string"
            },
            "type": "array"
          },
          "can_be_tagged_to_interactions": {
            "description": "Whether this issue should be an option for tagging interactions to",
            "type": "boolean"
          },
          "categories": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "caucuses": {
            "description": "The committees that are associated with this project.",
            "items": {
              "example": "/api/committee/1/",
              "type": "string"
            },
            "type": "array"
          },
          "committees": {
            "description": "The committees that are associated with this project.",
            "items": {
              "example": "/api/committee/1/",
              "type": "string"
            },
            "type": "array"
          },
          "converted": {
            "description": "",
            "type": "boolean"
          },
          "cost": {
            "description": "Cost of the project",
            "format": "int64",
            "type": "integer"
          },
          "creator": {
            "description": "User id of the project creator",
            "example": "/api/user/1/",
            "type": "string"
          },
          "creator_edit_only": {
            "description": "Whether other users may edit project settings",
            "type": "boolean"
          },
          "custom_events": {
            "description": "The customevents that are associated with this project.",
            "items": {
              "example": "/api/customevent/1/",
              "type": "string"
            },
            "type": "array"
          },
          "deadline": {
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          "default": {
            "description": "Whether or not this a default project",
            "type": "boolean"
          },
          "documents": {
            "description": "The newdocuments that are associated with this project.",
            "items": {
              "example": "/api/newdocument/1/",
              "type": "string"
            },
            "type": "array"
          },
          "due_date": {
            "description": "Due date for project",
            "type": "string"
          },
          "emails": {
            "description": "The bulkemails that are associated with this project.",
            "items": {
              "example": "/api/bulkemail/1/",
              "type": "string"
            },
            "type": "array"
          },
          "events": {
            "description": "The newevents that are associated with this project.",
            "items": {
              "example": "/api/newevent/1/",
              "type": "string"
            },
            "type": "array"
          },
          "grassroots_order": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "grassroots_page_layout_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name CampaignPageLayout, for an explanation of values.</p>",
            "enum": [
              1,
              2
            ],
            "format": "int64",
            "type": "integer"
          },
          "grassroots_vanity_url_slug": {
            "description": "The slug that will appear in grassroots URL, if desired. If not, use the id.",
            "type": "string"
          },
          "icon": {
            "description": "The string of the icon related to this project.",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "image_url": {
            "description": "Cached path of image url",
            "type": "string"
          },
          "is_carryover": {
            "description": "Whether or not to show carryover legislation",
            "type": "boolean"
          },
          "is_grassroots_issue": {
            "description": "",
            "type": "boolean"
          },
          "is_issue": {
            "description": "",
            "type": "boolean"
          },
          "is_limited_to_creator": {
            "description": "Used to permission objects to only the creator of the object",
            "type": "boolean"
          },
          "is_visible_to_partners": {
            "description": "Marks the object to be visible to users thatare on the partner organizations (organization.partners M2M)as well as the normal limited_to_teams users",
            "type": "boolean"
          },
          "issue_expert": {
            "description": "The name of the person who is the most knowledgeable in this issue area.",
            "type": "string"
          },
          "limited_to_teams": {
            "description": "The teams that are associated with this project.",
            "items": {
              "example": "/api/team/1/",
              "type": "string"
            },
            "type": "array"
          },
          "long_description": {
            "description": "html text of the page",
            "type": "string"
          },
          "magic_boards": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MagicBoardType, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                7,
                8,
                9,
                10,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "management_statistics": {
            "description": "JSON to store ratings for influencability, urgency, and importance",
            "type": "object"
          },
          "members": {
            "description": "The newpersons that are associated with this project.",
            "items": {
              "example": "/api/newperson/1/",
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the project",
            "type": "string"
          },
          "number_of_campaign_actions": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "number_of_campaigns": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "number_of_interactions": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "parent": {
            "description": "The parent of this project",
            "example": "/api/project/1/",
            "type": "string"
          },
          "priority": {
            "description": "The project's priority score<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name ProjectRating, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int64",
            "type": "integer"
          },
          "project_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name ProjectType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int64",
            "type": "integer"
          },
          "public_organizations": {
            "description": "The publicorganizations that are associated with this project.",
            "items": {
              "example": "/api/publicorganization/1/",
              "type": "string"
            },
            "type": "array"
          },
          "region_tag": {
            "description": "The region field",
            "type": "string"
          },
          "regulations": {
            "description": "The regulations that are associated with this project.",
            "items": {
              "example": "/api/regulation/1/",
              "type": "string"
            },
            "type": "array"
          },
          "related_region": {
            "description": "A field for regions related to the project.",
            "type": "string"
          },
          "remove_with_stance": {
            "description": "Whether a search terms list will show bills with a stance",
            "type": "boolean"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "search_terms": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "short_description": {
            "description": "A short description of the project",
            "type": "string"
          },
          "shown_in_table": {
            "description": "Whether this project appears in theproject_prioritization page or not",
            "type": "boolean"
          },
          "supporters": {
            "description": "The newsupporters that are associated with this project.",
            "items": {
              "example": "/api/newsupporter/1/",
              "type": "string"
            },
            "type": "array"
          },
          "votes": {
            "description": "The votes that are associated with this project.",
            "items": {
              "example": "/api/vote/1/",
              "type": "string"
            },
            "type": "array"
          },
          "year": {
            "description": "",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Language": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Language, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          9000
        ],
        "format": "int64",
        "type": "integer"
      },
      "MagicBoardType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MagicBoardType, for an explanation of values.",
        "enum": [
          1,
          2,
          7,
          8,
          9,
          10,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26
        ],
        "format": "int64",
        "type": "integer"
      },
      "MajorOrganizationType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MajorOrganizationType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19
        ],
        "format": "int64",
        "type": "integer"
      },
      "MajorPersonType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MajorPersonType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25
        ],
        "format": "int64",
        "type": "integer"
      },
      "MajorRoleType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MajorRoleType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51
        ],
        "format": "int64",
        "type": "integer"
      },
      "MediaSourceCategory": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MediaSourceCategory, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12
        ],
        "format": "int64",
        "type": "integer"
      },
      "MediaSourceRank": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MediaSourceRank, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "format": "int64",
        "type": "integer"
      },
      "MediaSourceType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MediaSourceType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15
        ],
        "format": "int64",
        "type": "integer"
      },
      "MeetingVideoPipelineStatus": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MeetingVideoPipelineStatus, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "format": "int64",
        "type": "integer"
      },
      "MessageEvent": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "archived": {
            "description": "Whether the record has been soft-deleted or not.",
            "type": "boolean"
          },
          "bulk_email": {
            "description": "The bulkemail with which this messageevent is associated.",
            "example": "/api/bulkemail/1/",
            "type": "string"
          },
          "event_id": {
            "description": "unique event identifier generated by sparkpost",
            "type": "string"
          },
          "event_json": {
            "description": "the event info",
            "type": "object"
          },
          "event_name": {
            "description": "this is the name of a specific event (ex. click, called Event on Sparkpost)",
            "type": "string"
          },
          "event_timestamp": {
            "description": "timestamp for when the event occurred",
            "format": "date-time",
            "type": "string"
          },
          "event_type": {
            "description": "this is the grouping of events (Event Type on Sparkpost)",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "send_email": {
            "description": "The sendemail with which this messageevent is associated.",
            "example": "/api/sendemail/1/",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetaOrganizationType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MetaOrganizationType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17
        ],
        "format": "int64",
        "type": "integer"
      },
      "MetaRoleType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MetaRoleType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "format": "int64",
        "type": "integer"
      },
      "MinorPersonType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MinorPersonType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          31,
          32,
          33,
          34,
          35,
          36
        ],
        "format": "int64",
        "type": "integer"
      },
      "MinorRoleType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MinorRoleType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          93,
          94,
          95,
          96,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          114,
          115,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189,
          190,
          191,
          192,
          193,
          194,
          195,
          196,
          197,
          198,
          199,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          209,
          210,
          211,
          212,
          213,
          214,
          215,
          216,
          217,
          218,
          219,
          220,
          221,
          222,
          223,
          224,
          225,
          226,
          227,
          228,
          229,
          230,
          231,
          232,
          233,
          234,
          235,
          236,
          237,
          238,
          239,
          240,
          241,
          242,
          243,
          244,
          245,
          246,
          247,
          248,
          249,
          250,
          251,
          252,
          253,
          254,
          255,
          256,
          257,
          258,
          259,
          260,
          261,
          262,
          263,
          264,
          265,
          266,
          267,
          268,
          269,
          270,
          271,
          272,
          273,
          274,
          275,
          276,
          277,
          278,
          279,
          280,
          281,
          282,
          283,
          284,
          285,
          286,
          287,
          288,
          289,
          290,
          291,
          292,
          293,
          294,
          295,
          296,
          297,
          298,
          299,
          300,
          301,
          302,
          303,
          304,
          305,
          306,
          307,
          308,
          309,
          310,
          311,
          312,
          313,
          314,
          315,
          316,
          317,
          318,
          319,
          320,
          321,
          322,
          323,
          324,
          325,
          326,
          327,
          328,
          329,
          330,
          331,
          332,
          333,
          334,
          335,
          336,
          337,
          338,
          339,
          340,
          341,
          342,
          343,
          344,
          345,
          346,
          347,
          348,
          349,
          350,
          351,
          352,
          353,
          354,
          355,
          356,
          357,
          358,
          360,
          361,
          362,
          363,
          364,
          365,
          366,
          367,
          368,
          369,
          370
        ],
        "format": "int64",
        "type": "integer"
      },
      "Municipality": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "fips_code": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "full_fips_string": {
            "description": "",
            "type": "string"
          },
          "geojson": {
            "description": "",
            "type": "string"
          },
          "id": {
            "description": "Quorum ID (Primary Key)",
            "format": "int64",
            "type": "integer"
          },
          "legislators": {
            "description": ""
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "number": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "number_string": {
            "description": "",
            "type": "string"
          },
          "population": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "state_abbrev": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NewAmendment": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "actions": {
            "description": "This field requires special handling.",
            "type": "object"
          },
          "alert_cache": {
            "description": "Internal field used in alerts processing.  While it does represent a snapshot of information from the object, it should not be relied upon for external use as it may be stale without indication.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p>",
            "type": "object"
          },
          "amendment_type": {
            "description": "The amendment's type, indicating the chmaber in which the amendment was offered.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AmendmentType, for an explanation of values.</p>",
            "enum": [
              1,
              2
            ],
            "format": "int64",
            "type": "integer"
          },
          "bill": {
            "description": "The bill the amendment amends.",
            "example": "/api/newbill/1/",
            "type": "string"
          },
          "congress_number": {
            "description": "The number of the congress (for indexing, etc.)",
            "format": "int64",
            "type": "integer"
          },
          "created": {
            "description": "When the record was originally created.",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "A description of the amendment.",
            "type": "string"
          },
          "dms_id": {
            "description": "The dms_id for each amendment, if applicable",
            "type": "string"
          },
          "fts_strip_level": {
            "description": "Internal field.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name FTSStripLevel, for an explanation of values.</p>",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              666
            ],
            "format": "int64",
            "type": "integer"
          },
          "house_number": {
            "description": "The number given by the House if this is a House Amendment. House does numbers per bill, where congress.gov does overall.",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "label": {
            "description": "The label for the amendment.",
            "type": "string"
          },
          "last_action_text": {
            "description": "",
            "type": "string"
          },
          "num_cosponsors": {
            "description": "Number of cosponsors that a amendment has.",
            "format": "int64",
            "type": "integer"
          },
          "number": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "offered_date": {
            "description": "The date the amendment was offered.",
            "format": "date-time",
            "type": "string"
          },
          "primary_party": {
            "description": "Party of majority of sponsors<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Party, for an explanation of values.</p>",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21
            ],
            "format": "int64",
            "type": "integer"
          },
          "region": {
            "description": "The region that the amendment belongs to.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              1000
            ],
            "format": "int64",
            "type": "integer"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "rules_number": {
            "description": "The number given by rules.house.gov",
            "format": "int64",
            "type": "integer"
          },
          "rules_status": {
            "description": "The amendment's status according to rules.house.gov.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AmendmentRulesStatus, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "format": "int64",
            "type": "integer"
          },
          "snippets": {
            "description": ""
          },
          "source": {
            "description": "The source of this amendment<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AmendmentSource, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int64",
            "type": "integer"
          },
          "sponsors": {
            "description": "The sponsors of this amendment.",
            "items": {
              "example": "/api/newsponsor/1/",
              "type": "string"
            },
            "type": "array"
          },
          "status": {
            "description": "The amendment's current status.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AmendmentStatus, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "format": "int64",
            "type": "integer"
          },
          "status_date": {
            "description": "The date that the amendment was last acted upon.",
            "format": "date-time",
            "type": "string"
          },
          "text": {
            "description": "Full text of the amendment.",
            "type": "string"
          },
          "texts": {
            "description": "The billtexts that are associated with this newamendment.",
            "items": {
              "example": "/api/billtext/1/",
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "description": "A title for the amendment.",
            "type": "string"
          },
          "updated": {
            "description": "When the record was most recently updated.",
            "format": "date-time",
            "type": "string"
          },
          "word_count": {
            "description": "Number of words in this Amendment text, useful for fts vector heuristics",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NewBill": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "achieved_general_statuses": {
            "description": ""
          },
          "bill_type": {
            "description": "The bill's type (e.g. H.R., S., H.J.Res. etc.)<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name BillType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13
            ],
            "format": "int64",
            "type": "integer"
          },
          "committees": {
            "description": "Committees to which the bill has been referred.",
            "items": {
              "example": "/api/committee/1/",
              "type": "string"
            },
            "type": "array"
          },
          "current_general_status": {
            "description": "The current status of the bill.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name GeneralBillStatus, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110
            ],
            "format": "int64",
            "type": "integer"
          },
          "current_status": {
            "description": "A more specific status of the bill.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name BillStatus, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              1000,
              1001,
              1002,
              1003,
              1004,
              1005,
              1006,
              1007,
              1008,
              1009,
              1010,
              1011,
              1012,
              1013,
              1014,
              1015,
              1016,
              1017,
              1018,
              1019,
              1020,
              1021,
              1022,
              1023,
              1024,
              1025,
              1026,
              1027,
              1028,
              1029,
              1030,
              1031,
              1031,
              1032,
              1033,
              1034,
              1035,
              1036,
              1037,
              1038,
              1039,
              1040,
              1041,
              1042,
              1043,
              1044,
              1045,
              1046,
              1047,
              1048,
              1049,
              1050,
              1051,
              1052,
              1053,
              1054,
              1055,
              1056,
              1057,
              1058,
              1059,
              1060,
              1061,
              1062,
              1063,
              1064,
              1065,
              1066,
              1067,
              1068,
              1069,
              1070,
              1071,
              1072,
              1073,
              1074,
              1075,
              1076,
              1077,
              1078,
              1079,
              1080,
              1081,
              1082,
              1083,
              1084,
              1085,
              1086,
              1087,
              1088,
              1089,
              1090,
              1091,
              1092,
              1093,
              1094,
              1095,
              1096,
              1097,
              1098,
              1099,
              1100,
              1101,
              1102,
              1103,
              1104,
              1105,
              1106,
              1107,
              1108,
              1109,
              1110,
              1111,
              1112,
              1113,
              1114,
              1115,
              1116,
              1117,
              1118,
              1119,
              1120,
              1121,
              1122,
              1123,
              1124,
              1125,
              1126,
              1127,
              1128,
              1129,
              1130,
              1131,
              1132,
              1133,
              1134,
              1135,
              1136,
              1137,
              1138,
              1139,
              1140,
              1141,
              1142,
              1143,
              1144,
              1145,
              1146,
              1147,
              1148,
              1149,
              1150,
              1151,
              1152,
              1153,
              1154,
              1155,
              1156,
              1157,
              1158,
              1159,
              1160,
              1161,
              1162,
              1163,
              1164,
              1165,
              1166,
              1167,
              1168,
              1169,
              1170,
              1171,
              1172,
              1173,
              1174,
              1175,
              1176,
              1177,
              1178,
              1179,
              1180,
              1181,
              1182,
              1183,
              1184,
              1185,
              1186,
              1187,
              1188,
              1200,
              1201,
              1202,
              1203,
              1204,
              1205,
              1206,
              1207,
              1208,
              1209,
              1210
            ],
            "format": "int64",
            "type": "integer"
          },
          "current_status_date": {
            "description": "The date of the last major action on the bill corresponding to the current_status.",
            "format": "date-time",
            "type": "string"
          },
          "current_status_text": {
            "description": "",
            "type": "string"
          },
          "draft_number": {
            "description": "The bill's draft number (distinct from the actual bill number), if applicable.",
            "format": "int64",
            "type": "integer"
          },
          "executive": {
            "description": "The newperson with which this bill is associated.",
            "example": "/api/newperson/1/",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "introduced_date": {
            "description": "The date the bill was introduced.",
            "format": "date-time",
            "type": "string"
          },
          "is_approps": {
            "description": "For Federal bills, whether this bill has been designated as an appropriations bill.",
            "type": "boolean"
          },
          "label": {
            "description": "Bill's type and number without state abbreviation (e.g. HB 1, SB 24)",
            "type": "string"
          },
          "last_action_text": {
            "description": "",
            "type": "string"
          },
          "major_actions": {
            "description": "This field requires special handling.",
            "type": "object"
          },
          "most_recent_action_date": {
            "description": "The date of the last major action on the bill.",
            "format": "date-time",
            "type": "string"
          },
          "num_democrat_cosponsors": {
            "description": "Number of democratic cosponsors that a bill has.",
            "format": "int64",
            "type": "integer"
          },
          "num_female_cosponsors": {
            "description": "Number of female cosponsors that a bill has.",
            "format": "int64",
            "type": "integer"
          },
          "num_independent_cosponsors": {
            "description": "Number of independent cosponsors that a bill has.",
            "format": "int64",
            "type": "integer"
          },
          "num_male_cosponsors": {
            "description": "Number of male cosponsors that a bill has.",
            "format": "int64",
            "type": "integer"
          },
          "num_republican_cosponsors": {
            "description": "Number republican of cosponsors that a bill has.",
            "format": "int64",
            "type": "integer"
          },
          "number": {
            "description": "Bill number without the type or state abbreviation (e.g. 24, 214)",
            "format": "int64",
            "type": "integer"
          },
          "organization_nominated_to": {
            "description": "The public organization to which the bill nominates the person(s) to join",
            "example": "/api/publicorganization/1/",
            "type": "string"
          },
          "procedure_code": {
            "description": "The legislative procedure code corresponding to this piece of legislation.",
            "type": "string"
          },
          "public_law_number": {
            "description": "If enacted, the public law number the bill becomes.",
            "type": "string"
          },
          "region": {
            "description": "The region whose legislature the bill was introduced in.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              1000
            ],
            "format": "int64",
            "type": "integer"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "session": {
            "description": "The LegSession object in which the bill was introduced.<br><strong>NOTE:</strong> This related object is outside of the scope of our documentation.recommended you contact us at integrations@quorum.us before building anything that relies upon it.<br>",
            "example": "/api/legsession/1/",
            "type": "string"
          },
          "slug": {
            "description": "Slug of the bill label to be used in urls.",
            "type": "string"
          },
          "snippets": {
            "description": ""
          },
          "source_link": {
            "description": "A link to the page on the primary source website for this bill",
            "type": "string"
          },
          "title": {
            "description": "The bill's primary display title, including its number.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NewBillSummary": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "bill": {
            "description": "The newbill with which this billsummary is associated.",
            "example": "/api/newbill/1/",
            "type": "string"
          },
          "content": {
            "description": "",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NewDocument": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "alert_cache": {
            "description": "Internal field used in alerts processing.  While it does represent a snapshot of information from the object, it should not be relied upon for external use as it may be stale without indication.",
            "type": "object"
          },
          "bill_mentions": {
            "description": "The newbills that are associated with this document.",
            "items": {
              "example": "/api/newbill/1/",
              "type": "string"
            },
            "type": "array"
          },
          "comment_count": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "committee_meeting_id": {
            "description": "The newevent with which this document is associated.",
            "example": "/api/newevent/1/",
            "type": "string"
          },
          "content": {
            "description": "The content of this document, as it will be displayedin Quorum.",
            "type": "string"
          },
          "created": {
            "description": "When the record was originally created.",
            "format": "date-time",
            "type": "string"
          },
          "date": {
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          "date_time": {
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          "display_text": {
            "description": "",
            "type": "string"
          },
          "document_subtype": {
            "description": "The convergence of all types of types of document: FacebookPostType, PressReleaseType, CommitteeDocumentType, etc...",
            "format": "int64",
            "type": "integer"
          },
          "document_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name DocumentType, for an explanation of values.</p>",
            "enum": [
              5,
              6,
              7,
              9,
              10,
              17,
              18,
              21,
              22,
              23,
              24,
              25,
              27,
              34,
              35,
              38,
              39,
              40,
              41,
              43,
              44,
              45,
              46,
              47,
              50,
              52,
              53,
              54,
              55,
              56,
              57,
              64,
              65,
              67,
              68,
              71,
              72,
              73,
              74,
              101,
              1001,
              1002,
              1003,
              1004,
              1005,
              1006,
              1007,
              1008,
              1009,
              1010,
              1011,
              1012,
              1013,
              1014,
              1015,
              1016,
              1017,
              1018,
              1019
            ],
            "format": "int64",
            "type": "integer"
          },
          "event": {
            "description": "The newevent with which this document is associated.",
            "example": "/api/newevent/1/",
            "type": "string"
          },
          "external_pk": {
            "description": "The primary key of the object from its original source (crs report number)",
            "type": "string"
          },
          "favorite_count": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "fts_strip_level": {
            "description": "Internal field.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name FTSStripLevel, for an explanation of values.</p>",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              666
            ],
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "is_retweet": {
            "description": "",
            "type": "boolean"
          },
          "language": {
            "description": "The language of this document<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Language, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              9000
            ],
            "format": "int64",
            "type": "integer"
          },
          "language_pdf_urls": {
            "description": "Mapping of language enum value -> pdf_url of the document in that language.",
            "type": "object"
          },
          "like_count": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "organizations": {
            "description": "Primary Key of organizations who can view this document",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "original_language": {
            "description": "The original language of this document (it may have been translated)<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Language, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              9000
            ],
            "format": "int64",
            "type": "integer"
          },
          "original_sequences": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "pdf_url": {
            "description": "",
            "type": "string"
          },
          "position_in_record": {
            "description": "Which order in the record did this particular statement take place.",
            "format": "int64",
            "type": "integer"
          },
          "question_id": {
            "description": "Deprecated.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p>",
            "type": "string"
          },
          "raw_content": {
            "description": "The raw content of this document, stripped of HTML and other entities. Used for searching and highlighting.",
            "type": "string"
          },
          "reference_id": {
            "description": "Unique reference ID for EU MEP documents. Ex: RC-B8-0191/2017/rev. 1",
            "type": "string"
          },
          "region": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              1000
            ],
            "format": "int64",
            "type": "integer"
          },
          "regions": {
            "description": "The singular Region enum this document is in",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "related_event": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "retweet_count": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "second_end": {
            "description": "End time of transcript in a committee meeting (in seconds)",
            "format": "int64",
            "type": "integer"
          },
          "second_start": {
            "description": "Start time of transcript in a committee meeting (in seconds)",
            "format": "int64",
            "type": "integer"
          },
          "sequence": {
            "description": "Ordered sequence of transcript, post-smushing. This sequence number is re-calculated after smushing to reflect combined JSON entries",
            "format": "int64",
            "type": "integer"
          },
          "share_count": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "snippet": {
            "description": "",
            "type": "string"
          },
          "snippets": {
            "description": ""
          },
          "source_committee": {
            "description": "The committee with which this document is associated.",
            "example": "/api/committee/1/",
            "type": "string"
          },
          "source_custom_organization": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "source_name": {
            "description": "",
            "type": "string"
          },
          "source_person": {
            "description": "The newperson with which this document is associated.",
            "example": "/api/newperson/1/",
            "type": "string"
          },
          "source_public_organization": {
            "description": "The publicorganization with which this document is associated.",
            "example": "/api/publicorganization/1/",
            "type": "string"
          },
          "source_supporter": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "source_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name DocumentSourceType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              100
            ],
            "format": "int64",
            "type": "integer"
          },
          "source_url": {
            "description": "",
            "type": "string"
          },
          "speaker_full_name": {
            "description": "Full name of speaker, if available",
            "type": "string"
          },
          "speaker_name": {
            "description": "Name of the speaker. Can be a real name or unidentified",
            "type": "string"
          },
          "summary": {
            "description": "",
            "type": "string"
          },
          "title": {
            "description": "",
            "type": "string"
          },
          "updated": {
            "description": "When the record was most recently updated.",
            "format": "date-time",
            "type": "string"
          },
          "view_count": {
            "description": "number of views for this video",
            "format": "int64",
            "type": "integer"
          },
          "youtube_video_id": {
            "description": "unique id for each Youtube video",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NewPerson": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "_ph_dn_all_regions": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                1000
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "_ph_dn_current_major_role_types": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MajorRoleType, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "_ph_dn_current_meta_role_types": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MetaRoleType, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "_ph_dn_current_minor_role_types": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MinorRoleType, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                123,
                124,
                125,
                126,
                127,
                128,
                129,
                130,
                131,
                132,
                133,
                134,
                135,
                136,
                137,
                138,
                139,
                140,
                141,
                142,
                143,
                144,
                145,
                146,
                147,
                148,
                149,
                150,
                151,
                152,
                153,
                154,
                155,
                156,
                157,
                158,
                159,
                160,
                161,
                162,
                163,
                164,
                165,
                166,
                167,
                168,
                169,
                170,
                171,
                172,
                173,
                174,
                175,
                176,
                177,
                178,
                179,
                180,
                181,
                182,
                183,
                184,
                185,
                186,
                187,
                188,
                189,
                190,
                191,
                192,
                193,
                194,
                195,
                196,
                197,
                198,
                199,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                226,
                227,
                228,
                229,
                230,
                231,
                232,
                233,
                234,
                235,
                236,
                237,
                238,
                239,
                240,
                241,
                242,
                243,
                244,
                245,
                246,
                247,
                248,
                249,
                250,
                251,
                252,
                253,
                254,
                255,
                256,
                257,
                258,
                259,
                260,
                261,
                262,
                263,
                264,
                265,
                266,
                267,
                268,
                269,
                270,
                271,
                272,
                273,
                274,
                275,
                276,
                277,
                278,
                279,
                280,
                281,
                282,
                283,
                284,
                285,
                286,
                287,
                288,
                289,
                290,
                291,
                292,
                293,
                294,
                295,
                296,
                297,
                298,
                299,
                300,
                301,
                302,
                303,
                304,
                305,
                306,
                307,
                308,
                309,
                310,
                311,
                312,
                313,
                314,
                315,
                316,
                317,
                318,
                319,
                320,
                321,
                322,
                323,
                324,
                325,
                326,
                327,
                328,
                329,
                330,
                331,
                332,
                333,
                334,
                335,
                336,
                337,
                338,
                339,
                340,
                341,
                342,
                343,
                344,
                345,
                346,
                347,
                348,
                349,
                350,
                351,
                352,
                353,
                354,
                355,
                356,
                357,
                358,
                360,
                361,
                362,
                363,
                364,
                365,
                366,
                367,
                368,
                369,
                370
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "_ph_dn_intrado_languages": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Language, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                9000
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "_ph_dn_intrado_preferred_distribution_mode": {
            "description": "Denormalization of intrado PreferredDistributionMode from PersonRoles.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name IntradoPreferredDistributionMode, for an explanation of values.</p>",
            "enum": [
              1,
              2
            ],
            "example": 0,
            "format": "int64",
            "type": "integer"
          },
          "_ph_dn_intrado_tags": {
            "description": "",
            "items": {
              "example": "[]",
              "type": "string"
            },
            "type": "array"
          },
          "_ph_intrado_last_updated": {
            "description": "The last time Intrado updated the object in their database corresponding to this Person.",
            "example": "0",
            "format": "date-time",
            "type": "string"
          },
          "_ph_intrado_person_id": {
            "description": "A UniqueID for a Person originating from the Intrado data source.",
            "example": 0,
            "format": "int64",
            "type": "integer"
          },
          "_ph_lc_person_id": {
            "description": "Leadership Connect's PersonID for a Person.",
            "example": 365240,
            "format": "int64",
            "type": "integer"
          },
          "_ph_ls_core_person_id": {
            "description": "The core_person_id for the Legistorm core_person this Person represents.",
            "example": 0,
            "format": "int64",
            "type": "integer"
          },
          "_ph_should_flush_next_run": {
            "description": "Marks that we should flush this person in the next Bidet run",
            "type": "boolean"
          },
          "address": {
            "description": "",
            "type": "string"
          },
          "age": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "birthday": {
            "description": "The person's birthday.",
            "example": "22688",
            "format": "date-time",
            "type": "string"
          },
          "committee": {
            "description": "The committee with which this person is associated.",
            "example": "/api/committee/1/",
            "type": "string"
          },
          "committee_string": {
            "description": "A list of all the committees that this official sits on.",
            "example": "Conference Secretary, Member | <a href=\"/committee/13579/\">Appropriations</a>, <a href=\"/committee/13726/\">HELP</a>, <a href=\"/committee/13637/\">Commerce</a>",
            "type": "string"
          },
          "comstaffertype": {
            "description": "Whether Staffer is affiliated with a majority or minority committee only<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name ComStafferType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int64",
            "type": "integer"
          },
          "cook_pvi": {
            "description": "",
            "type": "string"
          },
          "current": {
            "description": "Whether this individual currently holds a role, or if this is archival information.",
            "type": "boolean"
          },
          "dn_appointed_by_types": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AppointedByType, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "dn_pay_scale_types": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PayScaleType, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                3,
                4,
                5
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "email": {
            "description": "The person's email, if made available publicly.",
            "example": "0",
            "type": "string"
          },
          "facebook_url": {
            "description": "Deprecated; replaced by facebook_url_array.",
            "example": "http://www.facebook.com/senatortammybaldwin",
            "type": "string"
          },
          "firstname": {
            "description": "The person's first name or first initial.",
            "example": "Tammy",
            "type": "string"
          },
          "freshman_legislator": {
            "description": "If this person is a freshman legislator",
            "type": "boolean"
          },
          "gender": {
            "description": "The person's gender, if known. For historical data, the gender is sometimes not known.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Gender, for an explanation of values.</p>",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5
            ],
            "example": 2,
            "format": "int64",
            "type": "integer"
          },
          "has_been_legislator": {
            "description": "Whether or not a person has been a legislator, now or at anytime in the past.",
            "type": "boolean"
          },
          "high_quality_image_url": {
            "description": "The URL of the high quality version of this persons image.",
            "example": "https://static.quorum.us/global/common/images/person/1/high_quality_400013_v2.jpg",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "example": 400013,
            "format": "int64",
            "type": "integer"
          },
          "image_url": {
            "description": "The URL of the low quality version of this persons image.",
            "example": "https://static.quorum.us/global/common/images/person/1/400013_v2.jpe",
            "type": "string"
          },
          "intrado_other_email": {
            "description": "Alternate Email for this Press Contact",
            "example": "0",
            "type": "string"
          },
          "is_cwc": {
            "description": "If the Member has a valid office code in CWC",
            "type": "boolean"
          },
          "lastname": {
            "description": "The person's last name.",
            "example": "Baldwin",
            "type": "string"
          },
          "linkedin_username": {
            "description": "LinkedIn Username",
            "example": "0",
            "type": "string"
          },
          "location": {
            "description": "The memberoffice with which this person is associated.",
            "example": "/api/memberoffice/1/",
            "type": "string"
          },
          "major_person_types": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MajorPersonType, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "member_name": {
            "description": "",
            "type": "string"
          },
          "minor_person_types": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MinorPersonType, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                31,
                32,
                33,
                34,
                35,
                36
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "most_recent_country": {
            "description": "The country with which this person is associated.",
            "example": "/api/country/1/",
            "type": "string"
          },
          "most_recent_executive_role": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SpecificExecutiveRoleType, for an explanation of values.</p>",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              168,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              179,
              180,
              181,
              181,
              182,
              183,
              184,
              185,
              186,
              187,
              188,
              189,
              190,
              191,
              193,
              193,
              194,
              195,
              196
            ],
            "example": 0,
            "format": "int64",
            "type": "integer"
          },
          "most_recent_party": {
            "description": "The most recent political party of the person.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Party, for an explanation of values.</p>",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21
            ],
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "most_recent_person_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PersonType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              6,
              7,
              8,
              9
            ],
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "most_recent_region": {
            "description": "The most recent legislature the person has been a part of<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              1000
            ],
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "most_recent_regions": {
            "description": "The most recent legislature the person has been a part of",
            "items": {
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                1000
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "most_recent_role": {
            "description": "A shortcut to the most recent role of the person.",
            "example": "/api/newpersonrole/1/",
            "type": "string"
          },
          "most_recent_role_address": {
            "description": "the address of this person's most recent role",
            "example": "SH-709, Hart Senate Office Building, Washington, DC 20510",
            "type": "string"
          },
          "most_recent_role_building": {
            "description": "the name of the office building of this person's most recent role",
            "example": "Hart Senate Office Building",
            "type": "string"
          },
          "most_recent_role_city": {
            "description": "the city of this person's most recent role",
            "example": "Washington",
            "type": "string"
          },
          "most_recent_role_phone": {
            "description": "the phone number of this person's most recent role",
            "example": "(202) 224-5653",
            "type": "string"
          },
          "most_recent_role_room": {
            "description": "the room of this person's most recent role",
            "example": "SH-709",
            "type": "string"
          },
          "most_recent_role_state": {
            "description": "the state of this person's most recent role",
            "example": "DC",
            "type": "string"
          },
          "most_recent_role_street1": {
            "description": "first line of the street address of this person's most recent role",
            "type": "string"
          },
          "most_recent_role_street2": {
            "description": "second line of the street address of this person's most recent role",
            "type": "string"
          },
          "most_recent_role_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name RoleType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              38,
              999
            ],
            "example": 1,
            "format": "int64",
            "type": "integer"
          },
          "most_recent_role_zipcode": {
            "description": "the ZipCode of this person's most recent role",
            "example": "20510",
            "type": "string"
          },
          "name": {
            "description": "The person's full name with title, district, and party information for current Members of Congress.Also allows the sheet to be more easily ordered alphabetically.",
            "example": "Sen. Tammy Baldwin (D-WI)",
            "type": "string"
          },
          "new_legislator": {
            "description": "Whether or not a member is brand new in their region.",
            "type": "boolean"
          },
          "num_terms": {
            "description": "Number of terms this person spans in their current role",
            "example": 5,
            "format": "int64",
            "type": "integer"
          },
          "office_code": {
            "description": "The office code for a US Congressperson. Used in Grassroots delivery by the CWC for message routing. House format: H{state_abbrev}{district_number}. Senate format: S{state_abbrev}{senate_class_number}.",
            "example": "SWI01",
            "type": "string"
          },
          "party_string": {
            "description": "A list of all the parties this person is affiliated with",
            "type": "string"
          },
          "person": {
            "description": "The newperson with which this person is associated.",
            "example": "/api/newperson/1/",
            "type": "string"
          },
          "precedence_local": {
            "description": "",
            "example": 0,
            "format": "int64",
            "type": "integer"
          },
          "precedence_state": {
            "description": "",
            "example": 0,
            "format": "int64",
            "type": "integer"
          },
          "precedence_state_and_local": {
            "description": "",
            "example": 0,
            "format": "int64",
            "type": "integer"
          },
          "prefix": {
            "description": "The prefix on the person's name, usually one of Dr., Ms., etc. This is usually different than their titles",
            "example": "Sen.",
            "type": "string"
          },
          "primary_organization": {
            "description": "The publicorganization with which this person is associated.",
            "example": "/api/publicorganization/1/",
            "type": "string"
          },
          "pronunciation": {
            "description": "Pronunciation",
            "example": "BALLD-win",
            "type": "string"
          },
          "public_organization_descriptor": {
            "description": "Public Organization Descriptor",
            "example": "US Senate",
            "type": "string"
          },
          "region_represented": {
            "description": "The (international) region that this person represents as text, until we have shapefiles that we can map to",
            "type": "string"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "responsibilities_string": {
            "description": "Responsibilities",
            "type": "string"
          },
          "should_deliver_via_fill_form": {
            "description": "Whether or not this person should be delivered via fill forms",
            "type": "boolean"
          },
          "show_in_quicksearch": {
            "description": "",
            "type": "boolean"
          },
          "source_urls": {
            "description": "Each URL on the web where this person can be found (via our consultants)",
            "items": {
              "example": "[]",
              "type": "string"
            },
            "type": "array"
          },
          "specific_person_types": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "staffer_name": {
            "description": "",
            "type": "string"
          },
          "staffer_types": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name StafferType, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                3,
                4,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "status": {
            "description": "The status of this person (active, incoming, leaving or former).<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PersonStatus, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "format": "int64",
            "type": "integer"
          },
          "title": {
            "description": "The person's most recent title.",
            "example": "US Senator",
            "type": "string"
          },
          "titlecode_order": {
            "description": "Highest rank of the staffer's various titlecodes",
            "format": "int64",
            "type": "integer"
          },
          "twitterid": {
            "description": "The name of the person's official Twitter handle, if known.",
            "example": "SenatorBaldwin",
            "type": "string"
          },
          "valid_email": {
            "description": "whether the email is valid and/or verified",
            "type": "boolean"
          },
          "wikipedia_url": {
            "description": "The Wikipedia URL for this person, if any",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NewPersonRole": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "_ph_intrado_last_updated": {
            "description": "The last time Intrado updated the object in their database corresponding to this PersonRole.",
            "format": "date-time",
            "type": "string"
          },
          "_ph_lc_position_id": {
            "description": "<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p>",
            "format": "int64",
            "type": "integer"
          },
          "_ph_ls_state_legislator_staff_history_id": {
            "description": "<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p>",
            "format": "int64",
            "type": "integer"
          },
          "_ph_nominated_date": {
            "description": "The date on which this person was nominated for this position. if applicable.",
            "format": "date-time",
            "type": "string"
          },
          "_ph_nomination_confirmed_date": {
            "description": "The date on which this person's nomination to their current position was confirmed, if applicable.",
            "format": "date-time",
            "type": "string"
          },
          "_ph_public_organization_desc": {
            "description": "If a foreign key to a Quorum PublicOrganization is not available, this field contains the name of the organization that the PersonRole corresponds to. For PH roles, this should be defined if and only if _ph_public_organization is not.\n        ",
            "type": "string"
          },
          "_ph_term_number": {
            "description": "The number of terms this PersonRole has been served in its jurisdiction.",
            "format": "int64",
            "type": "integer"
          },
          "adascore": {
            "description": "ADA Score for member of congress",
            "format": "int64",
            "type": "integer"
          },
          "address": {
            "description": "Most recent office address",
            "type": "string"
          },
          "aflscore": {
            "description": "AFL-CIO Score for member of congress",
            "format": "int64",
            "type": "integer"
          },
          "appointed_by_type": {
            "description": "The AppointedByType for a given role<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AppointedByType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14
            ],
            "format": "int64",
            "type": "integer"
          },
          "ccusscore": {
            "description": "CCUS Score for member of congress",
            "format": "int64",
            "type": "integer"
          },
          "cfgscore": {
            "description": "Club For Growth Lifetime Economic Growth Score for member of congress",
            "format": "int64",
            "type": "integer"
          },
          "comstaffertype": {
            "description": "Whether Staffer is affiliated with a majority or minority committee only<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name ComStafferType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int64",
            "type": "integer"
          },
          "created": {
            "description": "When the record was originally created.",
            "format": "date-time",
            "type": "string"
          },
          "current": {
            "description": "Whether this PersonRole is currently applicable/currently held. Should be completely redundant given startdate and enddate.",
            "type": "boolean"
          },
          "intrado_preferred_distribution_mode": {
            "description": "<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name IntradoPreferredDistributionMode, for an explanation of values.</p>",
            "enum": [
              1,
              2
            ],
            "format": "int64",
            "type": "integer"
          },
          "intrado_tags": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "is_primary_from_source": {
            "description": "Marks whether a role is considered Primary by the source that its from",
            "type": "boolean"
          },
          "major_person_type": {
            "description": "The major global type held by this person for this particular PersonRole instance(e.g. Head of State, Top-Level Cabinet Member, etc.)<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MajorPersonType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25
            ],
            "format": "int64",
            "type": "integer"
          },
          "minor_person_type": {
            "description": "The minor type held by this person, oftentimes specific to a region/country(e.g. Senator, Department Secretary, etc.)<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MinorPersonType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              31,
              32,
              33,
              34,
              35,
              36
            ],
            "format": "int64",
            "type": "integer"
          },
          "office_building": {
            "description": "most recent office building",
            "type": "string"
          },
          "office_city": {
            "description": "most recent office city",
            "type": "string"
          },
          "office_country": {
            "description": "most recent office country",
            "type": "string"
          },
          "office_room": {
            "description": "most recent office room",
            "type": "string"
          },
          "office_state": {
            "description": "most recent office state",
            "type": "string"
          },
          "office_street1": {
            "description": "most recent office address first line",
            "type": "string"
          },
          "office_street2": {
            "description": "most recent office address second line",
            "type": "string"
          },
          "office_zipcode": {
            "description": "most recent office zipcode",
            "type": "string"
          },
          "pay_scale_type": {
            "description": "The PayScaleType for a given role<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PayScaleType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "format": "int64",
            "type": "integer"
          },
          "phone": {
            "description": "The last known phone number of the official during this role, if known.",
            "type": "string"
          },
          "reelectionyear": {
            "description": "When is the person up for reelection",
            "format": "int64",
            "type": "integer"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "senator_rank": {
            "description": "For senators, their state rank, i.e. junior/senior. For historical data, this is their last known rank.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SenatorRank, for an explanation of values.</p>",
            "enum": [
              1,
              2
            ],
            "format": "int64",
            "type": "integer"
          },
          "specific_person_type": {
            "description": "The specific type held by a person for this particular PersonRole instance(e.g. Speaker, House Majority Leader, etc.)",
            "format": "int64",
            "type": "integer"
          },
          "updated": {
            "description": "When the record was most recently updated.",
            "format": "date-time",
            "type": "string"
          },
          "website": {
            "description": "The URL to the official website of the person during this role, if known.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NewSponsor": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "amendment": {
            "description": "The amendment being sponsored.",
            "example": "/api/newamendment/1/",
            "type": "string"
          },
          "bill": {
            "description": "The bill being sponsored.",
            "example": "/api/newbill/1/",
            "type": "string"
          },
          "committee": {
            "description": "The sponsoring committee.",
            "example": "/api/committee/1/",
            "type": "string"
          },
          "created": {
            "description": "When the record was originally created.",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "joined": {
            "description": "The date the sponsor was added. It is always greater than or equal to the bill's introduced_date.",
            "format": "date-time",
            "type": "string"
          },
          "party": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "person": {
            "description": "The sponsoring person.",
            "example": "/api/newperson/1/",
            "type": "string"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "sponsor_icon": {
            "description": "",
            "type": "string"
          },
          "sponsor_image_url": {
            "description": "",
            "type": "string"
          },
          "sponsor_name": {
            "description": "",
            "type": "string"
          },
          "sponsor_type": {
            "description": "The type of sponsorship.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SponsorType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              101,
              102,
              103,
              104,
              105,
              106
            ],
            "format": "int64",
            "type": "integer"
          },
          "sponsor_url": {
            "description": "",
            "type": "string"
          },
          "state_name": {
            "description": "The original name given to this sponsor by a state website or EurLex (if EU).",
            "type": "string"
          },
          "updated": {
            "description": "When the record was most recently updated.",
            "format": "date-time",
            "type": "string"
          },
          "withdrawn": {
            "description": "If the sponsor withdrew his/her support, the date of withdrawn. Otherwise empty.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NewSupporter": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "activated": {
            "description": "Whether or not the account has been activated.",
            "type": "boolean"
          },
          "active": {
            "description": "active - User Account Validated",
            "type": "boolean"
          },
          "address": {
            "description": "",
            "type": "string"
          },
          "address_geocoded": {
            "description": "Whether the string address has been geocoded into lat/lon pair.",
            "type": "boolean"
          },
          "alert_cache": {
            "description": "Internal field used in alerts processing.  While it does represent a snapshot of information from the object, it should not be relied upon for external use as it may be stale without indication.",
            "type": "object"
          },
          "alternate_address": {
            "description": "Alternate address, user entered.",
            "type": "string"
          },
          "archived": {
            "description": "Whether the record has been soft-deleted or not.",
            "type": "boolean"
          },
          "birthdate": {
            "description": "The birthdate of this supporter",
            "format": "date-time",
            "type": "string"
          },
          "bulk_email_unsubscribe_key": {
            "description": "",
            "type": "string"
          },
          "cached_limited_to_teams": {
            "description": ""
          },
          "calculated_unsubscribed_from_texting": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "city": {
            "description": "City of the primary address.",
            "type": "string"
          },
          "coordinates": {
            "description": "The Point (lat, lon) where this supporter/contact is based at, if any",
            "type": "string"
          },
          "country_name": {
            "description": "Name of the country of the primary address.",
            "type": "string"
          },
          "county_name": {
            "description": "Name of the county of the primary address.",
            "type": "string"
          },
          "created": {
            "description": "When the record was originally created.",
            "format": "date-time",
            "type": "string"
          },
          "date_unsubscribed_from_bulk_emails": {
            "description": "Date that this contact unsubscribed from all Outbox emails.",
            "format": "date-time",
            "type": "string"
          },
          "date_unsubscribed_from_texting": {
            "description": "Date that this contact unsubscribed from receiving text messages",
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "description": "Primary Email Address for this Contact; this is the address available in Outbox to email this Contact.",
            "type": "string"
          },
          "email_related_person": {
            "description": "Whether there is a record in the Officials or Staffers datasets visible to you that has the same email address.",
            "example": "/api/newperson/1/",
            "type": "string"
          },
          "employer": {
            "description": "The employer of the contact, if applicable.",
            "type": "string"
          },
          "extension": {
            "description": "Primary phone extension.",
            "type": "string"
          },
          "facebook_array": {
            "description": "The id of this supporter's facebook account",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "facebook_url_array": {
            "description": "The url of this supporter's facebook account",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "fb_id": {
            "description": "Facebook identifier/",
            "format": "int64",
            "type": "integer"
          },
          "firstname": {
            "description": "First Name",
            "type": "string"
          },
          "formatted_primary_phone": {
            "description": "",
            "type": "string"
          },
          "formatted_secondary_phone": {
            "description": "",
            "type": "string"
          },
          "has_ever_received_email_dn": {
            "description": "Denormalized field indicating if this Supporter has ever recieved an email through outbox",
            "type": "boolean"
          },
          "has_participated_in_any_campaign_dn": {
            "description": "Denormalized field indicating if this Supporter has participated in any campaigns",
            "type": "boolean"
          },
          "has_shared_campaign_on_social_dn": {
            "description": "Denormalized field indicating if this Supporter has shared in any campaigns on the socials",
            "type": "boolean"
          },
          "http_referer": {
            "description": "What exact page this particular action / supporter came from when they registered or took action",
            "type": "string"
          },
          "icon": {
            "description": "",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "image_url": {
            "description": "Cached path of image url",
            "type": "string"
          },
          "input_address": {
            "description": "The address as originally input / imported, prior to Geocoding",
            "type": "string"
          },
          "instagram_array": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "is_grassroots_supporter": {
            "description": "Whether this contact is someone who would advocate on your behalf (for User information, does not impact Quorum application)",
            "type": "boolean"
          },
          "is_recently_active_email_recipient": {
            "description": "Whether the contact has opened or clicked on any emails from this organization in the last 120 days or was added to the account within the last 30 days.",
            "type": "boolean"
          },
          "is_stakeholder_supporter": {
            "description": "Whether this contact is an influencer for your organization's public policy objectives. (for User information, does not impact Quorum application)",
            "type": "boolean"
          },
          "last_user": {
            "description": "Quourm User ID of the last Quorum user that created/edited this Supporter in any way.",
            "example": "/api/user/1/",
            "type": "string"
          },
          "lastname": {
            "description": "Last Name",
            "type": "string"
          },
          "latitude": {
            "description": "Lattitude of the supporters primary address, based on address geocoding.",
            "format": "decimal",
            "type": "number"
          },
          "limited_to_teams": {
            "description": "The teams that are associated with this supporter.",
            "items": {
              "example": "/api/team/1/",
              "type": "string"
            },
            "type": "array"
          },
          "longitude": {
            "description": "Longitude of the supporters primary address, based on address geocoding.",
            "format": "decimal",
            "type": "number"
          },
          "major_organization_types": {
            "description": ""
          },
          "medium_array": {
            "description": "The name of this supporter's medium account",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "middlename": {
            "description": "Middle Name",
            "type": "string"
          },
          "name": {
            "description": "Full Name",
            "type": "string"
          },
          "pac_eligibilities": {
            "description": "The ledgersettingss that are associated with this supporter.",
            "items": {
              "example": "/api/ledgersettings/1/",
              "type": "string"
            },
            "type": "array"
          },
          "phone_number": {
            "description": "Primary phone number.",
            "type": "string"
          },
          "postal_code": {
            "description": "Postal code of primary address.",
            "type": "string"
          },
          "postal_code_ext": {
            "description": "Extension of postal code of primary address (the +4 of ZIP+4 in the US)/",
            "type": "string"
          },
          "preferred_name": {
            "description": "Preferred name.",
            "type": "string"
          },
          "prefix": {
            "description": "Prefix of a person's name, like Mr., Mrs., The Honorable, etc.",
            "type": "string"
          },
          "public_organization": {
            "description": "The organization associated with the Supporter.",
            "example": "/api/publicorganization/1/",
            "type": "string"
          },
          "public_organization_name": {
            "description": "",
            "type": "string"
          },
          "public_organization_names": {
            "description": "",
            "type": "string"
          },
          "public_organizations": {
            "description": "The publicorganizations that are associated with this supporter.",
            "items": {
              "example": "/api/publicorganization/1/",
              "type": "string"
            },
            "type": "array"
          },
          "region": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              1000
            ],
            "format": "int64",
            "type": "integer"
          },
          "registered_with_text_keyword": {
            "description": "The keyword that this supporter texted and used to register to an action center",
            "type": "string"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "secondary_email": {
            "description": "Secondary Email (personal etc.) assuming the first one is work/primary email",
            "type": "string"
          },
          "secondary_extension": {
            "description": "Secondary phone extension.",
            "type": "string"
          },
          "secondary_phone": {
            "description": "Secondary phone number.",
            "type": "string"
          },
          "should_display_in_external_logger": {
            "description": "Display this contact in the organization's action center's external interaction/relationship logger",
            "type": "boolean"
          },
          "source_type": {
            "description": "Our best guess as to the source of a particular thing, whether internal to Quorum, a particular website, etc.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name UTMSourceType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22
            ],
            "format": "int64",
            "type": "integer"
          },
          "state_abbreviation": {
            "description": "",
            "type": "string"
          },
          "state_name": {
            "description": "State of primary address.",
            "type": "string"
          },
          "street_address": {
            "description": "Street address of primary address.",
            "type": "string"
          },
          "street_address_2": {
            "description": "Second line of street address of primary address.",
            "type": "string"
          },
          "stripe_customer_id": {
            "description": "",
            "type": "string"
          },
          "suffix": {
            "description": "Suffix of a person's name, like III, Jr., etc.",
            "type": "string"
          },
          "supporter_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SupporterType, for an explanation of values.</p>",
            "enum": [
              1,
              2
            ],
            "format": "int64",
            "type": "integer"
          },
          "tag_dict": {
            "description": "Dictionary of custom field information, stored as Key/Value pairs.",
            "type": "object"
          },
          "title": {
            "description": "Title.",
            "type": "string"
          },
          "twitter_array": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "unique_identifier": {
            "description": "The organization-specific assigned unique identifier - Note that uniqueness is not enforced.",
            "type": "string"
          },
          "unsubscribed_from_bulk_emails": {
            "description": "Whether the contact is unsubscribed from your bulk emails.",
            "type": "boolean"
          },
          "unsubscribed_from_texting": {
            "description": "Whether the contact is unsubscribed from your text messages.",
            "type": "boolean"
          },
          "updated": {
            "description": "When the record was most recently updated.",
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "description": "FK of the corresponding User object tied to this Supporter object",
            "example": "/api/user/1/",
            "type": "string"
          },
          "utm_campaign": {
            "description": "Identifies a specific product promotion or strategic campaign.",
            "type": "string"
          },
          "utm_content": {
            "description": "Identifies what specifically was clicked to bring the user to the site, such as a banner ad or a text link.",
            "type": "string"
          },
          "utm_medium": {
            "description": "Identifies what type of link was used, such as cost per click or email.",
            "type": "string"
          },
          "utm_source": {
            "description": "Identifies which site sent the traffic, and is a required UTM parameter.",
            "type": "string"
          },
          "utm_term": {
            "description": "Identifies search terms.",
            "type": "string"
          },
          "valid_email": {
            "description": "When a contact is initially created in Quorum, the default value of \"valid_email\" is True. Accordingly, a better way to think about this field might be to invert it -- think of it as \"invalid_email\" where it would be initialized as false.\n\nUpon initial save of a contact object, we run a basic pattern match on the email to see if it matches the RFC standard for emails: '([a-zA-Z0-9_.+\\-']+@(?:[a-zA-Z0-9_\\-]+\\.)+[a-zA-Z0-9_\\-.]+)$'. In plain English, this means that any set of letters, numbers, dots, plus signs, and dashes followed by an @ sign and then a valid domain is permissible. If an email fails this test, the contact is immediately set to valid_email=False. Blank or null strings do not currently fail this test as our sending logic requires both the presence of a not-null not-empty email and valid_email being set to True.\n\nOnce we send an email to this contact, we start receiving responses from that recipient's email server and use those responses to determine if an email should be set to invalid -- this is the primary reason why that might occur. Generally, sending multiple emails to a bad, old, or fake email is one of the easiest ways to get added to email block lists and hurt your overall domain reputation, so we follow email sending best practices and set this field to false anytime we receive a hard block or spam block from this email. To classify actions, we use the fields provided by our email partner, Sparkpost, available here: https://www.sparkpost.com/docs/deliverability/bounce-classification-codes/. If an email receives a bounce event in the classification \"Hard\", \"Block\", or \"Admin\", we will set valid_email to false and not email it again.\n\nShould you wish to \"reset\" this field, you can either use Bulk Actions through the UI or a bulk upload to reset this field and try to email it again via Outbox. If we receive a further hard bounce from this email, we'll re-mark it as invalid; however, if your email is successfully delivered, you'll be able to continue emailing this person until you get another hard block of some kind.",
            "type": "boolean"
          },
          "validated_address": {
            "description": "",
            "type": "boolean"
          },
          "waiting_to_be_created_by_user": {
            "description": "Whether an org created this supporter and is waiting to be used by the user.",
            "type": "boolean"
          },
          "website": {
            "description": "Supporter's webpage, like www.greatagain.gov",
            "type": "string"
          },
          "youtube_array": {
            "description": "The name of the supporter's YouTube channel, if known.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Note": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "alert_cache": {
            "description": "Internal field used in alerts processing.  While it does represent a snapshot of information from the object, it should not be relied upon for external use as it may be stale without indication.",
            "type": "object"
          },
          "amendment": {
            "description": "The newamendment with which this note is associated.",
            "example": "/api/newamendment/1/",
            "type": "string"
          },
          "amendments": {
            "description": "The newamendments that are associated with this note.",
            "items": {
              "example": "/api/newamendment/1/",
              "type": "string"
            },
            "type": "array"
          },
          "amount": {
            "description": "The monetary amount (usually USD) in donation/transaction",
            "format": "decimal",
            "type": "number"
          },
          "archived": {
            "description": "Whether the record has been soft-deleted or not.",
            "type": "boolean"
          },
          "articles": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "attachments": {
            "description": "The attachment with which this note is associated.",
            "example": "/api/attachment/1/",
            "type": "string"
          },
          "audit_trail": {
            "description": "The results from the delivery of the supporter action",
            "type": "object"
          },
          "auto_created": {
            "description": "",
            "type": "boolean"
          },
          "bill": {
            "description": "The newbill with which this note is associated.",
            "example": "/api/newbill/1/",
            "type": "string"
          },
          "bills": {
            "description": "The newbills that are associated with this note.",
            "items": {
              "example": "/api/newbill/1/",
              "type": "string"
            },
            "type": "array"
          },
          "bulk_email": {
            "description": "The bulkemail with which this note is associated.",
            "example": "/api/bulkemail/1/",
            "type": "string"
          },
          "bulk_email_id": {
            "description": "The bulkemail with which this note is associated.",
            "example": "/api/bulkemail/1/",
            "type": "string"
          },
          "cache_json": {
            "description": "This field requires special handling.",
            "type": "object"
          },
          "campaign": {
            "description": "The campaign with which this note is associated.",
            "example": "/api/campaign/1/",
            "type": "string"
          },
          "check_number": {
            "description": "Check # used to make donation",
            "type": "string"
          },
          "clicks": {
            "description": "Number of times links in email have been clicked",
            "format": "int64",
            "type": "integer"
          },
          "comment_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name QuorumDataType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              12,
              14,
              15,
              16,
              17,
              18,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124
            ],
            "format": "int64",
            "type": "integer"
          },
          "confirmed": {
            "description": "",
            "type": "boolean"
          },
          "created": {
            "description": "When the record was originally created.",
            "format": "date-time",
            "type": "string"
          },
          "custom_interaction_type": {
            "description": "The custominteractiontype with which this note is associated.",
            "example": "/api/custominteractiontype/1/",
            "type": "string"
          },
          "data_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name QuorumDataType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              12,
              14,
              15,
              16,
              17,
              18,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124
            ],
            "format": "int64",
            "type": "integer"
          },
          "date": {
            "description": "The date entered for the Note / Interaction",
            "format": "date-time",
            "type": "string"
          },
          "delivered": {
            "description": "",
            "type": "boolean"
          },
          "delivery_id": {
            "description": "",
            "type": "string"
          },
          "document": {
            "description": "The newdocument with which this note is associated.",
            "example": "/api/newdocument/1/",
            "type": "string"
          },
          "documents": {
            "description": "The newdocuments that are associated with this note.",
            "items": {
              "example": "/api/newdocument/1/",
              "type": "string"
            },
            "type": "array"
          },
          "duration": {
            "description": "The duration entered for the Note / Interaction<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PossibleDurations, for an explanation of values.</p>",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              8,
              15,
              30,
              45,
              75,
              90,
              105,
              135,
              150,
              165,
              195,
              210,
              225
            ],
            "format": "int64",
            "type": "integer"
          },
          "event": {
            "description": "The newevent with which this note is associated.",
            "example": "/api/newevent/1/",
            "type": "string"
          },
          "failed_delivery": {
            "description": "",
            "type": "boolean"
          },
          "first_open": {
            "description": "timestamp for when the first open occurred",
            "format": "date-time",
            "type": "string"
          },
          "from_grassroots": {
            "description": "",
            "type": "boolean"
          },
          "from_notes": {
            "description": "",
            "type": "boolean"
          },
          "from_parser": {
            "description": "",
            "type": "boolean"
          },
          "from_qnotes": {
            "description": "",
            "type": "boolean"
          },
          "http_referer": {
            "description": "What exact page this particular action / supporter came from when they registered or took action",
            "type": "string"
          },
          "humanized_text": {
            "description": "",
            "type": "string"
          },
          "ical_id": {
            "description": "Ical id of the icalendar event",
            "type": "string"
          },
          "icon": {
            "description": "",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "interaction_type": {
            "description": "The specific type of interaction logged (e.g meeting, phone call, etc)<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name InteractionType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              108,
              109
            ],
            "format": "int64",
            "type": "integer"
          },
          "is_ical": {
            "description": "",
            "type": "boolean"
          },
          "is_visible_to_partners": {
            "description": "Only relevant for organizations that have partners. This flag allows users to shareNotes with people outside of their organization. Notes will only be visible to users thatare on the partner organizations (organization.partners M2M)",
            "type": "boolean"
          },
          "limited_to_teams": {
            "description": "Used to permission objects. If the User's Teams intersect with the teams associatedwith these teams, the User can see this object",
            "items": {
              "example": "/api/team/1/",
              "type": "string"
            },
            "type": "array"
          },
          "link_dict": {
            "description": "the link -> count key",
            "type": "object"
          },
          "members": {
            "description": "The newpersons that are associated with this note.",
            "items": {
              "example": "/api/newperson/1/",
              "type": "string"
            },
            "type": "array"
          },
          "members_count": {
            "description": "The number of members related to this note",
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "description": "",
            "type": "string"
          },
          "message_status": {
            "description": "The current status of this supporter action<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SupporterActionStatus, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "format": "int64",
            "type": "integer"
          },
          "note_type": {
            "description": "The type of note logged (e.g. Comment, Relationship, etc.)<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name NoteType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int64",
            "type": "integer"
          },
          "num_attempts": {
            "description": "The number of delivery attempts on a suporter action",
            "format": "int64",
            "type": "integer"
          },
          "opens": {
            "description": "Number of times email has been opened",
            "format": "int64",
            "type": "integer"
          },
          "organization": {
            "description": "The Quorum client associated with this record.",
            "example": "/api/organization/1/",
            "type": "string"
          },
          "person": {
            "description": "The newperson with which this note is associated.",
            "example": "/api/newperson/1/",
            "type": "string"
          },
          "privacy": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PrivacyType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "format": "int64",
            "type": "integer"
          },
          "project": {
            "description": "The project with which this note is associated.",
            "example": "/api/project/1/",
            "type": "string"
          },
          "projects": {
            "description": "The projects that are associated with this note.",
            "items": {
              "example": "/api/project/1/",
              "type": "string"
            },
            "type": "array"
          },
          "public_organizations": {
            "description": "The publicorganizations that are associated with this note.",
            "items": {
              "example": "/api/publicorganization/1/",
              "type": "string"
            },
            "type": "array"
          },
          "public_organizations_count": {
            "description": "The number of public organizations related to this note",
            "format": "int64",
            "type": "integer"
          },
          "raw_content": {
            "description": "",
            "type": "string"
          },
          "regions": {
            "description": "The region(s) of the members tagged in the Note / Interaction.",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "regulations": {
            "description": "The regulations that are associated with this note.",
            "items": {
              "example": "/api/regulation/1/",
              "type": "string"
            },
            "type": "array"
          },
          "relationship_status": {
            "description": "Current or former relationship",
            "type": "boolean"
          },
          "relationship_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name RelationshipType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "format": "int64",
            "type": "integer"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "searchable_date": {
            "description": "",
            "type": "string"
          },
          "social_media_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SocialMediaType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "format": "int64",
            "type": "integer"
          },
          "source_type": {
            "description": "Our best guess as to the source of a particular thing, whether internal to Quorum, a particular website, etc.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name UTMSourceType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22
            ],
            "format": "int64",
            "type": "integer"
          },
          "subject": {
            "description": "Subject of Message",
            "type": "string"
          },
          "submitting_org_name": {
            "description": "",
            "type": "string"
          },
          "supporter": {
            "description": "The newsupporter with which this note is associated.",
            "example": "/api/newsupporter/1/",
            "type": "string"
          },
          "supporter_action_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SupporterActionType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              7,
              8,
              10,
              11,
              12,
              15,
              17,
              18,
              19,
              23,
              26,
              100,
              101,
              102,
              103
            ],
            "format": "int64",
            "type": "integer"
          },
          "supporters": {
            "description": "The newsupporters that are associated with this note.",
            "items": {
              "example": "/api/newsupporter/1/",
              "type": "string"
            },
            "type": "array"
          },
          "supporters_count": {
            "description": "The number of supporters related to this note",
            "format": "int64",
            "type": "integer"
          },
          "tag_dict": {
            "description": "Stores the custom field information for the object",
            "type": "object"
          },
          "team_members": {
            "description": "The quorumusers that are associated with this note.",
            "items": {
              "example": "/api/user/1/",
              "type": "string"
            },
            "type": "array"
          },
          "team_members_count": {
            "description": "The number of team members related to this note",
            "format": "int64",
            "type": "integer"
          },
          "text": {
            "description": "The text of this note.",
            "type": "string"
          },
          "text_with_html": {
            "description": "",
            "type": "string"
          },
          "timestamp": {
            "description": "Various timestamps collected every time an action has been attempted to be delivered",
            "type": "object"
          },
          "unique_identifier": {
            "description": "The external (e.g. Salesforce ID) unique identifier",
            "type": "string"
          },
          "updated": {
            "description": "When the record was most recently updated.",
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "description": "The quorumuser with which this note is associated.",
            "example": "/api/user/1/",
            "type": "string"
          },
          "user_id": {
            "description": "The quorumuser with which this note is associated.",
            "example": "/api/user/1/",
            "type": "string"
          },
          "utm_campaign": {
            "description": "Identifies a specific product promotion or strategic campaign.",
            "type": "string"
          },
          "utm_content": {
            "description": "Identifies what specifically was clicked to bring the user to the site, such as a banner ad or a text link.",
            "type": "string"
          },
          "utm_medium": {
            "description": "Identifies what type of link was used, such as cost per click or email.",
            "type": "string"
          },
          "utm_source": {
            "description": "Identifies which site sent the traffic, and is a required UTM parameter.",
            "type": "string"
          },
          "utm_term": {
            "description": "Identifies search terms.",
            "type": "string"
          },
          "vote": {
            "description": "The vote with which this note is associated.",
            "example": "/api/vote/1/",
            "type": "string"
          },
          "votes": {
            "description": "The votes that are associated with this note.",
            "items": {
              "example": "/api/vote/1/",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NoteType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name NoteType, for an explanation of values.",
        "enum": [
          1,
          2,
          3
        ],
        "format": "int64",
        "type": "integer"
      },
      "Organization": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "account_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name AccountType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "format": "int64",
            "type": "integer"
          },
          "active_client": {
            "description": "",
            "type": "boolean"
          },
          "administrators": {
            "description": ""
          },
          "agreed_to_texting_user": {
            "description": "The quorumuser with which this organization is associated.",
            "example": "/api/user/1/",
            "type": "string"
          },
          "allowed_domains": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "allowed_user_domains": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "archived": {
            "description": "",
            "type": "boolean"
          },
          "auto_enrich_supporters": {
            "description": "",
            "type": "boolean"
          },
          "can_see_partners_users": {
            "description": "",
            "type": "boolean"
          },
          "can_use_independent_campaigns": {
            "description": "",
            "type": "boolean"
          },
          "created": {
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          "cs_managers": {
            "description": "The quorumusers that are associated with this organization.",
            "items": {
              "example": "/api/user/1/",
              "type": "string"
            },
            "type": "array"
          },
          "cs_managers_usernames": {
            "description": "",
            "type": "string"
          },
          "custom_alert_orderings": {
            "description": "This field requires special handling.",
            "type": "object"
          },
          "custom_session_timeout": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "date_archived": {
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          "datetime_agreed_to_texting": {
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          "default_domain": {
            "description": "",
            "type": "string"
          },
          "default_forward_recipient": {
            "description": "The quorumuser with which this organization is associated.",
            "example": "/api/user/1/",
            "type": "string"
          },
          "deliver_supporter_messages": {
            "description": "",
            "type": "boolean"
          },
          "email_limit": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "email_limit_percentage": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "i360_organization": {
            "description": "",
            "type": "boolean"
          },
          "i360_organization_and_quorum_client": {
            "description": "",
            "type": "boolean"
          },
          "id": {
            "description": "Quorum ID (Primary Key)",
            "format": "int64",
            "type": "integer"
          },
          "internal_interaction_types": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "internal_relationship_types": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "ip_addresses": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "is_approved": {
            "description": "",
            "type": "boolean"
          },
          "limit_to_cs_managers": {
            "description": "",
            "type": "boolean"
          },
          "lower_tier_bound": {
            "description": "",
            "format": "decimal",
            "type": "number"
          },
          "max_contacts": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "max_csv_size": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "max_email_alerts": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "max_members": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "max_projects": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "max_social_accounts": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "outbox_domain_dict": {
            "description": "This field requires special handling.",
            "type": "object"
          },
          "pad_unique_identifier": {
            "description": "",
            "type": "boolean"
          },
          "partner_names": {
            "description": ""
          },
          "partners": {
            "description": "The organizations that are associated with this organization.",
            "items": {
              "example": "/api/organization/1/",
              "type": "string"
            },
            "type": "array"
          },
          "phone_numbers": {
            "description": "The phonenumber with which this organization is associated.",
            "example": "/api/phonenumber/1/",
            "type": "string"
          },
          "qp_action_center": {
            "description": "",
            "type": "boolean"
          },
          "qp_consultants": {
            "description": "",
            "type": "boolean"
          },
          "qp_contacts_documents": {
            "description": "",
            "type": "boolean"
          },
          "qp_custom_contacts": {
            "description": "",
            "type": "boolean"
          },
          "qp_custom_data": {
            "description": "",
            "type": "boolean"
          },
          "qp_custom_events": {
            "description": "",
            "type": "boolean"
          },
          "qp_custom_outbox": {
            "description": "",
            "type": "boolean"
          },
          "qp_custom_permissions": {
            "description": "",
            "type": "boolean"
          },
          "qp_eu": {
            "description": "",
            "type": "boolean"
          },
          "qp_executives": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "qp_external_interactions": {
            "description": "",
            "type": "boolean"
          },
          "qp_external_relationship": {
            "description": "",
            "type": "boolean"
          },
          "qp_federal": {
            "description": "",
            "type": "boolean"
          },
          "qp_grassroots": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "qp_internal_relationship": {
            "description": "",
            "type": "boolean"
          },
          "qp_international": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "qp_legislation_page": {
            "description": "",
            "type": "boolean"
          },
          "qp_legislative_data": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "qp_legislative_profiles": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "qp_legislators": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "qp_live_chat": {
            "description": "",
            "type": "boolean"
          },
          "qp_local": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "qp_local_agendas": {
            "description": "",
            "type": "boolean"
          },
          "qp_media_monitoring": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "qp_media_relations": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "qp_official_documents": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "qp_officials_outbox": {
            "description": "",
            "type": "boolean"
          },
          "qp_pac": {
            "description": "",
            "type": "boolean"
          },
          "qp_project_management": {
            "description": "",
            "type": "boolean"
          },
          "qp_regulations": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "qp_staffers": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "qp_stakeholder": {
            "description": "",
            "type": "boolean"
          },
          "qp_states": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "qp_unique_ids_in_downloads": {
            "description": "",
            "type": "boolean"
          },
          "require_issue_on_interaction": {
            "description": "",
            "type": "boolean"
          },
          "require_issue_on_outbox": {
            "description": "",
            "type": "boolean"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "share_all_custom_regions": {
            "description": "",
            "type": "boolean"
          },
          "should_display_grassroots_registration_actions": {
            "description": "",
            "type": "boolean"
          },
          "should_limit_editing_notes_to_admins_and_creators": {
            "description": "",
            "type": "boolean"
          },
          "should_org_admin_see_all_org_data": {
            "description": "",
            "type": "boolean"
          },
          "should_share_with_partners_by_default": {
            "description": "",
            "type": "boolean"
          },
          "should_show_only_users_on_teams": {
            "description": "",
            "type": "boolean"
          },
          "sms_limit": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "sms_messages_toward_limit": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "sso_enabled_for_all_users": {
            "description": "",
            "type": "boolean"
          },
          "sso_profiles": {
            "description": "The ssoprofile with which this organization is associated.",
            "example": "/api/ssoprofile/1/",
            "type": "string"
          },
          "subdomain": {
            "description": "",
            "type": "string"
          },
          "trial_expiration": {
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          "updated": {
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          "upper_tier_bound": {
            "description": "",
            "format": "decimal",
            "type": "number"
          },
          "zapier_token": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Party": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Party, for an explanation of values.",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21
        ],
        "format": "int64",
        "type": "integer"
      },
      "PayScaleType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PayScaleType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "format": "int64",
        "type": "integer"
      },
      "PayrollFrequencyType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PayrollFrequencyType, for an explanation of values.",
        "enum": [
          1,
          3,
          4,
          5
        ],
        "format": "int64",
        "type": "integer"
      },
      "PersonStatus": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PersonStatus, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "format": "int64",
        "type": "integer"
      },
      "PersonType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PersonType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          6,
          7,
          8,
          9
        ],
        "format": "int64",
        "type": "integer"
      },
      "PossibleDurations": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PossibleDurations, for an explanation of values.",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          8,
          15,
          30,
          45,
          75,
          90,
          105,
          135,
          150,
          165,
          195,
          210,
          225
        ],
        "format": "int64",
        "type": "integer"
      },
      "PrivacyType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PrivacyType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "format": "int64",
        "type": "integer"
      },
      "Project": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "archived": {
            "description": "Whether the record has been soft-deleted or not.",
            "type": "boolean"
          },
          "can_be_tagged_to_interactions": {
            "description": "Whether this issue should be an option for tagging interactions to",
            "type": "boolean"
          },
          "categories": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "converted": {
            "description": "",
            "type": "boolean"
          },
          "cost": {
            "description": "Cost of the project",
            "format": "int64",
            "type": "integer"
          },
          "creator": {
            "description": "User id of the project creator",
            "example": "/api/user/1/",
            "type": "string"
          },
          "creator_edit_only": {
            "description": "Whether other users may edit project settings",
            "type": "boolean"
          },
          "creator_username": {
            "description": "",
            "type": "string"
          },
          "deadline": {
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          "default": {
            "description": "Whether or not this a default project",
            "type": "boolean"
          },
          "due_date": {
            "description": "Due date for project",
            "type": "string"
          },
          "grassroots_order": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "grassroots_page_layout_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name CampaignPageLayout, for an explanation of values.</p>",
            "enum": [
              1,
              2
            ],
            "format": "int64",
            "type": "integer"
          },
          "grassroots_vanity_url_slug": {
            "description": "The slug that will appear in grassroots URL, if desired. If not, use the id.",
            "type": "string"
          },
          "icon": {
            "description": "The string of the icon related to this project.",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "image_url": {
            "description": "Cached path of image url",
            "type": "string"
          },
          "is_carryover": {
            "description": "Whether or not to show carryover legislation",
            "type": "boolean"
          },
          "is_grassroots_issue": {
            "description": "",
            "type": "boolean"
          },
          "is_issue": {
            "description": "",
            "type": "boolean"
          },
          "is_limited_to_creator": {
            "description": "Used to permission objects to only the creator of the object",
            "type": "boolean"
          },
          "is_visible_to_partners": {
            "description": "Marks the object to be visible to users thatare on the partner organizations (organization.partners M2M)as well as the normal limited_to_teams users",
            "type": "boolean"
          },
          "issue_expert": {
            "description": "The name of the person who is the most knowledgeable in this issue area.",
            "type": "string"
          },
          "limited_to_teams": {
            "description": "The teams that are associated with this project.",
            "items": {
              "example": "/api/team/1/",
              "type": "string"
            },
            "type": "array"
          },
          "long_description": {
            "description": "html text of the page",
            "type": "string"
          },
          "magic_boards": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MagicBoardType, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                7,
                8,
                9,
                10,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "management_statistics": {
            "description": "JSON to store ratings for influencability, urgency, and importance",
            "type": "object"
          },
          "name": {
            "description": "Name of the project",
            "type": "string"
          },
          "number_of_campaign_actions": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "number_of_campaigns": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "number_of_interactions": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "organizations": {
            "description": "The organizations that are associated with this project.",
            "items": {
              "example": "/api/organization/1/",
              "type": "string"
            },
            "type": "array"
          },
          "parent": {
            "description": "The parent of this project",
            "example": "/api/project/1/",
            "type": "string"
          },
          "participants": {
            "description": "The quorumusers that are associated with this project.",
            "items": {
              "example": "/api/user/1/",
              "type": "string"
            },
            "type": "array"
          },
          "priority": {
            "description": "The project's priority score<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name ProjectRating, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int64",
            "type": "integer"
          },
          "project_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name ProjectType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int64",
            "type": "integer"
          },
          "region_tag": {
            "description": "The region field",
            "type": "string"
          },
          "related_region": {
            "description": "A field for regions related to the project.",
            "type": "string"
          },
          "remove_with_stance": {
            "description": "Whether a search terms list will show bills with a stance",
            "type": "boolean"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "search_terms": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "short_description": {
            "description": "A short description of the project",
            "type": "string"
          },
          "shown_in_table": {
            "description": "Whether this project appears in theproject_prioritization page or not",
            "type": "boolean"
          },
          "teams": {
            "description": "The teams that are associated with this project.",
            "items": {
              "example": "/api/team/1/",
              "type": "string"
            },
            "type": "array"
          },
          "year": {
            "description": "",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ProjectRating": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name ProjectRating, for an explanation of values.",
        "enum": [
          1,
          2,
          3
        ],
        "format": "int64",
        "type": "integer"
      },
      "ProjectType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name ProjectType, for an explanation of values.",
        "enum": [
          1,
          2,
          3
        ],
        "format": "int64",
        "type": "integer"
      },
      "PublicOrganization": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "_ph_intrado_last_updated": {
            "description": "The last time the Public Org object was updated from Intrado",
            "format": "date-time",
            "type": "string"
          },
          "_ph_intrado_outlet_id": {
            "description": "A UniqueID for an Outlet originating from the Intrado data source.",
            "format": "int64",
            "type": "integer"
          },
          "_ph_kw_exec_elect_ids": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "_ph_kw_leg_elect_ids": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "_ph_lc_org_id": {
            "description": "Leadership Connect's ID corresponding to a PublicOrganization.",
            "format": "int64",
            "type": "integer"
          },
          "_ph_ls_core_person_id": {
            "description": "For 'office-of' legislative orgs, the core_person_id of Legistorm's core_person entry for the person to whom this office belongs.",
            "format": "int64",
            "type": "integer"
          },
          "_ph_meta_organization_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MetaOrganizationType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17
            ],
            "format": "int64",
            "type": "integer"
          },
          "_ph_outlet_regions": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                1000
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "_ph_sector_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SectorType, for an explanation of values.</p>",
            "enum": [
              1,
              2
            ],
            "format": "int64",
            "type": "integer"
          },
          "_ph_website_domain": {
            "description": "The domain of the outlet website",
            "type": "string"
          },
          "abbrev": {
            "description": "An abbreviation for the public organization.",
            "type": "string"
          },
          "active": {
            "description": "",
            "type": "boolean"
          },
          "archived": {
            "description": "Whether the record has been soft-deleted or not.",
            "type": "boolean"
          },
          "billing_address": {
            "description": "",
            "type": "string"
          },
          "billing_city": {
            "description": "",
            "type": "string"
          },
          "billing_country": {
            "description": "",
            "type": "string"
          },
          "billing_postal_code": {
            "description": "",
            "type": "string"
          },
          "billing_state": {
            "description": "",
            "type": "string"
          },
          "billing_street": {
            "description": "",
            "type": "string"
          },
          "billing_street_2": {
            "description": "",
            "type": "string"
          },
          "county": {
            "description": "The county where this Public Organization resides",
            "example": "/api/county/1/",
            "type": "string"
          },
          "created": {
            "description": "When the record was originally created.",
            "format": "date-time",
            "type": "string"
          },
          "depth": {
            "description": "How deep this organization is. Depth of 0 corresponds to US Congress and the European Union, depth of 1 is Commission, House, etc.",
            "format": "int64",
            "type": "integer"
          },
          "email": {
            "description": "The pub org's email.",
            "type": "string"
          },
          "facebook_array": {
            "description": "The FacebookID of this Organization",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "facebook_url_array": {
            "description": "The url of the facebook page",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "formatted_phone": {
            "description": "",
            "type": "string"
          },
          "icon": {
            "description": "",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "image_b64_hash": {
            "description": "Used by update_static to check whether the image we process for a puborg is identical to the image file used in a previous run.",
            "type": "string"
          },
          "image_url": {
            "description": "The image url of this public org, like one you would find on Google image",
            "type": "string"
          },
          "instagram_array": {
            "description": "The instagram ID",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "intrado_audience_focus": {
            "description": "The Enum associated with Intrado's Audience Focus values<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name IntradoAudienceFocus, for an explanation of values.</p>",
            "enum": [
              1,
              2
            ],
            "format": "int64",
            "type": "integer"
          },
          "intrado_circulation": {
            "description": "Claimed audience size of an outlet. Circulation is driven by UVPD (unique visitors per day) for Websites or subscriber circulation numbers for print publications.",
            "format": "int64",
            "type": "integer"
          },
          "intrado_coverage": {
            "description": "Internal field.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name IntradoCoverage, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "format": "int64",
            "type": "integer"
          },
          "intrado_frequency": {
            "description": "Internal field.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name IntradoFrequency, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12
            ],
            "format": "int64",
            "type": "integer"
          },
          "intrado_language": {
            "description": "Internal field.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Language, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              9000
            ],
            "format": "int64",
            "type": "integer"
          },
          "intrado_media_type": {
            "description": "Internal field.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name IntradoMediaType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31
            ],
            "format": "int64",
            "type": "integer"
          },
          "intrado_outlet_tier": {
            "description": "Internal field.<p style=\"color:red\"><strong>NOTE:</strong>This field will be removed from the user API in the future. Please do not rely upon it.</p><p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name IntradoOutletTier, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21
            ],
            "format": "int64",
            "type": "integer"
          },
          "intrado_tags": {
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "last_updated": {
            "description": "The last time the Public Org object was updated from WIW",
            "format": "date-time",
            "type": "string"
          },
          "limited_to_teams": {
            "description": "The teams that are associated with this publicorganization.",
            "items": {
              "example": "/api/team/1/",
              "type": "string"
            },
            "type": "array"
          },
          "ln_category": {
            "description": "The type of news this source writes about as defined by LexisNexis.  Only relevant for news outlets.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MediaSourceCategory, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12
            ],
            "format": "int64",
            "type": "integer"
          },
          "ln_media_type": {
            "description": "The medium this source's news is delivered on as defined by LexisNexis.  Only relevant for news outlets.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MediaSourceType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15
            ],
            "format": "int64",
            "type": "integer"
          },
          "ln_rank": {
            "description": "The source's rank (importance) as defined by LexisNexis.  Only relevant for news outlets.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MediaSourceRank, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "format": "int64",
            "type": "integer"
          },
          "local_image_path": {
            "description": "The local path of the image for a person on Update server, which is often under settings.DATA_PATH",
            "type": "string"
          },
          "major_organization_types": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name MajorOrganizationType, for an explanation of values.</p>",
            "items": {
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19
              ],
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "medium_array": {
            "description": "The medium username",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "municipality": {
            "description": "The municipality/place where this Public Organization resides",
            "example": "/api/municipality/1/",
            "type": "string"
          },
          "name": {
            "description": "The name of this organization.",
            "type": "string"
          },
          "name_with_parent": {
            "description": "",
            "type": "string"
          },
          "organization": {
            "description": "The Quorum client associated with this record.",
            "example": "/api/organization/1/",
            "type": "string"
          },
          "organization_type": {
            "description": "The type of this public organization, such as legislative body or executive office.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PublicOrganizationType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              35,
              999,
              1001,
              1002,
              1003,
              1004,
              1020,
              1045,
              1046,
              1047,
              1048,
              1049,
              1050,
              1051,
              1052
            ],
            "format": "int64",
            "type": "integer"
          },
          "pac_org_associated_account_state_errors": {
            "description": ""
          },
          "pac_org_type": {
            "description": "The political action committee (PAC) type of this organization, if applicable.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name EntityType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              100,
              101,
              1001,
              1002,
              1003,
              1004,
              1005,
              1006,
              1007,
              1008,
              1009,
              1010,
              1011,
              1012,
              1013,
              1014,
              1015,
              1016,
              1017,
              1018,
              1019,
              3000,
              100000
            ],
            "format": "int64",
            "type": "integer"
          },
          "parent_organization": {
            "description": "The publicorganization with which this publicorganization is associated.",
            "example": "/api/publicorganization/1/",
            "type": "string"
          },
          "parent_organization_name": {
            "description": "",
            "type": "string"
          },
          "phone_number": {
            "description": "The telephone number for this organization.",
            "type": "string"
          },
          "region": {
            "description": "The region where this organization operates.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              1000
            ],
            "format": "int64",
            "type": "integer"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "s3_image_url": {
            "description": "The URL of this person's image/avatar that is actually rendered on the frontend (most likely an S3 URL with correct CORS)",
            "type": "string"
          },
          "secondary": {
            "description": "",
            "type": "boolean"
          },
          "select_label": {
            "description": "",
            "type": "string"
          },
          "shipping_address": {
            "description": "A shipping (default) address for the organization.",
            "type": "string"
          },
          "shipping_city": {
            "description": "",
            "type": "string"
          },
          "shipping_coordinates": {
            "description": "The Point (lat, lon) where this public org is based at, if any",
            "type": "string"
          },
          "shipping_country": {
            "description": "",
            "type": "string"
          },
          "shipping_postal_code": {
            "description": "",
            "type": "string"
          },
          "shipping_state": {
            "description": "",
            "type": "string"
          },
          "shipping_street": {
            "description": "",
            "type": "string"
          },
          "shipping_street_2": {
            "description": "",
            "type": "string"
          },
          "source_url": {
            "description": "The URL where we scraped data for this public organization. Primarily used for who-is-who pages for EU pub orgs.",
            "type": "string"
          },
          "source_urls": {
            "description": "Each URL on the web where this org can be found (via our consultants)",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tag_dict": {
            "description": "Stores the custom field information for the object",
            "type": "object"
          },
          "twitter_array": {
            "description": "The name of this Organization's twitter handle",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "unique_identifier": {
            "description": "The organization-specific unique identifier",
            "type": "string"
          },
          "updated": {
            "description": "When the record was most recently updated.",
            "format": "date-time",
            "type": "string"
          },
          "website": {
            "description": "Public Org Website",
            "type": "string"
          },
          "wikipedia_url": {
            "description": "The Wikipedia URL for this public org, if any",
            "type": "string"
          },
          "x_frame_options": {
            "description": "For Media Outlets, this enum denotes whether we can show iframes of articles from this source<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name XFrameOptionsType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              9,
              10,
              11
            ],
            "format": "int64",
            "type": "integer"
          },
          "youtube_array": {
            "description": "The name of the public org's YouTube channel",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PublicOrganizationType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PublicOrganizationType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          35,
          999,
          1001,
          1002,
          1003,
          1004,
          1020,
          1045,
          1046,
          1047,
          1048,
          1049,
          1050,
          1051,
          1052
        ],
        "format": "int64",
        "type": "integer"
      },
      "PushNotificationError": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PushNotificationError, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "format": "int64",
        "type": "integer"
      },
      "QuorumDataType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name QuorumDataType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          12,
          14,
          15,
          16,
          17,
          18,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          93,
          94,
          95,
          96,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          114,
          115,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
          123,
          124
        ],
        "format": "int64",
        "type": "integer"
      },
      "QuorumUser": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "date_joined": {
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "description": "",
            "type": "string"
          },
          "first_name": {
            "description": "",
            "type": "string"
          },
          "id": {
            "description": "Quorum ID (Primary Key)",
            "format": "int64",
            "type": "integer"
          },
          "is_active": {
            "description": "",
            "type": "boolean"
          },
          "last_name": {
            "description": "",
            "type": "string"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "teams": {
            "description": "The teams that are associated with this quorumuser.",
            "items": {
              "example": "/api/team/1/",
              "type": "string"
            },
            "type": "array"
          },
          "user_info": {
            "description": "The userinfo with which this quorumuser is associated.",
            "example": "/api/userinfo/1/",
            "type": "string"
          },
          "user_info__full_name": {
            "description": "",
            "type": "string"
          },
          "user_info__organization__id": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "user_info__organization__name": {
            "description": "",
            "type": "string"
          },
          "user_info__two_factor_status": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "username": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Region": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          93,
          94,
          95,
          96,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          209,
          210,
          211,
          212,
          213,
          214,
          215,
          216,
          217,
          218,
          219,
          220,
          221,
          222,
          223,
          224,
          225,
          1000
        ],
        "format": "int64",
        "type": "integer"
      },
      "RelationshipType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name RelationshipType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15
        ],
        "format": "int64",
        "type": "integer"
      },
      "RoleType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name RoleType, for an explanation of values.",
        "enum": [
          1,
          2,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          38,
          999
        ],
        "format": "int64",
        "type": "integer"
      },
      "SectorType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SectorType, for an explanation of values.",
        "enum": [
          1,
          2
        ],
        "format": "int64",
        "type": "integer"
      },
      "SenatorClass": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SenatorClass, for an explanation of values.",
        "enum": [
          1,
          2,
          3
        ],
        "format": "int64",
        "type": "integer"
      },
      "SenatorRank": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SenatorRank, for an explanation of values.",
        "enum": [
          1,
          2
        ],
        "format": "int64",
        "type": "integer"
      },
      "SendEmail": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "alert_cache": {
            "description": "Internal field used in alerts processing.  While it does represent a snapshot of information from the object, it should not be relied upon for external use as it may be stale without indication.",
            "type": "object"
          },
          "archived": {
            "description": "Whether the record has been soft-deleted or not.",
            "type": "boolean"
          },
          "bounces": {
            "description": "Number of times this email bounced",
            "format": "int64",
            "type": "integer"
          },
          "bulk_email": {
            "description": "The bulkemail with which this sendemail is associated.",
            "example": "/api/bulkemail/1/",
            "type": "string"
          },
          "cached_limited_to_teams": {
            "description": "Array of ids of teams this SendEmail is permissioned to",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "clicks": {
            "description": "Number of times links in email have been clicked",
            "format": "int64",
            "type": "integer"
          },
          "contact_organization": {
            "description": "",
            "type": "string"
          },
          "created": {
            "description": "When the record was originally created.",
            "format": "date-time",
            "type": "string"
          },
          "did_reply": {
            "description": "",
            "type": "boolean"
          },
          "email_address": {
            "description": "Send to email address.  Nullable because push notifications don't use this.",
            "type": "string"
          },
          "email_alert": {
            "description": "",
            "type": "boolean"
          },
          "external_id": {
            "description": "A field that allows users to match this send email to a sent email in an external system.",
            "type": "string"
          },
          "first_click": {
            "description": "timestamp for when the event occurred",
            "format": "date-time",
            "type": "string"
          },
          "first_open": {
            "description": "timestamp for when the event occurred",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "initial_opens": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "instant": {
            "description": "",
            "type": "boolean"
          },
          "link_dict": {
            "description": "the link -> count key",
            "type": "object"
          },
          "medium": {
            "description": "The medium of delivery of a Deliverable. Default is email.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name DeliveryMedium, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int64",
            "type": "integer"
          },
          "opens": {
            "description": "Number of times email has been opened",
            "format": "int64",
            "type": "integer"
          },
          "person": {
            "description": "The newperson with which this sendemail is associated.",
            "example": "/api/newperson/1/",
            "type": "string"
          },
          "person_id": {
            "description": "The newperson with which this sendemail is associated.",
            "example": "/api/newperson/1/",
            "type": "string"
          },
          "person_primary_organization": {
            "description": "",
            "type": "string"
          },
          "person_type": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "push_notification_error_enum": {
            "description": "The enum for the corresponding exception we received while sending this notification<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PushNotificationError, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "format": "int64",
            "type": "integer"
          },
          "push_notification_error_info": {
            "description": "The error message we received from the delivery network if there was one",
            "type": "string"
          },
          "push_notification_error_status_code": {
            "description": "The status code we received from the delivery network if there was an error",
            "format": "int64",
            "type": "integer"
          },
          "push_notification_extra": {
            "description": "The extra dict that we're passing along in the push notification",
            "type": "object"
          },
          "rcpt_dict": {
            "description": "The dict needed for sending in sparkpost",
            "type": "object"
          },
          "recipient_name": {
            "description": "First and last name of email recipient",
            "type": "string"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "sent": {
            "description": "Whether the SendEmail has been sent",
            "type": "boolean"
          },
          "sent_datetime": {
            "description": "The datetime that this deliverable was sent",
            "format": "date-time",
            "type": "string"
          },
          "sparkpost_id": {
            "description": "Unique id generated by Sparkpost after the email is sent",
            "type": "string"
          },
          "sparkpost_reject_reason": {
            "description": "Reject reason given by Sparkpost if email is sent and rejected",
            "type": "string"
          },
          "sparkpost_status": {
            "description": "Status given by Sparkpost after email is sent",
            "type": "string"
          },
          "staffer_id": {
            "description": "The None with which this sendemail is associated.",
            "example": "1/",
            "type": "string"
          },
          "supporter_id": {
            "description": "The newsupporter with which this sendemail is associated.",
            "example": "/api/newsupporter/1/",
            "type": "string"
          },
          "text": {
            "description": "",
            "type": "string"
          },
          "title": {
            "description": "",
            "type": "string"
          },
          "transmission_id": {
            "description": "Unique transmission id generated by Sparkpost after the email is sent",
            "type": "string"
          },
          "updated": {
            "description": "When the record was most recently updated.",
            "format": "date-time",
            "type": "string"
          },
          "view_in_browser_id": {
            "description": "Unique view_in_browser_id generated for each SendEmail",
            "type": "string"
          },
          "was_imported": {
            "description": "Whether the record was created via an import to the system.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SendEmailArchived": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "alert_cache": {
            "description": "Internal field used in alerts processing.  While it does represent a snapshot of information from the object, it should not be relied upon for external use as it may be stale without indication.",
            "type": "object"
          },
          "archived": {
            "description": "Whether the record has been soft-deleted or not.",
            "type": "boolean"
          },
          "bounces": {
            "description": "Number of times this email bounced",
            "format": "int64",
            "type": "integer"
          },
          "bulk_email": {
            "description": "The bulkemail with which this sendemailarchived is associated.",
            "example": "/api/bulkemail/1/",
            "type": "string"
          },
          "cached_limited_to_teams": {
            "description": "",
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "clicks": {
            "description": "Number of times links in email have been clicked",
            "format": "int64",
            "type": "integer"
          },
          "contact_organization": {
            "description": "",
            "type": "string"
          },
          "created": {
            "description": "When the record was originally created.",
            "format": "date-time",
            "type": "string"
          },
          "did_reply": {
            "description": "",
            "type": "boolean"
          },
          "email_address": {
            "description": "Send to email address.  Nullable because push notifications don't use this.",
            "type": "string"
          },
          "email_alert": {
            "description": "",
            "type": "boolean"
          },
          "external_id": {
            "description": "A field that allows users to match this send email to a sent email in an external system.",
            "type": "string"
          },
          "first_click": {
            "description": "timestamp for when the event occurred",
            "format": "date-time",
            "type": "string"
          },
          "first_open": {
            "description": "timestamp for when the event occurred",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "initial_opens": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "instant": {
            "description": "",
            "type": "boolean"
          },
          "link_dict": {
            "description": "the link -> count key",
            "type": "object"
          },
          "medium": {
            "description": "The medium of delivery of a Deliverable. Default is email.<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name DeliveryMedium, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int64",
            "type": "integer"
          },
          "opens": {
            "description": "Number of times email has been opened",
            "format": "int64",
            "type": "integer"
          },
          "person": {
            "description": "The newperson with which this sendemailarchived is associated.",
            "example": "/api/newperson/1/",
            "type": "string"
          },
          "person_id": {
            "description": "The newperson with which this sendemailarchived is associated.",
            "example": "/api/newperson/1/",
            "type": "string"
          },
          "person_primary_organization": {
            "description": "",
            "type": "string"
          },
          "person_type": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "push_notification_error_enum": {
            "description": "The enum for the corresponding exception we received while sending this notification<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name PushNotificationError, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "format": "int64",
            "type": "integer"
          },
          "push_notification_error_info": {
            "description": "The error message we received from the delivery network if there was one",
            "type": "string"
          },
          "push_notification_error_status_code": {
            "description": "The status code we received from the delivery network if there was an error",
            "format": "int64",
            "type": "integer"
          },
          "push_notification_extra": {
            "description": "The extra dict that we're passing along in the push notification",
            "type": "object"
          },
          "rcpt_dict": {
            "description": "The dict needed for sending in sparkpost",
            "type": "object"
          },
          "recipient_name": {
            "description": "First and last name of email recipient",
            "type": "string"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "sent": {
            "description": "Whether the SendEmail has been sent",
            "type": "boolean"
          },
          "sent_datetime": {
            "description": "The datetime that this deliverable was sent",
            "format": "date-time",
            "type": "string"
          },
          "sparkpost_id": {
            "description": "Unique id generated by Sparkpost after the email is sent",
            "type": "string"
          },
          "sparkpost_reject_reason": {
            "description": "Reject reason given by Sparkpost if email is sent and rejected",
            "type": "string"
          },
          "sparkpost_status": {
            "description": "Status given by Sparkpost after email is sent",
            "type": "string"
          },
          "staffer_id": {
            "description": "The None with which this sendemailarchived is associated.",
            "example": "1/",
            "type": "string"
          },
          "supporter_id": {
            "description": "The newsupporter with which this sendemailarchived is associated.",
            "example": "/api/newsupporter/1/",
            "type": "string"
          },
          "text": {
            "description": "",
            "type": "string"
          },
          "title": {
            "description": "",
            "type": "string"
          },
          "transmission_id": {
            "description": "Unique transmission id generated by Sparkpost after the email is sent",
            "type": "string"
          },
          "updated": {
            "description": "When the record was most recently updated.",
            "format": "date-time",
            "type": "string"
          },
          "view_in_browser_id": {
            "description": "Unique view_in_browser_id generated for each SendEmail",
            "type": "string"
          },
          "was_imported": {
            "description": "Whether the record was created via an import to the system.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SocialMediaType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SocialMediaType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "format": "int64",
        "type": "integer"
      },
      "SpecificExecutiveRoleType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SpecificExecutiveRoleType, for an explanation of values.",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          93,
          94,
          95,
          96,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          114,
          115,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189,
          190,
          191,
          193,
          193,
          194,
          195,
          196
        ],
        "format": "int64",
        "type": "integer"
      },
      "SponsorType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SponsorType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          101,
          102,
          103,
          104,
          105,
          106
        ],
        "format": "int64",
        "type": "integer"
      },
      "StafferType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name StafferType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110
        ],
        "format": "int64",
        "type": "integer"
      },
      "SupporterActionStatus": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SupporterActionStatus, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "format": "int64",
        "type": "integer"
      },
      "SupporterActionType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SupporterActionType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          7,
          8,
          10,
          11,
          12,
          15,
          17,
          18,
          19,
          23,
          26,
          100,
          101,
          102,
          103
        ],
        "format": "int64",
        "type": "integer"
      },
      "SupporterType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name SupporterType, for an explanation of values.",
        "enum": [
          1,
          2
        ],
        "format": "int64",
        "type": "integer"
      },
      "TagType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name TagType, for an explanation of values.",
        "enum": [
          1,
          2,
          5,
          6,
          7,
          8
        ],
        "format": "int64",
        "type": "integer"
      },
      "Team": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "archived": {
            "description": "Whether the record has been soft-deleted or not.",
            "type": "boolean"
          },
          "default": {
            "description": "Whether or not this is a default team",
            "type": "boolean"
          },
          "id": {
            "description": "The Quorum primary key for this record; guaranteed to be persistent and unique across all objects at this endpoint.",
            "format": "int64",
            "type": "integer"
          },
          "members": {
            "description": "The quorumusers that are associated with this team.",
            "items": {
              "example": "/api/user/1/",
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "",
            "type": "string"
          },
          "organization": {
            "description": "The Quorum client associated with this record.",
            "example": "/api/organization/1/",
            "type": "string"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TransactionMethodType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name TransactionMethodType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12
        ],
        "format": "int64",
        "type": "integer"
      },
      "UTMSourceType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name UTMSourceType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22
        ],
        "format": "int64",
        "type": "integer"
      },
      "Vote": {
        "properties": {
          "_extra": {
            "description": "The additional content, if any, resulting from using the <code>dehydrate_extra</code> parameter on the API request. Each of the parameters passed will be represented by a key, with the resulting output for that parameter encoded as the value.",
            "type": "object"
          },
          "alert_cache": {
            "description": "This field requires special handling.",
            "type": "object"
          },
          "all_votes": {
            "description": "The newpersons that are associated with this vote.",
            "items": {
              "example": "/api/newperson/1/",
              "type": "string"
            },
            "type": "array"
          },
          "category": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name VoteCategory, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16
            ],
            "format": "int64",
            "type": "integer"
          },
          "chamber": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name CongressChamber, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "format": "int64",
            "type": "integer"
          },
          "congress_number": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "created": {
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          "democrat_result": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name VoteResultType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "format": "int64",
            "type": "integer"
          },
          "display_name": {
            "description": "",
            "type": "string"
          },
          "fts_index": {
            "description": "",
            "type": "string"
          },
          "icon": {
            "description": "",
            "type": "string"
          },
          "id": {
            "description": "Quorum ID (Primary Key)",
            "format": "int64",
            "type": "integer"
          },
          "majority_result": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name VoteResultType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "format": "int64",
            "type": "integer"
          },
          "missed_votes": {
            "description": "The newpersons that are associated with this vote.",
            "items": {
              "example": "/api/newperson/1/",
              "type": "string"
            },
            "type": "array"
          },
          "missing_data": {
            "description": "",
            "type": "boolean"
          },
          "nay_votes": {
            "description": "The newpersons that are associated with this vote.",
            "items": {
              "example": "/api/newperson/1/",
              "type": "string"
            },
            "type": "array"
          },
          "newly_index": {
            "description": "",
            "type": "boolean"
          },
          "number": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "openstates_id": {
            "description": "",
            "type": "string"
          },
          "original_question": {
            "description": "",
            "type": "string"
          },
          "other_votes": {
            "description": "The newpersons that are associated with this vote.",
            "items": {
              "example": "/api/newperson/1/",
              "type": "string"
            },
            "type": "array"
          },
          "present_votes": {
            "description": "The newpersons that are associated with this vote.",
            "items": {
              "example": "/api/newperson/1/",
              "type": "string"
            },
            "type": "array"
          },
          "question": {
            "description": "",
            "type": "string"
          },
          "question_details": {
            "description": "",
            "type": "string"
          },
          "region": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name Region, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              1000
            ],
            "format": "int64",
            "type": "integer"
          },
          "region_session": {
            "description": "The legsession with which this vote is associated.",
            "example": "/api/legsession/1/",
            "type": "string"
          },
          "related_amendment": {
            "description": "The newamendment with which this vote is associated.",
            "example": "/api/newamendment/1/",
            "type": "string"
          },
          "related_bill": {
            "description": "The newbill with which this vote is associated.",
            "example": "/api/newbill/1/",
            "type": "string"
          },
          "republican_result": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name VoteResultType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "format": "int64",
            "type": "integer"
          },
          "required": {
            "description": "",
            "type": "string"
          },
          "resource_uri": {
            "description": "",
            "type": "string"
          },
          "result": {
            "description": "",
            "type": "string"
          },
          "result_type": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name VoteResultType, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "format": "int64",
            "type": "integer"
          },
          "session": {
            "description": "",
            "type": "string"
          },
          "source": {
            "description": "<p>See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name VoteSource, for an explanation of values.</p>",
            "enum": [
              1,
              2,
              3
            ],
            "format": "int64",
            "type": "integer"
          },
          "source_link": {
            "description": "",
            "type": "string"
          },
          "total_abstain": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "total_all": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "total_dem_abstain": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "total_dem_all": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "total_dem_minus": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "total_dem_other": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "total_dem_plus": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "total_minus": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "total_other": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "total_plus": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "total_rep_abstain": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "total_rep_all": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "total_rep_minus": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "total_rep_other": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "total_rep_plus": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "vote_type": {
            "description": "",
            "type": "string"
          },
          "voted_against_majority": {
            "description": ""
          },
          "yea_votes": {
            "description": "The newpersons that are associated with this vote.",
            "items": {
              "example": "/api/newperson/1/",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "VoteCategory": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name VoteCategory, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16
        ],
        "format": "int64",
        "type": "integer"
      },
      "VoteResultType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name VoteResultType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "format": "int64",
        "type": "integer"
      },
      "VoteSource": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name VoteSource, for an explanation of values.",
        "enum": [
          1,
          2,
          3
        ],
        "format": "int64",
        "type": "integer"
      },
      "XFrameOptionsType": {
        "description": "See the Enumeration Documentation CSV file located at <a href=\"https://quorum-static.s3.amazonaws.com/media/Quorum_API_Enumeration_Values.csv\">Quorum_API_Enumeration_Values.csv</a>, name XFrameOptionsType, for an explanation of values.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          9,
          10,
          11
        ],
        "format": "int64",
        "type": "integer"
      },
      "activate_and_set_password": {},
      "add_related": {},
      "change_password": {},
      "change_reg": {},
      "change_search_settings": {},
      "change_sidebar_settings": {},
      "cspan_download_transcript": {},
      "cspan_get_next_channel_event": {},
      "cspan_get_prev_channel_event": {},
      "cspan_section_inline_onclick": {},
      "cy_testing__generate_new_grassroots_user_info": {},
      "cy_testing__reset_supporter": {},
      "cy_testing__simulate_text_link": {},
      "delete_group": {},
      "get_archived": {},
      "get_initial_player_start_time": {},
      "get_interaction_supporters": {},
      "get_placeholders": {},
      "get_requested_section_order": {},
      "get_searchterms": {},
      "get_tveyes_media_player_url": {},
      "get_tveyes_media_player_url_offset": {},
      "grassroots_login": {},
      "grassroots_logout": {},
      "grassroots_recover_account": {},
      "grassroots_register": {},
      "grassroots_reset_password": {},
      "grassroots_update_information": {},
      "move_related_to_parent": {},
      "patch_archived": {},
      "push_notification_token": {},
      "quick_search": {},
      "related_bill": {},
      "remove_related": {},
      "reset_push_notification_unseen_count": {},
      "sparkpost_message_event": {},
      "sparkpost_relay_event": {},
      "startup": {},
      "update_accepted_texting_terms": {},
      "update_campaigns": {},
      "update_org_settings_as_org_admin": {},
      "update_user_information": {},
      "validate_keyword": {},
      "vote_details": {}
    }
  }
}